// !DO NOT EDIT THIS FILE!
// This source file is generated by Oracle tools
// Contents may be subject to change
// For reporting problems, use the following
// Version = Oracle WebServices (10.1.3.4.0, build 080709.0800.28953)

package webservices.ProxyBanrural.runtime;

import oracle.j2ee.ws.common.streaming.*;
import oracle.j2ee.ws.common.encoding.*;
import oracle.j2ee.ws.common.soap.SOAPEncodingConstants;
import oracle.j2ee.ws.common.encoding.literal.*;
import oracle.j2ee.ws.common.soap.streaming.*;
import oracle.j2ee.ws.common.soap.message.*;
import oracle.j2ee.ws.common.soap.SOAPVersion;
import oracle.j2ee.ws.common.soap.SOAPEnvelopeConstants;
import oracle.j2ee.ws.common.wsdl.document.schema.SchemaConstants;
import oracle.j2ee.ws.common.util.exception.JAXRPCExceptionBase;
import oracle.j2ee.ws.common.util.SoapWithAttachmentsUtil;
import javax.xml.namespace.QName;
import java.rmi.RemoteException;
import java.util.Iterator;
import java.lang.reflect.*;
import oracle.j2ee.ws.client.*;
import oracle.j2ee.ws.client.http.*;
import oracle.webservices.transport.*;
import oracle.webservices.*;
import oracle.webservices.attachments.*;
import javax.xml.rpc.handler.*;
import javax.xml.rpc.JAXRPCException;
import javax.xml.rpc.soap.SOAPFaultException;

public class ValidarCuentaSoapHttp_Stub
    extends oracle.j2ee.ws.client.StubBase
    implements webservices.ProxyBanrural.ValidarCuenta_PortType {
    
    
    /*
     *  public constructor
     */
    public ValidarCuentaSoapHttp_Stub(HandlerChain handlerChain) {
        super(handlerChain);
        //_setProperty(ENDPOINT_ADDRESS_PROPERTY, "http://localhost:7777/WsValidarCuenta/validarCuentaSoapHttpPort");
        _setProperty(ENDPOINT_ADDRESS_PROPERTY, "http://apps3.usac.edu.gt:7777/WsValidarCuenta/validarCuentaSoapHttpPort");
        setSoapVersion(SOAPVersion.SOAP_11);
        setServiceName( new QName("http://webservice/","validarCuenta"));
        setPortName( new QName("http://webservice/","validarCuentaSoapHttpPort"));
        setupConfig("webservices/ProxyBanrural/runtime/ValidarCuentaSoapHttp_Stub.xml");
    }
    
    /*
     *  implementation of validaCuentaBnrl
     */
    public javax.xml.soap.SOAPElement validaCuentaBnrl(java.lang.String string_1, java.lang.String string_2, java.lang.String string_3, java.lang.String string_4, java.lang.String string_5, java.lang.String string_6)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(validaCuentaBnrl_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","validaCuentaBnrl"));
            
            webservices.ProxyBanrural.ValidaCuentaBnrlElement _myValidaCuentaBnrlElement = new webservices.ProxyBanrural.ValidaCuentaBnrlElement();
            _myValidaCuentaBnrlElement.setString_1(string_1);
            _myValidaCuentaBnrlElement.setString_2(string_2);
            _myValidaCuentaBnrlElement.setString_3(string_3);
            _myValidaCuentaBnrlElement.setString_4(string_4);
            _myValidaCuentaBnrlElement.setString_5(string_5);
            _myValidaCuentaBnrlElement.setString_6(string_6);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_validaCuentaBnrl_validaCuentaBnrlElement_QNAME);
            _bodyBlock.setValue(_myValidaCuentaBnrlElement);
            _bodyBlock.setSerializer(myns1_validaCuentaBnrlElement__ValidaCuentaBnrlElement_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://webservice//validaCuentaBnrl");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            webservices.ProxyBanrural.ValidaCuentaBnrlResponseElement _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (webservices.ProxyBanrural.ValidaCuentaBnrlResponseElement)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (webservices.ProxyBanrural.ValidaCuentaBnrlResponseElement)_responseObj;
            }
            
            return _result.getResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of validaCuenta2
     */
    public javax.xml.soap.SOAPElement validaCuenta2(java.lang.String string_1)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(validaCuenta2_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","validaCuenta2"));
            
            webservices.ProxyBanrural.ValidaCuenta2Element _myValidaCuenta2Element = new webservices.ProxyBanrural.ValidaCuenta2Element();
            _myValidaCuenta2Element.setString_1(string_1);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_validaCuenta2_validaCuenta2Element_QNAME);
            _bodyBlock.setValue(_myValidaCuenta2Element);
            _bodyBlock.setSerializer(myns1_validaCuenta2Element__ValidaCuenta2Element_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://webservice//validaCuenta2");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            webservices.ProxyBanrural.ValidaCuenta2ResponseElement _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (webservices.ProxyBanrural.ValidaCuenta2ResponseElement)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (webservices.ProxyBanrural.ValidaCuenta2ResponseElement)_responseObj;
            }
            
            return _result.getResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of validaCuenta
     */
    public java.lang.String validaCuenta(java.lang.String numeroCuenta)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(ValidaCuenta_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","ValidaCuenta"));
            
            webservices.ProxyBanrural.ValidaCuentaElement _myValidaCuentaElement = new webservices.ProxyBanrural.ValidaCuentaElement();
            _myValidaCuentaElement.setNumeroCuenta(numeroCuenta);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_ValidaCuenta_ValidaCuentaElement_QNAME);
            _bodyBlock.setValue(_myValidaCuentaElement);
            _bodyBlock.setSerializer(myns1_ValidaCuentaElement__ValidaCuentaElement_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://webservice//ValidaCuenta");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            webservices.ProxyBanrural.ValidaCuentaResponseElement _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (webservices.ProxyBanrural.ValidaCuentaResponseElement)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (webservices.ProxyBanrural.ValidaCuentaResponseElement)_responseObj;
            }
            
            return _result.getResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getURL
     */
    public java.lang.String getURL(java.lang.String string_1)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(getURL_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","getURL"));
            
            webservices.ProxyBanrural.GetURLElement _myGetURLElement = new webservices.ProxyBanrural.GetURLElement();
            _myGetURLElement.setString_1(string_1);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_getURL_getURLElement_QNAME);
            _bodyBlock.setValue(_myGetURLElement);
            _bodyBlock.setSerializer(myns1_getURLElement__GetURLElement_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://webservice//getURL");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            webservices.ProxyBanrural.GetURLResponseElement _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (webservices.ProxyBanrural.GetURLResponseElement)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (webservices.ProxyBanrural.GetURLResponseElement)_responseObj;
            }
            
            return _result.getResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    
    /*
     *  this method deserializes the request/response structure in the body
     */
    protected void _readFirstBodyElement(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState  state) throws Exception {
        int opcode = state.getRequest().getOperationCode();
        switch (opcode) {
            case validaCuentaBnrl_OPCODE:
                _deserialize_validaCuentaBnrl(bodyReader, deserializationContext, state);
                break;
            case validaCuenta2_OPCODE:
                _deserialize_validaCuenta2(bodyReader, deserializationContext, state);
                break;
            case ValidaCuenta_OPCODE:
                _deserialize_ValidaCuenta(bodyReader, deserializationContext, state);
                break;
            case getURL_OPCODE:
                _deserialize_getURL(bodyReader, deserializationContext, state);
                break;
            default:
                throw new SenderException("sender.response.unrecognizedOperation", Integer.toString(opcode));
        }
    }
    
    
    
    /*
     * This method deserializes the body of the validaCuentaBnrl operation.
     */
    private void _deserialize_validaCuentaBnrl(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myValidaCuentaBnrlResponseElementObj =
                myns1_validaCuentaBnrlResponseElement__ValidaCuentaBnrlResponseElement_LiteralSerializer.deserialize(ns1_validaCuentaBnrl_validaCuentaBnrlResponseElement_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_validaCuentaBnrl_validaCuentaBnrlResponseElement_QNAME);
            bodyBlock.setValue(myValidaCuentaBnrlResponseElementObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the validaCuenta2 operation.
     */
    private void _deserialize_validaCuenta2(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myValidaCuenta2ResponseElementObj =
                myns1_validaCuenta2ResponseElement__ValidaCuenta2ResponseElement_LiteralSerializer.deserialize(ns1_validaCuenta2_validaCuenta2ResponseElement_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_validaCuenta2_validaCuenta2ResponseElement_QNAME);
            bodyBlock.setValue(myValidaCuenta2ResponseElementObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the ValidaCuenta operation.
     */
    private void _deserialize_ValidaCuenta(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myValidaCuentaResponseElementObj =
                myns1_ValidaCuentaResponseElement__ValidaCuentaResponseElement_LiteralSerializer.deserialize(ns1_ValidaCuenta_ValidaCuentaResponseElement_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_ValidaCuenta_ValidaCuentaResponseElement_QNAME);
            bodyBlock.setValue(myValidaCuentaResponseElementObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the getURL operation.
     */
    private void _deserialize_getURL(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetURLResponseElementObj =
                myns1_getURLResponseElement__GetURLResponseElement_LiteralSerializer.deserialize(ns1_getURL_getURLResponseElement_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getURL_getURLResponseElement_QNAME);
            bodyBlock.setValue(myGetURLResponseElementObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    
    
    
    public String _getEncodingStyle() {
        return SOAPEncodingConstants.getSOAPEncodingConstants(soapVersion).getURIEncoding();
    }
    
    public void _setEncodingStyle(String encodingStyle) {
        throw new UnsupportedOperationException("cannot set encoding style");
    }
    
    public ClientTransport getClientTransport() {
        return super._getTransport();
    }
    
    
    
    
    
    /*
     * This method returns an array containing (prefix, nsURI) pairs.
     */
    protected String[] _getNamespaceDeclarations() {
        return myNamespace_declarations;
    }
    
    /*
     * This method returns an array containing the names of the headers we understand.
     */
    public QName[] _getUnderstoodHeaders() {
        return understoodHeaderNames;
    }
    
    /*
     * This method handles the case of an empty SOAP body.
     */
    protected void _handleEmptyBody(XMLReader reader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
    }
    
    public void _initialize(InternalTypeMappingRegistry registry) throws Exception {
        super._initialize(registry);
        myns1_getURLResponseElement__GetURLResponseElement_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", webservices.ProxyBanrural.GetURLResponseElement.class, ns1_getURLResponseElement_TYPE_QNAME);
        myns1_validaCuentaBnrlResponseElement__ValidaCuentaBnrlResponseElement_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", webservices.ProxyBanrural.ValidaCuentaBnrlResponseElement.class, ns1_validaCuentaBnrlResponseElement_TYPE_QNAME);
        myns1_validaCuentaBnrlElement__ValidaCuentaBnrlElement_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", webservices.ProxyBanrural.ValidaCuentaBnrlElement.class, ns1_validaCuentaBnrlElement_TYPE_QNAME);
        myns1_validaCuenta2Element__ValidaCuenta2Element_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", webservices.ProxyBanrural.ValidaCuenta2Element.class, ns1_validaCuenta2Element_TYPE_QNAME);
        myns1_ValidaCuentaResponseElement__ValidaCuentaResponseElement_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", webservices.ProxyBanrural.ValidaCuentaResponseElement.class, ns1_ValidaCuentaResponseElement_TYPE_QNAME);
        myns1_ValidaCuentaElement__ValidaCuentaElement_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", webservices.ProxyBanrural.ValidaCuentaElement.class, ns1_ValidaCuentaElement_TYPE_QNAME);
        myns1_getURLElement__GetURLElement_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", webservices.ProxyBanrural.GetURLElement.class, ns1_getURLElement_TYPE_QNAME);
        myns1_validaCuenta2ResponseElement__ValidaCuenta2ResponseElement_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", webservices.ProxyBanrural.ValidaCuenta2ResponseElement.class, ns1_validaCuenta2ResponseElement_TYPE_QNAME);
    }
    
    private static final QName _portName = new QName("http://webservice/", "validarCuentaSoapHttpPort");
    private static final int validaCuentaBnrl_OPCODE = 0;
    private static final int validaCuenta2_OPCODE = 1;
    private static final int ValidaCuenta_OPCODE = 2;
    private static final int getURL_OPCODE = 3;
    private static final QName ns1_validaCuentaBnrl_validaCuentaBnrlElement_QNAME = new QName("http://webservice/", "validaCuentaBnrlElement");
    private static final QName ns1_validaCuentaBnrlElement_TYPE_QNAME = new QName("http://webservice/", "validaCuentaBnrlElement");
    private CombinedSerializer myns1_validaCuentaBnrlElement__ValidaCuentaBnrlElement_LiteralSerializer;
    private static final QName ns1_validaCuentaBnrl_validaCuentaBnrlResponseElement_QNAME = new QName("http://webservice/", "validaCuentaBnrlResponseElement");
    private static final QName ns1_validaCuentaBnrlResponseElement_TYPE_QNAME = new QName("http://webservice/", "validaCuentaBnrlResponseElement");
    private CombinedSerializer myns1_validaCuentaBnrlResponseElement__ValidaCuentaBnrlResponseElement_LiteralSerializer;
    private static final QName ns1_validaCuenta2_validaCuenta2Element_QNAME = new QName("http://webservice/", "validaCuenta2Element");
    private static final QName ns1_validaCuenta2Element_TYPE_QNAME = new QName("http://webservice/", "validaCuenta2Element");
    private CombinedSerializer myns1_validaCuenta2Element__ValidaCuenta2Element_LiteralSerializer;
    private static final QName ns1_validaCuenta2_validaCuenta2ResponseElement_QNAME = new QName("http://webservice/", "validaCuenta2ResponseElement");
    private static final QName ns1_validaCuenta2ResponseElement_TYPE_QNAME = new QName("http://webservice/", "validaCuenta2ResponseElement");
    private CombinedSerializer myns1_validaCuenta2ResponseElement__ValidaCuenta2ResponseElement_LiteralSerializer;
    private static final QName ns1_ValidaCuenta_ValidaCuentaElement_QNAME = new QName("http://webservice/", "ValidaCuentaElement");
    private static final QName ns1_ValidaCuentaElement_TYPE_QNAME = new QName("http://webservice/", "ValidaCuentaElement");
    private CombinedSerializer myns1_ValidaCuentaElement__ValidaCuentaElement_LiteralSerializer;
    private static final QName ns1_ValidaCuenta_ValidaCuentaResponseElement_QNAME = new QName("http://webservice/", "ValidaCuentaResponseElement");
    private static final QName ns1_ValidaCuentaResponseElement_TYPE_QNAME = new QName("http://webservice/", "ValidaCuentaResponseElement");
    private CombinedSerializer myns1_ValidaCuentaResponseElement__ValidaCuentaResponseElement_LiteralSerializer;
    private static final QName ns1_getURL_getURLElement_QNAME = new QName("http://webservice/", "getURLElement");
    private static final QName ns1_getURLElement_TYPE_QNAME = new QName("http://webservice/", "getURLElement");
    private CombinedSerializer myns1_getURLElement__GetURLElement_LiteralSerializer;
    private static final QName ns1_getURL_getURLResponseElement_QNAME = new QName("http://webservice/", "getURLResponseElement");
    private static final QName ns1_getURLResponseElement_TYPE_QNAME = new QName("http://webservice/", "getURLResponseElement");
    private CombinedSerializer myns1_getURLResponseElement__GetURLResponseElement_LiteralSerializer;
    private static final String[] myNamespace_declarations =
                                        new String[] {
                                            "ns0", "http://webservice/"
                                        };
    
    private static final QName[] understoodHeaderNames = new QName[] {  };
    
}
