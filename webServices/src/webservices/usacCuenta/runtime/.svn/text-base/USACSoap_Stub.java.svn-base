// !DO NOT EDIT THIS FILE!
// This source file is generated by Oracle tools
// Contents may be subject to change
// For reporting problems, use the following
// Version = Oracle WebServices (10.1.3.4.0, build 080709.0800.28953)

package webservices.usacCuenta.runtime;

import oracle.j2ee.ws.common.streaming.*;
import oracle.j2ee.ws.common.encoding.*;
import oracle.j2ee.ws.common.soap.SOAPEncodingConstants;
import oracle.j2ee.ws.common.encoding.literal.*;
import oracle.j2ee.ws.common.soap.streaming.*;
import oracle.j2ee.ws.common.soap.message.*;
import oracle.j2ee.ws.common.soap.SOAPVersion;
import oracle.j2ee.ws.common.soap.SOAPEnvelopeConstants;
import oracle.j2ee.ws.common.wsdl.document.schema.SchemaConstants;
import oracle.j2ee.ws.common.util.exception.JAXRPCExceptionBase;
import oracle.j2ee.ws.common.util.SoapWithAttachmentsUtil;
import javax.xml.namespace.QName;
import java.rmi.RemoteException;
import java.util.Iterator;
import java.lang.reflect.*;
import oracle.j2ee.ws.client.*;
import oracle.j2ee.ws.client.http.*;
import oracle.webservices.transport.*;
import oracle.webservices.*;
import oracle.webservices.attachments.*;
import javax.xml.rpc.handler.*;
import javax.xml.rpc.JAXRPCException;
import javax.xml.rpc.soap.SOAPFaultException;

public class USACSoap_Stub
    extends oracle.j2ee.ws.client.StubBase
    implements webservices.usacCuenta.USACSoap {
    
    
    /*
     *  public constructor
     */
    public USACSoap_Stub(HandlerChain handlerChain) {
        super(handlerChain);
        //_setProperty(ENDPOINT_ADDRESS_PROPERTY, "http://192.168.4.86/webservices/usac/usac.asmx"); -- Cambio por nuevo servidor.
          _setProperty(ENDPOINT_ADDRESS_PROPERTY, "https://banrural.usac.edu.gt/webservices/usac/usac.asmx"); 
        setSoapVersion(SOAPVersion.SOAP_11);
        setServiceName( new QName("http://banrural.com.gt/usac/usac","USAC"));
        setPortName( new QName("http://banrural.com.gt/usac/usac","USACSoap"));
        setupConfig("webservices/usacCuenta/runtime/USACSoap_Stub.xml");
    }
    
    /*
     *  implementation of validaCuenta
     */
    public javax.xml.soap.SOAPElement validaCuenta(java.lang.String numeroCuenta, java.lang.String cedula, java.lang.String nombre, java.lang.String papellido, java.lang.String sapellido)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(ValidaCuenta_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","ValidaCuenta"));
            
            webservices.usacCuenta.ValidaCuenta _myValidaCuenta = new webservices.usacCuenta.ValidaCuenta();
            _myValidaCuenta.setNumeroCuenta(numeroCuenta);
            _myValidaCuenta.setCedula(cedula);
            _myValidaCuenta.setNombre(nombre);
            _myValidaCuenta.setPapellido(papellido);
            _myValidaCuenta.setSapellido(sapellido);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_ValidaCuenta_ValidaCuenta_QNAME);
            _bodyBlock.setValue(_myValidaCuenta);
            _bodyBlock.setSerializer(myns1_ValidaCuenta__ValidaCuenta_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://banrural.com.gt/usac/usac/ValidaCuenta");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            webservices.usacCuenta.ValidaCuentaResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (webservices.usacCuenta.ValidaCuentaResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (webservices.usacCuenta.ValidaCuentaResponse)_responseObj;
            }
            
            return _result.getValidaCuentaResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    
    /*
     *  this method deserializes the request/response structure in the body
     */
    protected void _readFirstBodyElement(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState  state) throws Exception {
        int opcode = state.getRequest().getOperationCode();
        switch (opcode) {
            case ValidaCuenta_OPCODE:
                _deserialize_ValidaCuenta(bodyReader, deserializationContext, state);
                break;
            default:
                throw new SenderException("sender.response.unrecognizedOperation", Integer.toString(opcode));
        }
    }
    
    
    
    /*
     * This method deserializes the body of the ValidaCuenta operation.
     */
    private void _deserialize_ValidaCuenta(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myValidaCuentaResponseObj =
                myns1_ValidaCuentaResponse__ValidaCuentaResponse_LiteralSerializer.deserialize(ns1_ValidaCuenta_ValidaCuentaResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_ValidaCuenta_ValidaCuentaResponse_QNAME);
            bodyBlock.setValue(myValidaCuentaResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    
    
    
    public String _getEncodingStyle() {
        return SOAPEncodingConstants.getSOAPEncodingConstants(soapVersion).getURIEncoding();
    }
    
    public void _setEncodingStyle(String encodingStyle) {
        throw new UnsupportedOperationException("cannot set encoding style");
    }
    
    public ClientTransport getClientTransport() {
        return super._getTransport();
    }
    
    
    
    
    
    /*
     * This method returns an array containing (prefix, nsURI) pairs.
     */
    protected String[] _getNamespaceDeclarations() {
        return myNamespace_declarations;
    }
    
    /*
     * This method returns an array containing the names of the headers we understand.
     */
    public QName[] _getUnderstoodHeaders() {
        return understoodHeaderNames;
    }
    
    /*
     * This method handles the case of an empty SOAP body.
     */
    protected void _handleEmptyBody(XMLReader reader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
    }
    
    public void _initialize(InternalTypeMappingRegistry registry) throws Exception {
        super._initialize(registry);
        myns1_ValidaCuentaResponse__ValidaCuentaResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", webservices.usacCuenta.ValidaCuentaResponse.class, ns1_ValidaCuentaResponse_TYPE_QNAME);
        myns1_ValidaCuenta__ValidaCuenta_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", webservices.usacCuenta.ValidaCuenta.class, ns1_ValidaCuenta_TYPE_QNAME);
    }
    
    private static final QName _portName = new QName("http://banrural.com.gt/usac/usac", "USACSoap");
    private static final int ValidaCuenta_OPCODE = 0;
    private static final QName ns1_ValidaCuenta_ValidaCuenta_QNAME = new QName("http://banrural.com.gt/usac/usac", "ValidaCuenta");
    private static final QName ns1_ValidaCuenta_TYPE_QNAME = new QName("http://banrural.com.gt/usac/usac", "ValidaCuenta");
    private CombinedSerializer myns1_ValidaCuenta__ValidaCuenta_LiteralSerializer;
    private static final QName ns1_ValidaCuenta_ValidaCuentaResponse_QNAME = new QName("http://banrural.com.gt/usac/usac", "ValidaCuentaResponse");
    private static final QName ns1_ValidaCuentaResponse_TYPE_QNAME = new QName("http://banrural.com.gt/usac/usac", "ValidaCuentaResponse");
    private CombinedSerializer myns1_ValidaCuentaResponse__ValidaCuentaResponse_LiteralSerializer;
    private static final String[] myNamespace_declarations =
                                        new String[] {
                                            "ns0", "http://banrural.com.gt/usac/usac"
                                        };
    
    private static final QName[] understoodHeaderNames = new QName[] {  };
    
}
