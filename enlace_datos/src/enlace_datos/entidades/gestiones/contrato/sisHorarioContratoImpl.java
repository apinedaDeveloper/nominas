package enlace_datos.entidades.gestiones.contrato;

import enlace_datos.myException;

import enlace_datos.util.horario;

import enlace_datos.util.myEntityImpl;
import enlace_datos.util.utils;

import oracle.jbo.DMLException;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class sisHorarioContratoImpl extends myEntityImpl {
    public static final int IDCONTRATO = 0;
    public static final int IDDIA = 1;
    public static final int HORAENTRADA = 2;
    public static final int HORASALIDA = 3;
    public static final int FECHACREACION = 4;
    public static final int HORAENTRADA2 = 5;
    public static final int HORASALIDA2 = 6;
    public static final int NOMDIA = 7;
    public static final int SELECTED = 8;
    public static final int CREADOPOR = 9;
    public static final int MODPOR = 10;
    public static final int FECHAMODIF = 11;
    public static final int SINCRONIZADO = 12;
    public static final int DIAALTERNO = 13;
    public static final int SISCONTRATO = 14;
    private static EntityDefImpl mDefinitionObject;
    private horario horaE;
    private horario horaF;

    /**This is the default constructor (do not remove)
     */
    public sisHorarioContratoImpl() {
      horaE=new horario();
      horaF=new horario();
    }


    /**Retrieves the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = (EntityDefImpl)EntityDefImpl.findDefObject("enlace_datos.entidades.gestiones.contrato.sisHorarioContrato");
        }
        return mDefinitionObject;
    }

    /**Gets the attribute value for IdContrato, using the alias name IdContrato
     */
    public Number getIdContrato() {
        return (Number)getAttributeInternal(IDCONTRATO);
    }

    /**Sets <code>value</code> as the attribute value for IdContrato
     */
    public void setIdContrato(Number value) {
        setAttributeInternal(IDCONTRATO, value);
    }

    /**Gets the attribute value for IdDia, using the alias name IdDia
     */
    public String getIdDia() {
        return (String)getAttributeInternal(IDDIA);
    }

    /**Sets <code>value</code> as the attribute value for IdDia
     */
    public void setIdDia(String value) {
        setAttributeInternal(IDDIA, value);
    }

    /**Gets the attribute value for HoraEntrada, using the alias name HoraEntrada
     */
    public String getHoraEntrada() {
        return (String)getAttributeInternal(HORAENTRADA);
    }

    /**Sets <code>value</code> as the attribute value for HoraEntrada
     */
    public void setHoraEntrada(String value) {
        setAttributeInternal(HORAENTRADA, value);
    }

    /**Gets the attribute value for HoraSalida, using the alias name HoraSalida
     */
    public String getHoraSalida() {
        return (String)getAttributeInternal(HORASALIDA);
    }

    /**Sets <code>value</code> as the attribute value for HoraSalida
     */
    public void setHoraSalida(String value) {
        setAttributeInternal(HORASALIDA, value);
    }

    /**Gets the attribute value for FechaCreacion, using the alias name FechaCreacion
     */
    public Date getFechaCreacion() {
        return (Date)getAttributeInternal(FECHACREACION);
    }

    /**Sets <code>value</code> as the attribute value for FechaCreacion
     */
    public void setFechaCreacion(Date value) {
        setAttributeInternal(FECHACREACION, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case IDCONTRATO:
            return getIdContrato();
        case IDDIA:
            return getIdDia();
        case HORAENTRADA:
            return getHoraEntrada();
        case HORASALIDA:
            return getHoraSalida();
        case FECHACREACION:
            return getFechaCreacion();
        case HORAENTRADA2:
            return getHoraEntrada2();
        case HORASALIDA2:
            return getHoraSalida2();
        case NOMDIA:
            return getnomDia();
        case SELECTED:
            return getSelected();
        case CREADOPOR:
            return getCreadoPor();
        case MODPOR:
            return getModPor();
        case FECHAMODIF:
            return getFechaModif();
        case SINCRONIZADO:
            return getSincronizado();
        case DIAALTERNO:
            return getDiaAlterno();
        case SISCONTRATO:
            return getSisContrato();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case IDCONTRATO:
            setIdContrato((Number)value);
            return;
        case IDDIA:
            setIdDia((String)value);
            return;
        case HORAENTRADA:
            setHoraEntrada((String)value);
            return;
        case HORASALIDA:
            setHoraSalida((String)value);
            return;
        case FECHACREACION:
            setFechaCreacion((Date)value);
            return;
        case HORAENTRADA2:
            setHoraEntrada2((String)value);
            return;
        case HORASALIDA2:
            setHoraSalida2((String)value);
            return;
        case NOMDIA:
            setnomDia((String)value);
            return;
        case SELECTED:
            setSelected((Boolean)value);
            return;
        case CREADOPOR:
            setCreadoPor((String)value);
            return;
        case MODPOR:
            setModPor((String)value);
            return;
        case FECHAMODIF:
            setFechaModif((Date)value);
            return;
        case SINCRONIZADO:
            setSincronizado((Number)value);
            return;
        case DIAALTERNO:
            setDiaAlterno((Number)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }

    /**Gets the associated entity SisContratoImpl
     */
    public SisContratoImpl getSisContrato() {
        return (SisContratoImpl)getAttributeInternal(SISCONTRATO);
    }

    /**Sets <code>value</code> as the associated entity SisContratoImpl
     */
    public void setSisContrato(SisContratoImpl value) {
        setAttributeInternal(SISCONTRATO, value);
    }

    /**Gets the attribute value for HoraEntrada2, using the alias name HoraEntrada2
     */
    public String getHoraEntrada2() {
       String horaEntrada;
       horaEntrada=this.getHoraEntrada();
        if (horaEntrada!=null){
           this.horaE.setHorarioBase(horaEntrada); 
        }
        return this.horaE.getHorario();
    }

    /**Sets <code>value</code> as the attribute value for HoraEntrada2
     */
    public void setHoraEntrada2(String value) {
        this.horaE.setHorario(value);
        setAttributeInternal(HORAENTRADA, this.horaE.getHorarioInterval());
    }

    /**Gets the attribute value for HoraSalida2, using the alias name HoraSalida2
     */
    public String getHoraSalida2() {
        String horaFin;
        horaFin=this.getHoraSalida();
         if (horaFin!=null){
            this.horaF.setHorarioBase(horaFin); 
         }
         return this.horaF.getHorario();
    }

    /**Sets <code>value</code> as the attribute value for HoraSalida2
     */
    public void setHoraSalida2(String value) {
        this.horaF.setHorario(value);
        setAttributeInternal(HORASALIDA, this.horaF.getHorarioInterval());
    }

    public horario getHoraE1(){
        return this.horaE;
    }

    public horario getHoraF1(){
        return this.horaF;
    }

    /**Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    public void VerifyEntity(){
        if (this.getIdDia()==null || (this.getIdDia()!=null && this.getIdDia().equals(""))){
            throw new JboException("Por favor seleccione el dia");
        }
        
        if (this.getHoraEntrada()==null || (this.getHoraEntrada()!=null && this.getHoraEntrada().equals(""))){
            throw new JboException("Por favor ingrese la hora de entrada");
        }
         
        if (this.getHoraSalida()==null || (this.getHoraSalida()!=null && this.getHoraSalida().equals(""))){
                throw new JboException("Por favor ingrese la hora de salida");
         }   
            

        
    }

    /**Custom DML update/insert/delete logic here.
     */
    protected void doDML(int operation, TransactionEvent e) {
       Object [] vExceptions;
       String vMensaje;
       
       if (this.getSisContrato().getInsertarHorario())
       {
        try{   
        //    System.out.println(" actualizando horario contrato");
            VerifyEntity(); 
      /*
            if (operation==DML_UPDATE || operation==DML_DELETE){
               this.getSisContrato().setValHorario(false);            
            }
        */    
            if (this.getSisContrato().getFechaCreacion()!=null)
            {
            
            
                if (operation==DML_UPDATE)
                {
                   this.setModPor(utils.getAuthUser(this.getDBTransaction()));
                   this.setFechaModif(utils.getFechaActual());
                }else if (operation==DML_INSERT){
                   this.setCreadoPor(utils.getAuthUser(this.getDBTransaction())); 
                }
                
            
              registrarLogOperaciones(operation, e); 
              super.doDML(operation, e);
              
            }
     //   this.getIdContrato()
        }catch(DMLException exep){            
            vExceptions=exep.getExceptions();
            super.getDBTransaction().cancelDMLOperations(); //exep.getErrorCode() exep.getMessage()
            vMensaje=exep.getMessage();
            
            if (vMensaje.indexOf("JBO-26048")>=0){
            
                //this.setIdDia(this.getIdDia());
                throw new myException("Por favor verifique el horario.");        
            }
          //  this.
           //   this.getDBTransaction().rollback();
            //this.getDBTransaction().clearEntityCache(null);  26048
           // this.clearAllExceptions();
            //this.getDBTransaction().clearEntityCache(); 
             if (vExceptions.length>0){
                 throw new myException(utils.getSQLMensaje((Exception)vExceptions[0]));        
             }   
        }
       }        
    }

    /**Gets the attribute value for nomDia, using the alias name nomDia
     */
    public String getnomDia() {
        return (String)getAttributeInternal(NOMDIA);
    }

    /**Sets <code>value</code> as the attribute value for nomDia
     */
    public void setnomDia(String value) {
        setAttributeInternal(NOMDIA, value);
    }

    /**Gets the attribute value for Selected, using the alias name Selected
     */
    public Boolean getSelected() {
    
        if (getAttributeInternal(SELECTED)==null)
         return false;
         
        return (Boolean)getAttributeInternal(SELECTED);
    }

    /**Sets <code>value</code> as the attribute value for Selected
     */
    public void setSelected(Boolean value) {
        setAttributeInternal(SELECTED, value);
    }

    /**Gets the attribute value for CreadoPor, using the alias name CreadoPor
     */
    public String getCreadoPor() {
        return (String)getAttributeInternal(CREADOPOR);
    }

    /**Sets <code>value</code> as the attribute value for CreadoPor
     */
    public void setCreadoPor(String value) {
        setAttributeInternal(CREADOPOR, value);
    }

    /**Gets the attribute value for ModPor, using the alias name ModPor
     */
    public String getModPor() {
        return (String)getAttributeInternal(MODPOR);
    }

    /**Sets <code>value</code> as the attribute value for ModPor
     */
    public void setModPor(String value) {
        setAttributeInternal(MODPOR, value);
    }

    /**Gets the attribute value for FechaModif, using the alias name FechaModif
     */
    public Date getFechaModif() {
        return (Date)getAttributeInternal(FECHAMODIF);
    }

    /**Sets <code>value</code> as the attribute value for FechaModif
     */
    public void setFechaModif(Date value) {
        setAttributeInternal(FECHAMODIF, value);
    }

    /**Gets the attribute value for Sincronizado, using the alias name Sincronizado
     */
    public Number getSincronizado() {
        return (Number)getAttributeInternal(SINCRONIZADO);
    }

    /**Sets <code>value</code> as the attribute value for Sincronizado
     */
    public void setSincronizado(Number value) {
        setAttributeInternal(SINCRONIZADO, value);
    }

    /**Gets the attribute value for DiaAlterno, using the alias name DiaAlterno
     */
    public Number getDiaAlterno() {
        return (Number)getAttributeInternal(DIAALTERNO);
    }

    /**Sets <code>value</code> as the attribute value for DiaAlterno
     */
    public void setDiaAlterno(Number value) {
        setAttributeInternal(DIAALTERNO, value);
    }

    /**Creates a Key object based on given key constituents
     */
    public static Key createPrimaryKey(Number idContrato, String idDia, 
                                       String horaEntrada) {
        return new Key(new Object[]{idContrato, idDia, horaEntrada});
    }
}
