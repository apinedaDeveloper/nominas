package enlace_datos.entidades.gestiones.contrato;

import enlace_datos.util.utils;

import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SisHistActaHorarioContratoImpl extends EntityImpl {
    public static final int IDHISTACTAHORACONTRATO = 0;
    public static final int IDCONTRATO = 1;
    public static final int TIPOACTUALIZACION = 2;
    public static final int NUMEROACTA = 3;
    public static final int OBSERVACIONES = 4;
    public static final int CREADOPOR = 5;
    public static final int FECHACREACION = 6;
    public static final int MODPOR = 7;
    public static final int FECHAMOD = 8;
    public static final int SISCONTRATO2 = 9;
    private static EntityDefImpl mDefinitionObject;

    /**This is the default constructor (do not remove)
     */
    public SisHistActaHorarioContratoImpl() {
    }


    /**Retrieves the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = (EntityDefImpl)EntityDefImpl.findDefObject("enlace_datos.entidades.gestiones.contrato.SisHistActaHorarioContrato");
        }
        return mDefinitionObject;
    }

    /**Gets the attribute value for IdHistActahoracontrato, using the alias name IdHistActahoracontrato
     */
    public Number getIdHistActahoracontrato() {
        return (Number)getAttributeInternal(IDHISTACTAHORACONTRATO);
    }

    /**Sets <code>value</code> as the attribute value for IdHistActahoracontrato
     */
    public void setIdHistActahoracontrato(Number value) {
        setAttributeInternal(IDHISTACTAHORACONTRATO, value);
    }

    /**Gets the attribute value for IdContrato, using the alias name IdContrato
     */
    public Number getIdContrato() {
        return (Number)getAttributeInternal(IDCONTRATO);
    }

    /**Sets <code>value</code> as the attribute value for IdContrato
     */
    public void setIdContrato(Number value) {
        setAttributeInternal(IDCONTRATO, value);
    }

    /**Gets the attribute value for TipoActualizacion, using the alias name TipoActualizacion
     */
    public Number getTipoActualizacion() {
        return (Number)getAttributeInternal(TIPOACTUALIZACION);
    }

    /**Sets <code>value</code> as the attribute value for TipoActualizacion
     */
    public void setTipoActualizacion(Number value) {
        setAttributeInternal(TIPOACTUALIZACION, value);
    }

    /**Gets the attribute value for NumeroActa, using the alias name NumeroActa
     */
    public String getNumeroActa() {
        return (String)getAttributeInternal(NUMEROACTA);
    }

    /**Sets <code>value</code> as the attribute value for NumeroActa
     */
    public void setNumeroActa(String value) {
        setAttributeInternal(NUMEROACTA, value);
    }

    /**Gets the attribute value for Observaciones, using the alias name Observaciones
     */
    public String getObservaciones() {
        return (String)getAttributeInternal(OBSERVACIONES);
    }

    /**Sets <code>value</code> as the attribute value for Observaciones
     */
    public void setObservaciones(String value) {
        setAttributeInternal(OBSERVACIONES, value);
    }

    /**Gets the attribute value for CreadoPor, using the alias name CreadoPor
     */
    public String getCreadoPor() {
        return (String)getAttributeInternal(CREADOPOR);
    }

    /**Sets <code>value</code> as the attribute value for CreadoPor
     */
    public void setCreadoPor(String value) {
        setAttributeInternal(CREADOPOR, value);
    }

    /**Gets the attribute value for FechaCreacion, using the alias name FechaCreacion
     */
    public Date getFechaCreacion() {
        return (Date)getAttributeInternal(FECHACREACION);
    }

    /**Sets <code>value</code> as the attribute value for FechaCreacion
     */
    public void setFechaCreacion(Date value) {
        setAttributeInternal(FECHACREACION, value);
    }

    /**Gets the attribute value for ModPor, using the alias name ModPor
     */
    public String getModPor() {
        return (String)getAttributeInternal(MODPOR);
    }

    /**Sets <code>value</code> as the attribute value for ModPor
     */
    public void setModPor(String value) {
        setAttributeInternal(MODPOR, value);
    }

    /**Gets the attribute value for FechaMod, using the alias name FechaMod
     */
    public Date getFechaMod() {
        return (Date)getAttributeInternal(FECHAMOD);
    }

    /**Sets <code>value</code> as the attribute value for FechaMod
     */
    public void setFechaMod(Date value) {
        setAttributeInternal(FECHAMOD, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case IDHISTACTAHORACONTRATO:
            return getIdHistActahoracontrato();
        case IDCONTRATO:
            return getIdContrato();
        case TIPOACTUALIZACION:
            return getTipoActualizacion();
        case NUMEROACTA:
            return getNumeroActa();
        case OBSERVACIONES:
            return getObservaciones();
        case CREADOPOR:
            return getCreadoPor();
        case FECHACREACION:
            return getFechaCreacion();
        case MODPOR:
            return getModPor();
        case FECHAMOD:
            return getFechaMod();
        case SISCONTRATO2:
            return getSisContrato2();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case IDHISTACTAHORACONTRATO:
            setIdHistActahoracontrato((Number)value);
            return;
        case IDCONTRATO:
            setIdContrato((Number)value);
            return;
        case TIPOACTUALIZACION:
            setTipoActualizacion((Number)value);
            return;
        case NUMEROACTA:
            setNumeroActa((String)value);
            return;
        case OBSERVACIONES:
            setObservaciones((String)value);
            return;
        case CREADOPOR:
            setCreadoPor((String)value);
            return;
        case FECHACREACION:
            setFechaCreacion((Date)value);
            return;
        case MODPOR:
            setModPor((String)value);
            return;
        case FECHAMOD:
            setFechaMod((Date)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }

    /**Gets the associated entity SisContrato2Impl
     */
    public SisContrato2Impl getSisContrato2() {
        return (SisContrato2Impl)getAttributeInternal(SISCONTRATO2);
    }

    /**Sets <code>value</code> as the associated entity SisContrato2Impl
     */
    public void setSisContrato2(SisContrato2Impl value) {
        setAttributeInternal(SISCONTRATO2, value);
    }

    /**Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**Custom DML update/insert/delete logic here.
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
        if (operation==DML_UPDATE)
        {
           this.setModPor(utils.getAuthUser(this.getDBTransaction()));
           this.setFechaMod(utils.getFechaActual());
        }else if (operation==DML_INSERT){
           this.setCreadoPor(utils.getAuthUser(this.getDBTransaction())); 
        }
    }

    /**Creates a Key object based on given key constituents
     */
    public static Key createPrimaryKey(Number idHistActahoracontrato) {
        return new Key(new Object[]{idHistActahoracontrato});
    }
}
