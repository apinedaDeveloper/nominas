package enlace_datos.entidades.gestiones.judiciales;

import enlace_datos.util.myEntityImpl;
import enlace_datos.util.utils;
import enlace_datos.util.utils_DB;

import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.NameValuePairs;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SisCondicionOrdenjudicialImpl extends myEntityImpl {
    public static final int IDJUICIO = 0;
    public static final int IDTIPOCONDICION = 1;
    public static final int MONTO = 2;
    public static final int PORCENTAJE = 3;
    public static final int FECHAINGRESO = 4;
    public static final int CREADOPOR = 5;
    public static final int SISORDENJUDICIAL = 6;
    private static EntityDefImpl mDefinitionObject;

    /**This is the default constructor (do not remove)
     */
    public SisCondicionOrdenjudicialImpl() {
    }


    /**Retrieves the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = (EntityDefImpl)EntityDefImpl.findDefObject("enlace_datos.entidades.gestiones.judiciales.SisCondicionOrdenjudicial");
        }
        return mDefinitionObject;
    }

    /**Gets the attribute value for IdJuicio, using the alias name IdJuicio
     */
    public Number getIdJuicio() {
        return (Number)getAttributeInternal(IDJUICIO);
    }

    /**Sets <code>value</code> as the attribute value for IdJuicio
     */
    public void setIdJuicio(Number value) {
        setAttributeInternal(IDJUICIO, value);
    }

    /**Gets the attribute value for IdTipoCondicion, using the alias name IdTipoCondicion
     */
    public Number getIdTipoCondicion() {
        return (Number)getAttributeInternal(IDTIPOCONDICION);
    }

    /**Sets <code>value</code> as the attribute value for IdTipoCondicion
     */
    public void setIdTipoCondicion(Number value) {
        setAttributeInternal(IDTIPOCONDICION, value);
    }

    /**Gets the attribute value for Monto, using the alias name Monto
     */
    public Number getMonto() {
        return (Number)getAttributeInternal(MONTO);
    }

    /**Sets <code>value</code> as the attribute value for Monto
     */
    public void setMonto(Number value) {
        setAttributeInternal(MONTO, value);
    }

    /**Gets the attribute value for Porcentaje, using the alias name Porcentaje
     */
    public Number getPorcentaje() {
        return (Number)getAttributeInternal(PORCENTAJE);
    }

    /**Sets <code>value</code> as the attribute value for Porcentaje
     */
    public void setPorcentaje(Number value) {
        setAttributeInternal(PORCENTAJE, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case IDJUICIO:
            return getIdJuicio();
        case IDTIPOCONDICION:
            return getIdTipoCondicion();
        case MONTO:
            return getMonto();
        case PORCENTAJE:
            return getPorcentaje();
        case FECHAINGRESO:
            return getFechaIngreso();
        case CREADOPOR:
            return getCreadoPor();
        case SISORDENJUDICIAL:
            return getSisOrdenJudicial();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case IDJUICIO:
            setIdJuicio((Number)value);
            return;
        case IDTIPOCONDICION:
            setIdTipoCondicion((Number)value);
            return;
        case MONTO:
            setMonto((Number)value);
            return;
        case PORCENTAJE:
            setPorcentaje((Number)value);
            return;
        case FECHAINGRESO:
            setFechaIngreso((Date)value);
            return;
        case CREADOPOR:
            setCreadoPor((String)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }

    /**Gets the associated entity SisOrdenJudicialImpl
     */
    public SisOrdenJudicialImpl getSisOrdenJudicial() {
        return (SisOrdenJudicialImpl)getAttributeInternal(SISORDENJUDICIAL);
    }

    /**Sets <code>value</code> as the associated entity SisOrdenJudicialImpl
     */
    public void setSisOrdenJudicial(SisOrdenJudicialImpl value) {
        setAttributeInternal(SISORDENJUDICIAL, value);
    }

    /**Gets the attribute value for FechaIngreso, using the alias name FechaIngreso
     */
    public Date getFechaIngreso() {
        return (Date)getAttributeInternal(FECHAINGRESO);
    }

    /**Sets <code>value</code> as the attribute value for FechaIngreso
     */
    public void setFechaIngreso(Date value) {
        setAttributeInternal(FECHAINGRESO, value);
    }

    /**Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**Custom DML update/insert/delete logic here.
     */
    protected void doDML(int operation, TransactionEvent e) {
        Number varUsuario; 
        String usuario = utils.getAuthUser(e.getDBTransaction());//obtengo el usuario logeado
       // varUsuario = new Number(Integer.parseInt(usuario.trim()));
       
        this.setCreadoPor(usuario);
         NameValuePairs consulRestriccion= new NameValuePairs();
         consulRestriccion.setAttribute("nombre","MODIFICACION");
         Object consulta1 =utils_DB.getValorTabla(this.getDBTransaction(), "sis_tipo_condicion_oj", "id_tipo_condicion", consulRestriccion);
         if(consulta1.toString().trim().equals(this.getIdTipoCondicion().toString().trim())) {
             if ((this.getMonto()== null) && (this.getPorcentaje()==null)){
                  throw new JboException("RECUERDE QUE DEBE INGRESAR UN VALOR FIJO O UN PORCENTAJE");
                       
             }
             else if ((this.getMonto()!=null) &&(this.getPorcentaje()!=null)){
                 throw new JboException("RECUERDE QUE DEBE INGRESAR UN VALOR FIJO O UN PORCENTAJE,NO AMBOS");
             
             }
             else{
                 registrarLogOperaciones(operation, e); 
                 super.doDML(operation, e);
             }
         }
         else {
                consulRestriccion.setAttribute("nombre","LIMITE A DESCONTAR");
                consulta1 =utils_DB.getValorTabla(this.getDBTransaction(), "sis_tipo_condicion_oj", "id_tipo_condicion", consulRestriccion);
                //super.doDML(operation, e);
                if(consulta1.toString().trim().equals(this.getIdTipoCondicion().toString().trim())) {
                    if (this.getMonto()== null){
                        throw new JboException("RECUERDE QUE DEBE INGRESAR UN VALOR FIJO");
                           
                    }
                    else if (this.getPorcentaje()!=null){
                        throw new JboException("RECUERDE QUE DEBE INGRESAR UN VALOR FIJO NO UN PORCENTAJE");
                 
                    }
                    else{
                        registrarLogOperaciones(operation, e); 
                        super.doDML(operation, e);
                    }
                }
                else { 
                    if ((this.getMonto()== null) && (this.getPorcentaje()==null)){
                         throw new JboException("RECUERDE QUE DEBE INGRESAR UN VALOR FIJO O UN PORCENTAJE");
                              
                    }
                    else if ((this.getMonto()!=null) &&(this.getPorcentaje()!=null)){
                        throw new JboException("RECUERDE QUE DEBE INGRESAR UN VALOR FIJO O UN PORCENTAJE,NO AMBOS");
                    
                    }
                    else{
                    
                        registrarLogOperaciones(operation, e); 
                        super.doDML(operation, e);
                    }
                }
         // super.doDML(operation, e);         
         }
    }

    /**Add attribute defaulting logic in this method.
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        
        
    }

    /**Gets the attribute value for CreadoPor, using the alias name CreadoPor
     */
    public String getCreadoPor() {
        return (String)getAttributeInternal(CREADOPOR);
    }

    /**Sets <code>value</code> as the attribute value for CreadoPor
     */
    public void setCreadoPor(String value) {
        setAttributeInternal(CREADOPOR, value);
    }

    /**Creates a Key object based on given key constituents
     */
    public static Key createPrimaryKey(Number idJuicio, Number idTipoCondicion, 
                                       Date fechaIngreso) {
        return new Key(new Object[]{idJuicio, idTipoCondicion, fechaIngreso});
    }
}
