package enlace_datos.entidades.gestiones.horas_extras;

import enlace_datos.util.horario;

import enlace_datos.util.myEntityImpl;
import enlace_datos.util.utils;
import enlace_datos.util.utils_DB;

import java.lang.Object;

import java.math.BigDecimal;

import java.text.SimpleDateFormat;

import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SisDetTiempoExtraImpl extends myEntityImpl {
    public static final int IDDETHORAEXTRA = 0;
    public static final int FECHA = 1;
    public static final int DESCACTIVIDAD = 2;
    public static final int HORAINICIO = 3;
    public static final int HORAFIN = 4;
    public static final int IDTIEMPOEXTRAORDINARIO = 5;
    public static final int HRFICTISIA1 = 6;
    public static final int HRFICTISIA2 = 7;
    public static final int SISTIEMPOEXTRAORDINARIO = 8;
    private static EntityDefImpl mDefinitionObject;

    /**This is the default constructor (do not remove)
     */
    public SisDetTiempoExtraImpl() {
    }


    /**Retrieves the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = (EntityDefImpl)EntityDefImpl.findDefObject("enlace_datos.entidades.gestiones.horas_extras.SisDetTiempoExtra");
        }
        return mDefinitionObject;
    }

    /**Gets the attribute value for IdDetHoraExtra, using the alias name IdDetHoraExtra
     */
    public Number getIdDetHoraExtra() {
        return (Number)getAttributeInternal(IDDETHORAEXTRA);
    }

    /**Sets <code>value</code> as the attribute value for IdDetHoraExtra
     */
    public void setIdDetHoraExtra(Number value) {
        setAttributeInternal(IDDETHORAEXTRA, value);
    }

    /**Gets the attribute value for Fecha, using the alias name Fecha
     */
    public Date getFecha() {
        return (Date)getAttributeInternal(FECHA);
    }

    /**Sets <code>value</code> as the attribute value for Fecha
     */
    public void setFecha(Date value) {
        setAttributeInternal(FECHA, value);
    }

    /**Gets the attribute value for DescActividad, using the alias name DescActividad
     */
    public String getDescActividad() {
        return (String)getAttributeInternal(DESCACTIVIDAD);
    }

    /**Sets <code>value</code> as the attribute value for DescActividad
     */
    public void setDescActividad(String value) {
        setAttributeInternal(DESCACTIVIDAD, value);
    }

    /**Gets the attribute value for HoraInicio, using the alias name HoraInicio
     */
    public String getHoraInicio() {
        return (String)getAttributeInternal(HORAINICIO);        
    }

    /**Sets <code>value</code> as the attribute value for HoraInicio
     */
    public void setHoraInicio(String value) {
        setAttributeInternal(HORAINICIO, value);
    }

    /**Gets the attribute value for HoraFin, using the alias name HoraFin
     */
    public String getHoraFin() {
        return (String)getAttributeInternal(HORAFIN);       
    }

    /**Sets <code>value</code> as the attribute value for HoraFin
     */
    public void setHoraFin(String value) {
        setAttributeInternal(HORAFIN, value);
    }

    /**Gets the attribute value for IdTiempoExtraordinario, using the alias name IdTiempoExtraordinario
     */
    public Number getIdTiempoExtraordinario() {
        return (Number)getAttributeInternal(IDTIEMPOEXTRAORDINARIO);
    }

    /**Sets <code>value</code> as the attribute value for IdTiempoExtraordinario
     */
    public void setIdTiempoExtraordinario(Number value) {
        setAttributeInternal(IDTIEMPOEXTRAORDINARIO, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case IDDETHORAEXTRA:
            return getIdDetHoraExtra();
        case FECHA:
            return getFecha();
        case DESCACTIVIDAD:
            return getDescActividad();
        case HORAINICIO:
            return getHoraInicio();
        case HORAFIN:
            return getHoraFin();
        case IDTIEMPOEXTRAORDINARIO:
            return getIdTiempoExtraordinario();
        case HRFICTISIA1:
            return gethrFictisia1();
        case HRFICTISIA2:
            return gethrFictisia2();
        case SISTIEMPOEXTRAORDINARIO:
            return getSisTiempoExtraordinario();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case IDDETHORAEXTRA:
            setIdDetHoraExtra((Number)value);
            return;
        case FECHA:
            setFecha((Date)value);
            return;
        case DESCACTIVIDAD:
            setDescActividad((String)value);
            return;
        case HORAINICIO:
            setHoraInicio((String)value);
            return;
        case HORAFIN:
            setHoraFin((String)value);
            return;
        case IDTIEMPOEXTRAORDINARIO:
            setIdTiempoExtraordinario((Number)value);
            return;
        case HRFICTISIA1:
            sethrFictisia1((String)value);
            return;
        case HRFICTISIA2:
            sethrFictisia2((String)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }

    /**Gets the associated entity SisTiempoExtraordinarioImpl
     */
    public SisTiempoExtraordinarioImpl getSisTiempoExtraordinario() {
        return (SisTiempoExtraordinarioImpl)getAttributeInternal(SISTIEMPOEXTRAORDINARIO);
    }

    /**Sets <code>value</code> as the associated entity SisTiempoExtraordinarioImpl
     */
    public void setSisTiempoExtraordinario(SisTiempoExtraordinarioImpl value) {
        setAttributeInternal(SISTIEMPOEXTRAORDINARIO, value);
    }

    /**Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**Custom DML update/insert/delete logic here.
     */
    protected void doDML(int operation, TransactionEvent e) {
    
        horario hora1;
        horario hora2;
        boolean aux = false;
        double horas;
    
        if (operation==this.DML_INSERT){  
                
                SequenceImpl sequence = new SequenceImpl("SIS_DET_TEMP_EXTRA_SQ",e.getDBTransaction());
                this.setIdDetHoraExtra(sequence.getSequenceNumber()); 
                
        }
        if (operation != this.DML_DELETE){
            
        
        //horario: clase utilizada para manipular una cadena para transformarlo a formato hora
        hora1 = new horario(this.gethrFictisia1());
        hora2 = new horario(this.gethrFictisia2());  
        SimpleDateFormat formato = new SimpleDateFormat("MM");
        String cadena = formato.format(this.getFecha().getValue());
        
        if(this.getSisTiempoExtraordinario().getSisHoraExtra().getIdPeriodo().compareTo(Integer.parseInt(cadena.trim()))!=0){
            throw new JboException("FECHA: " + this.getFecha().getValue()+" en actividad con id  "+this.getIdDetHoraExtra()+", no correponde al mes seleccionado de tiempo extraordinario");
        }
        
        if (this.getFecha()== null || this.getFecha().equals("")){
            throw new JboException("FECHA:  Debe ingresar la fecha en que se realizara la actividad ");    
        }/*else  if (this.getDescActividad()== null || this.getDescActividad().equals("")){
            throw new JboException("DESCRIPCION ACTIVIDAD:  Debe ingresar la descripción de la actividad a realizar");    
        }*/
        if(!hora1.isHora(this.gethrFictisia1())){
           // System.out.println("hora inicio :"+ this.gethrFictisia1());
             throw new JboException("HORA INICIO:  No es un formato de hora valido");
        }
        if(!hora2.isHora(this.gethrFictisia2())) {  
            //System.out.println("hora fin : "+ this.gethrFictisia2());
            throw new JboException("HORA FIN:  No es un formato de hora valido");
        }
        horas = hora2.getDiff_Horas(hora1);
        if (horas <= 0){
            throw new JboException("HORA FIN:  No es un horario Valido");
        }
        this.setHoraInicio(hora1.getHorarioInterval());
        this.setHoraFin(hora2.getHorarioInterval());
        String consulta = "select 1 from sis_contrato contrato, sis_horario_contrato horario, sis_contrato contrato1, sis_estado_contrato_vw estado\n" + 
        "where contrato.ID_CONTRATO = horario.ID_CONTRATO\n" + 
        "and contrato.REGISTRO_EMPLEADO = contrato1.REGISTRO_EMPLEADO\n" + 
        "and contrato.ESTATUS = estado.ID_ESTADO\n" + 
        "and estado.NOMBRE = 'ACTIVO'\n" + 
        "and contrato1.ID_CONTRATO =  "+ this.getSisTiempoExtraordinario().getIdContrato()
        + " and to_dsinterval('"+hora1.getHorarioInterval()+"') + numtodsinterval(1, 'MINUTE')between horario.HORA_ENTRADA and horario.HORA_SALIDA and rownum = 1";
        
        /*  MODIFICADO SOLO POR CALUSAC */
       // Object varhora =utils_DB.getEjecutarQuerry(this.getDBTransaction(),consulta);
        
        
        /*  ********MODIFICADO SOLO POR CALUSAC       
        if ( varhora != null && varhora.equals(new BigDecimal(1))) {
            throw new JboException("HORARIO NO VALIDO, TIENE TRASLAPE CON HORARIO LABORAL");
        }*/
         
        }
        if ( operation != this.DML_INSERT ){
        this.getSisTiempoExtraordinario().setTotalHorasExtra(new Number(0));// para que actualice el papa
        }
        
        try{
            registrarLogOperaciones(operation, e); 
            super.doDML(operation, e);
            
        }
        
        catch (Exception exep) {
           //exep.printStackTrace();
           throw new JboException( utils.getSQLMensaje(exep));
             
             //throw new myException(exep.getMessage());
             
        }
    }

    /**Add attribute defaulting logic in this method.
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        
        if (this.getIdDetHoraExtra()==null)
        {        
        this.setIdDetHoraExtra(new Number(System.currentTimeMillis()-9999999));
        }
    }

    /**Gets the attribute value for hrFictisia1, using the alias name hrFictisia1
     */
    public String gethrFictisia1() {
        return (String)getAttributeInternal(HRFICTISIA1);
       /*transformo el horario de la base a un formato cadena hora
       horario horAux = new horario(this.getHoraInicio());
       return horAux.getHorario();*/
    }

    /**Sets <code>value</code> as the attribute value for hrFictisia1
     */
    public void sethrFictisia1(String value) {
        setAttributeInternal(HRFICTISIA1, value);
    }

    /**Gets the attribute value for hrFictisia2, using the alias name hrFictisia2
     */
    public String gethrFictisia2() {
       return (String)getAttributeInternal(HRFICTISIA2);
        /*transformo el horario fin de la base a un formato cadena hora
        horario horAux = new horario(this.getHoraFin());
        return horAux.getHorario();*/
    }

    /**Sets <code>value</code> as the attribute value for hrFictisia2
     */
    public void sethrFictisia2(String value) {
        setAttributeInternal(HRFICTISIA2, value);
    }

    /**Creates a Key object based on given key constituents
     */
    public static Key createPrimaryKey(Number idDetHoraExtra) {
        return new Key(new Object[]{idDetHoraExtra});
    }
}
