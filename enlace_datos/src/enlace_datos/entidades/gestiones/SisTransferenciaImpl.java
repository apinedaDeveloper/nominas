package enlace_datos.entidades.gestiones;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
import enlace_datos.util.utils;

import java.sql.SQLException;

import java.util.Calendar;

import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SisTransferenciaImpl extends EntityImpl {
    public static final int IDTRANSFERENCIA = 0;
    public static final int IDPARTIDA = 1;
    public static final int FECHA = 2;
    public static final int NOINTRA = 3;
    public static final int MONTO = 4;
    public static final int CREADOPOR = 5;
    public static final int FECHACREACION = 6;
    public static final int MODIFICADOPOR = 7;
    public static final int FECHAMOD = 8;
    public static final int ANIO = 9;
    private static EntityDefImpl mDefinitionObject;

    /**This is the default constructor (do not remove)
     */
    public SisTransferenciaImpl() {
    }


    /**Retrieves the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = (EntityDefImpl)EntityDefImpl.findDefObject("enlace_datos.entidades.gestiones.SisTransferencia");
        }
        return mDefinitionObject;
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case IDTRANSFERENCIA:
            return getIdTransferencia();
        case IDPARTIDA:
            return getIdPartida();
        case FECHA:
            return getFecha();
        case NOINTRA:
            return getNoIntra();
        case MONTO:
            return getMonto();
        case CREADOPOR:
            return getCreadoPor();
        case FECHACREACION:
            return getFechaCreacion();
        case MODIFICADOPOR:
            return getModificadoPor();
        case FECHAMOD:
            return getFechaMod();
        case ANIO:
            return getAnio();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case IDTRANSFERENCIA:
            setIdTransferencia((Number)value);
            return;
        case IDPARTIDA:
            setIdPartida((Number)value);
            return;
        case FECHA:
            setFecha((Date)value);
            return;
        case NOINTRA:
            setNoIntra((Number)value);
            return;
        case MONTO:
            setMonto((Number)value);
            return;
        case CREADOPOR:
            setCreadoPor((String)value);
            return;
        case FECHACREACION:
            setFechaCreacion((Date)value);
            return;
        case MODIFICADOPOR:
            setModificadoPor((String)value);
            return;
        case FECHAMOD:
            setFechaMod((Date)value);
            return;
        case ANIO:
            setAnio((Number)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }

    /**Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**Custom DML update/insert/delete logic here.
     */
    protected void doDML(int operation, TransactionEvent e) {
        String valUsuario;
        //try{
            if (operation == DML_INSERT) {
                Object vIdPartida;
                //Object vAnio;
    
                SequenceImpl sequence = new SequenceImpl("Sis_Transferencia_SQ", e.getDBTransaction());
                Number idTransferencia = sequence.getSequenceNumber();
                this.setIdTransferencia(idTransferencia);
                valUsuario = utils.getAuthUser(e.getDBTransaction()); //obtengo el registro del usuario logueado
                if (this.getCreadoPor() == null) {  this.setCreadoPor(valUsuario); }
                
            } else if (operation == DML_UPDATE) {
                valUsuario = utils.getAuthUser(e.getDBTransaction()); //obtengo el registro del usuario logueado
                if (this.getModificadoPor() == null) { this.setModificadoPor(valUsuario); }
                //Vamos a setear la fecha de modificación
                /*Object fecha = new oracle.jbo.domain.Date().getCurrentDate();
                Calendar calendario = Calendar.getInstance();
                int hora = calendario.get(Calendar.HOUR_OF_DAY);
                int minutos = calendario.get(Calendar.MINUTE);
                int segundos = calendario.get(Calendar.SECOND);
                Date fechaHora = 
                    new Date(fecha.toString() + " " + String.valueOf(hora) + ":" + 
                             String.valueOf(minutos) + ":" + 
                             String.valueOf(segundos));
                this.setFechaMod(fechaHora);*/
                this.setFechaMod(utils.getFechaActual());
                
            }
            super.doDML(operation, e);
        /*}catch (SQLException ee) {
             System.out.println("a ocurrido un error en SisTrassferenciaImpl");
             ee.printStackTrace();
             
         }*/
    }

    /**Gets the attribute value for IdTransferencia, using the alias name IdTransferencia
     */
    public Number getIdTransferencia() {
        return (Number)getAttributeInternal(IDTRANSFERENCIA);
    }

    /**Sets <code>value</code> as the attribute value for IdTransferencia
     */
    public void setIdTransferencia(Number value) {
        setAttributeInternal(IDTRANSFERENCIA, value);
    }

    /**Gets the attribute value for IdPartida, using the alias name IdPartida
     */
    public Number getIdPartida() {
        return (Number)getAttributeInternal(IDPARTIDA);
    }

    /**Sets <code>value</code> as the attribute value for IdPartida
     */
    public void setIdPartida(Number value) {
        setAttributeInternal(IDPARTIDA, value);
    }

    /**Gets the attribute value for Fecha, using the alias name Fecha
     */
    public Date getFecha() {
        return (Date)getAttributeInternal(FECHA);
    }

    /**Sets <code>value</code> as the attribute value for Fecha
     */
    public void setFecha(Date value) {
        setAttributeInternal(FECHA, value);
    }

    /**Gets the attribute value for NoIntra, using the alias name NoIntra
     */
    public Number getNoIntra() {
        return (Number)getAttributeInternal(NOINTRA);
    }

    /**Sets <code>value</code> as the attribute value for NoIntra
     */
    public void setNoIntra(Number value) {
        setAttributeInternal(NOINTRA, value);
    }

    /**Gets the attribute value for Monto, using the alias name Monto
     */
    public Number getMonto() {
        return (Number)getAttributeInternal(MONTO);
    }

    /**Sets <code>value</code> as the attribute value for Monto
     */
    public void setMonto(Number value) {
        setAttributeInternal(MONTO, value);
    }

    /**Gets the attribute value for CreadoPor, using the alias name CreadoPor
     */
    public String getCreadoPor() {
        return (String)getAttributeInternal(CREADOPOR);
    }

    /**Sets <code>value</code> as the attribute value for CreadoPor
     */
    public void setCreadoPor(String value) {
        setAttributeInternal(CREADOPOR, value);
    }

    /**Gets the attribute value for FechaCreacion, using the alias name FechaCreacion
     */
    public Date getFechaCreacion() {
        return (Date)getAttributeInternal(FECHACREACION);
    }

    /**Sets <code>value</code> as the attribute value for FechaCreacion
     */
    public void setFechaCreacion(Date value) {
        setAttributeInternal(FECHACREACION, value);
    }

    /**Gets the attribute value for ModificadoPor, using the alias name ModificadoPor
     */
    public String getModificadoPor() {
        return (String)getAttributeInternal(MODIFICADOPOR);
    }

    /**Sets <code>value</code> as the attribute value for ModificadoPor
     */
    public void setModificadoPor(String value) {
        setAttributeInternal(MODIFICADOPOR, value);
    }

    /**Gets the attribute value for FechaMod, using the alias name FechaMod
     */
    public Date getFechaMod() {
        return (Date)getAttributeInternal(FECHAMOD);
    }

    /**Sets <code>value</code> as the attribute value for FechaMod
     */
    public void setFechaMod(Date value) {
        setAttributeInternal(FECHAMOD, value);
    }

    /**Gets the attribute value for Anio, using the alias name Anio
     */
    public Number getAnio() {
        return (Number)getAttributeInternal(ANIO);
    }

    /**Sets <code>value</code> as the attribute value for Anio
     */
    public void setAnio(Number value) {
        setAttributeInternal(ANIO, value);
    }

    /**Add attribute defaulting logic in this method.
     */
    protected void create(AttributeList attributeList) {
        try{
            //Object Fecha = new Date().getCurrentDate();
            //int Anio=0;        
            //Anio = Integer.parseInt(Fecha.toString().substring(0,4));
            Object Anio = utils.getAnioActual();
            
            //this.setConAnio(new Number(Anio));
            this.setAnio(new Number(Anio));        
            super.create(attributeList);
        }
        catch (Exception e) {
            System.out.println("Error en metodo create");
        }
        
}

    /**Creates a Key object based on given key constituents
     */
    public static Key createPrimaryKey(Number idTransferencia) {
        return new Key(new Object[]{idTransferencia});
    }
}
