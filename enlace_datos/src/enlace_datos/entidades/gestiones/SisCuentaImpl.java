package enlace_datos.entidades.gestiones;

import enlace_datos.util.myEntityImpl;
import enlace_datos.util.utils;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SisCuentaImpl extends myEntityImpl {
    public static final int IDCUENTA = 0;
    public static final int IDBANCO = 1;
    public static final int IDMONEDA = 2;
    public static final int NUMERO = 3;
    public static final int REGISTROEMPLEADO = 4;
    public static final int FECHABAJA = 5;
    public static final int FECHACREACION = 6;
    public static final int CREADOPOR = 7;
    public static final int MODPOR = 8;
    public static final int MODPOR1 = 9;
    public static final int FECHAMOD = 10;
    public static final int SISEMPLEADO = 11;
    public static final int SISEMPLEADO1 = 12;
    public static final int SISFORMAPAGO = 13;
    private static EntityDefImpl mDefinitionObject;

    /**This is the default constructor (do not remove)
     */
    public SisCuentaImpl() {
        String 
        a="a";
        a="SAA";
    }


    /**Retrieves the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = (EntityDefImpl)EntityDefImpl.findDefObject("enlace_datos.entidades.gestiones.SisCuenta");
        }
        return mDefinitionObject;
    }

    /**Gets the attribute value for IdCuenta, using the alias name IdCuenta
     */
    public Number getIdCuenta() {
        return (Number)getAttributeInternal(IDCUENTA);
    }

    /**Sets <code>value</code> as the attribute value for IdCuenta
     */
    public void setIdCuenta(Number value) {
        setAttributeInternal(IDCUENTA, value);
    }

    /**Gets the attribute value for IdBanco, using the alias name IdBanco
     */
    public Number getIdBanco() {
        return (Number)getAttributeInternal(IDBANCO);
    }

    /**Sets <code>value</code> as the attribute value for IdBanco
     */
    public void setIdBanco(Number value) {
        setAttributeInternal(IDBANCO, value);
    }

    /**Gets the attribute value for Numero, using the alias name Numero
     */
    public String getNumero() {
        return (String)getAttributeInternal(NUMERO);
    }

    /**Sets <code>value</code> as the attribute value for Numero
     */
    public void setNumero(String value) {
        setAttributeInternal(NUMERO, value);
    }

    /**Gets the attribute value for RegistroEmpleado, using the alias name RegistroEmpleado
     */
    public Number getRegistroEmpleado() {
        return (Number)getAttributeInternal(REGISTROEMPLEADO);
    }

    /**Sets <code>value</code> as the attribute value for RegistroEmpleado
     */
    public void setRegistroEmpleado(Number value) {
        setAttributeInternal(REGISTROEMPLEADO, value);
    }

    /**Gets the attribute value for FechaBaja, using the alias name FechaBaja
     */
    public Date getFechaBaja() {
        return (Date)getAttributeInternal(FECHABAJA);
    }

    /**Sets <code>value</code> as the attribute value for FechaBaja
     */
    public void setFechaBaja(Date value) {
        setAttributeInternal(FECHABAJA, value);
    }

    /**Gets the attribute value for FechaCreacion, using the alias name FechaCreacion
     */
    public Date getFechaCreacion() {
        return (Date)getAttributeInternal(FECHACREACION);
    }

    /**Sets <code>value</code> as the attribute value for FechaCreacion
     */
    public void setFechaCreacion(Date value) {
        setAttributeInternal(FECHACREACION, value);
    }

    /**Gets the attribute value for CreadoPor, using the alias name CreadoPor
     */
    public Number getCreadoPor() {
        return (Number)getAttributeInternal(CREADOPOR);
    }

    /**Sets <code>value</code> as the attribute value for CreadoPor
     */
    public void setCreadoPor(Number value) {
        setAttributeInternal(CREADOPOR, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case IDCUENTA:
            return getIdCuenta();
        case IDBANCO:
            return getIdBanco();
        case IDMONEDA:
            return getIdMoneda();
        case NUMERO:
            return getNumero();
        case REGISTROEMPLEADO:
            return getRegistroEmpleado();
        case FECHABAJA:
            return getFechaBaja();
        case FECHACREACION:
            return getFechaCreacion();
        case CREADOPOR:
            return getCreadoPor();
        case MODPOR:
            return getModPor();
        case MODPOR1:
            return getModPor1();
        case FECHAMOD:
            return getFechaMod();
        case SISFORMAPAGO:
            return getSisFormaPago();
        case SISEMPLEADO1:
            return getSisEmpleado1();
        case SISEMPLEADO:
            return getSisEmpleado();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case IDCUENTA:
            setIdCuenta((Number)value);
            return;
        case IDBANCO:
            setIdBanco((Number)value);
            return;
        case IDMONEDA:
            setIdMoneda((Number)value);
            return;
        case NUMERO:
            setNumero((String)value);
            return;
        case REGISTROEMPLEADO:
            setRegistroEmpleado((Number)value);
            return;
        case FECHABAJA:
            setFechaBaja((Date)value);
            return;
        case FECHACREACION:
            setFechaCreacion((Date)value);
            return;
        case CREADOPOR:
            setCreadoPor((Number)value);
            return;
        case MODPOR:
            setModPor((Number)value);
            return;
        case MODPOR1:
            setModPor1((String)value);
            return;
        case FECHAMOD:
            setFechaMod((Date)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }

    /**Gets the associated entity SisEmpleadoImpl
     */
    public SisEmpleadoImpl getSisEmpleado() {
        return (SisEmpleadoImpl)getAttributeInternal(SISEMPLEADO);
    }

    /**Sets <code>value</code> as the associated entity SisEmpleadoImpl
     */
    public void setSisEmpleado(SisEmpleadoImpl value) {
        setAttributeInternal(SISEMPLEADO, value);
    }

    /**Gets the associated entity SisEmpleadoImpl
     */
    public SisEmpleadoImpl getSisEmpleado1() {
        return (SisEmpleadoImpl)getAttributeInternal(SISEMPLEADO1);
    }

    /**Sets <code>value</code> as the associated entity SisEmpleadoImpl
     */
    public void setSisEmpleado1(SisEmpleadoImpl value) {
        setAttributeInternal(SISEMPLEADO1, value);
    }


    /**Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**Custom DML update/insert/delete logic here.
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation==this.DML_INSERT)
        {  
                SequenceImpl sequence = new SequenceImpl("sis_cuenta_sq",e.getDBTransaction());
                this.setIdCuenta(sequence.getSequenceNumber());
                this.setCreadoPor(this.getModPor());
                this.setNumero(this.getNumero().trim());
                
         }else if (operation==DML_UPDATE){
             
             this.setModPor1(utils.getAuthUser(this.getDBTransaction()));
             this.setFechaMod(utils.getFechaActual());
             
         }
        
        registrarLogOperaciones(operation, e);  
        super.doDML(operation, e);
    }

    /**Gets the attribute value for ModPor, using the alias name ModPor
     */
    public Number getModPor() {
        return (Number)getAttributeInternal(MODPOR);
    }

    /**Sets <code>value</code> as the attribute value for ModPor
     */
    public void setModPor(Number value) {
        setAttributeInternal(MODPOR, value);
    }


    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getSisFormaPago() {
        return (RowIterator)getAttributeInternal(SISFORMAPAGO);
    }

    /**Gets the attribute value for IdMoneda, using the alias name IdMoneda
     */
    public Number getIdMoneda() {
        return (Number)getAttributeInternal(IDMONEDA);
    }

    /**Sets <code>value</code> as the attribute value for IdMoneda
     */
    public void setIdMoneda(Number value) {
        setAttributeInternal(IDMONEDA, value);
    }

    /**Gets the attribute value for ModPor1, using the alias name ModPor1
     */
    public String getModPor1() {
        return (String)getAttributeInternal(MODPOR1);
    }

    /**Sets <code>value</code> as the attribute value for ModPor1
     */
    public void setModPor1(String value) {
        setAttributeInternal(MODPOR1, value);
    }

    /**Gets the attribute value for FechaMod, using the alias name FechaMod
     */
    public Date getFechaMod() {
        return (Date)getAttributeInternal(FECHAMOD);
    }

    /**Sets <code>value</code> as the attribute value for FechaMod
     */
    public void setFechaMod(Date value) {
        setAttributeInternal(FECHAMOD, value);
    }

    /**Creates a Key object based on given key constituents
     */
    public static Key createPrimaryKey(Number idCuenta) {
        return new Key(new Object[]{idCuenta});
    }
}
