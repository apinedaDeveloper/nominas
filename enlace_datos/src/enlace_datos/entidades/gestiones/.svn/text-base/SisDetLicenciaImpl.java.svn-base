package enlace_datos.entidades.gestiones;

import enlace_datos.util.myEntityImpl;
import enlace_datos.util.utils;

import enlace_datos.util.utils_DB;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.NameValuePairs;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SisDetLicenciaImpl extends myEntityImpl {
    public static final int IDDETLICENCIA = 0;
    public static final int IDSOLICITUD = 1;
    public static final int IDMOTIVODETLICENCIA = 2;
    public static final int IDDETLICPRORROGA = 3;
    public static final int TIPOLICENCIA = 4;
    public static final int AYUDABECARIA = 5;
    public static final int FECHAINICIO = 6;
    public static final int FECHAFIN = 7;
    public static final int DESCMOTIVOLICENCIA = 8;
    public static final int PRORROGA = 9;
    public static final int FECHARESOLUCION = 10;
    public static final int PROCEDE = 11;
    public static final int OBSERVRESOLUCION = 12;
    public static final int MODPOR = 13;
    public static final int HORASBAJA = 14;
    public static final int JEFEINMEDIATO = 15;
    public static final int AUTORIDADRESOLUCION = 16;
    public static final int OTRASOBSERVRESOL = 17;
    public static final int PRORROGADEL = 18;
    public static final int PRORROGAAL = 19;
    public static final int MOTIVOPRORROGA = 20;
    public static final int CARGOJEFE = 21;
    public static final int NOMBREJEFE = 22;
    public static final int SISSOLICITUD = 23;
    public static final int SISMOTIVODETLICENCIA = 24;
    public static final int SISDETPLAZACUBRELIC = 25;
    private static EntityDefImpl mDefinitionObject;

    /**This is the default constructor (do not remove)
     */
    public SisDetLicenciaImpl() {
    }


    /**Retrieves the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = (EntityDefImpl)EntityDefImpl.findDefObject("enlace_datos.entidades.gestiones.SisDetLicencia");
        }
        return mDefinitionObject;
    }

    /**Add locking logic here.
     */
    public void lock() {
        super.lock();
    }


    public void verificarEntidad(){
        NameValuePairs vParametros;
        vParametros=new NameValuePairs();
        Object vResultado, vResultadoConsulta;
        Row [] vfilas;
        String strConsulta = "";     
            
        if (this.getFechaInicio()==null){
            throw new JboException("Por favor ingrese la fecha inicio");  
        }
       
        //RP = RENUNCIAS PARCIALES, tipo de licencia que en base de datos es nulo.
        if (this.getHorasBaja()!=null){ 
        
            if (!this.getTipoLicencia().equals("SS") && !this.getTipoLicencia().equals("RP")){
                this.setHorasBaja(null);
                
            }else if (Double.parseDouble(this.getHorasBaja().toString()) <= 0){ //verifica que las horas_baja ingresadas sean mayores a 0, sin consulta BD
                throw new JboException("Por favor ingrese una hora de baja valida.");    
                
            }else if (this.getTipoLicencia().equals("SS")){
                  vParametros.setAttribute("1",this.getSisSolicitud().getIdContrato());
                  vParametros.setAttribute("2",this.getHorasBaja());
                  vParametros.setAttribute("3",this.getFechaInicio());
                  vParametros.setAttribute("4",this.getFechaFin());
                  vResultado=utils_DB.getValorFuncion(this.getDBTransaction(),"sis_pkg_util.VALIDARLICPARCIAL(?,?,?,?)",vParametros);
                  
                  if (vResultado!=null&&!vResultado.toString().equals("1")){
                      
                      if (vResultado.toString().equals("-1"))
                      {
                          throw new JboException("No se pueda dar de baja " +this.getHorasBaja() + " horas porque tiene menos horas asignadas. Por favor verifique.");
                          
                      }else if (vResultado.toString().equals("-2"))
                      {
                      
                          throw new JboException("Por favor verifique las horas de baja, tiene que ser mayor o igual a una hora.");   
                          
                      }else
                      {
                          throw new JboException("Por favor verifique los datos a ocurrido un error.");   
                      }
                      
                  }
                  
              }else if (this.getTipoLicencia().equals("RP")){
                  strConsulta = "select cnt.horascontratadas " + 
                  "    from sis_contrato cnt,sis_puesto pst, sis_categoria_puesto ctpst,sis_nivel_puesto nvlpst " + 
                  "    where id_contrato= " + this.getSisSolicitud().getIdContrato() +
                  "    and cnt.id_puesto=pst.id_puesto " + 
                  "    and ctpst.id_categoria=pst.id_categoria " + 
                  "    and nvlpst.id_nivel_puesto=ctpst.id_nivel_puesto ";
                  
                  System.out.println(strConsulta);
                  vResultadoConsulta=utils_DB.getEjecutarQuerry(this.getDBTransaction(),strConsulta);
                  
                  if (vResultadoConsulta!=null)
                  {
                    double horasContratadas  = Double.parseDouble(vResultadoConsulta.toString());
                    double horasBaja = Double.parseDouble(this.getHorasBaja().toString());
                    if (horasBaja == horasContratadas){
                        throw new JboException("Cuando las horas de baja son iguales a las horas contratadas, generar solicitud de renuncia total");   
                    }
                    if (!(horasBaja > 0 && horasBaja <= horasContratadas - 1 )){
                        throw new JboException("Por favor verifique que las horas de baja correspondan a las horas contratadas.");   
                    }
                  }
                  
              }
        
        }

        //RP = RENUNCIAS PARCIALES, para este tipo de licencia los atributos que se revisan son por defecto nulos.
        if (!this.getTipoLicencia().equals("RP")){
                
                if (this.getAyudaBecaria()==null || (this.getAyudaBecaria()!=null && this.getAyudaBecaria().equals("")))
                {
                    throw new JboException("Por favor seleccione si con ayuda becaria");  
                    
                }        
                if (this.getFechaFin()==null){
                    
                   if (this.getTipoLicencia().equals("SS") && this.getHorasBaja()==null)
                   {
                    
                    vfilas=this.getSisDetplazaCubreLic().getAllRowsInRange();
                    
                    if (vfilas.length==0)
                    {
                        //this.getSisDetplazaCubreLic().getAllRowsInRange()
                       throw new JboException("Por favor ingrese la fecha fin");  
                    }
                   }
                   else{
                       throw new JboException("Por favor ingrese la fecha fin");  
                   }
                    
                }
                if (this.getIdMotivoDetLicencia()==null){
                    throw new JboException("Por favor seleccione el motivo de la licencia.");             
                }
                if (this.getProrroga()==null||(this.getProrroga()!=null &&this.getProrroga().equals(""))){
                    throw new JboException("Por favor seleccione si es prorroga.");
                }
                
                if (this.getFechaFin()!=null && this.getFechaFin().compareTo(this.getFechaInicio())<0){
                    throw new JboException("Por favor revise la fecha fin, no puede ser menor a la fecha inicio");
                }
                
               /* if (!utils.getFechaFormato("yyyy",this.getFechaFin()).equals(utils.getAnioActual())){
                    throw new JboException("Porfavor verifique que la fecha fin sea de este año. ");
                }*/
            
        }
        
        /// verificando los traslapes 
        vParametros.clear(); 
        vParametros.setAttribute("1",this.getIdSolicitud()); 
        vParametros.setAttribute("2",this.getSisSolicitud().getIdContrato()); 
        vParametros.setAttribute("3",this.getFechaInicio());
        vParametros.setAttribute("4",this.getFechaFin());
        
        vResultado=utils_DB.getValorFuncion(this.getDBTransaction(),"sis_pkg_util.verificarLicencia(?,?,?,?)",vParametros);
        
        if (vResultado!=null&&!vResultado.toString().equals("-1")){
        
            throw new JboException("Por favor verifique las fechas de inicio y fin, porque se traslapa con la licencia Id." + vResultado);   
        }
            
        if (this.getTipoLicencia().equals("RP")){
            vParametros.setAttribute("5",1); 
        }else{
            vParametros.setAttribute("5",0);
        }
        //verificar que la fecha de la renuncia parcial este dentro del periodo del contrato.
        vResultado=utils_DB.getValorFuncion(this.getDBTransaction(),"sis_pkg_util.VERIFICARLICENCIACONTRATO(?,?,?,?,?)",vParametros);    
        
        if (vResultado!=null&&!vResultado.toString().equals("OK")){
            if (this.getTipoLicencia().equals("RP")){
                vResultado = vResultado.toString().replaceAll("licencia","renuncia");
            }
            throw new JboException(vResultado.toString());   
        }  
                
    }

    /**Custom DML update/insert/delete logic here.
     */
    protected void doDML(int operation, TransactionEvent e) {
        String vFirmaJefe,vAnioInicio,vAnioLic;
        Row []vFilasCubre;
        Number vIdDetLicencia;
        
            if (this.getTipoLicencia()==null || (this.getTipoLicencia()!=null && this.getTipoLicencia().equals("")) )
            {            
                throw new JboException("Por favor seleccione el tipo de licencia");             
                
            }else if (!this.getTipoLicencia().toString().equals("RT")){ 
             
                verificarEntidad();
            /*
               for (int i=0;i<this.getAttributeCount();i++){
                 if (this.isAttributeChanged(i)){
                   System.out.println("cambia sis det licencia "+ i);   
                 }
               }
            */
                if (this.getNombreJefe()==null || this.getNombreJefe()!=null && this.getNombreJefe().equals("")){
                    vFirmaJefe="";
                }else {
                    vFirmaJefe=this.getNombreJefe();
                }
                
                if (this.getCargoJefe()==null || this.getCargoJefe()!=null && this.getCargoJefe().equals("")){
                
                    vFirmaJefe=vFirmaJefe+"|";
                }else{
                    vFirmaJefe=vFirmaJefe+"|"+this.getCargoJefe(); 
                }
                
                
                this.setJefeinmediato(vFirmaJefe);
                
                vAnioInicio=utils.getFechaFormato("yyyy",this.getFechaInicio());
                
                vAnioLic=this.getSisSolicitud().getAnio().toString();
                
                  if (!vAnioInicio.equals(vAnioLic)){
                      this.getSisSolicitud().setAnio(utils.getNumberOracle(vAnioInicio));
                  } 
                
                if (operation==this.DML_INSERT){
                /*
                    SisSolicitudImpl vSolicitud;
                    vSolicitud= (SisSolicitudImpl)SisSolicitudImpl.getDefinitionObject().createBlankInstance2(e.getDBTransaction());
                    vSolicitud.setCreadoPor(this.getModPor());
                    vSolicitud.setIdTipoSolicitud(new Number(1));
                    vSolicitud.doDML(DML_INSERT,e);
                    this.setSisSolicitud(vSolicitud);
                    vSolicitud.getSisDetLicencia().insertRow(this);
                    
                 */
                    SequenceImpl sequence = new SequenceImpl("SIS_DET_LICENCIA_SQ",e.getDBTransaction());
                   // this.setIdSolicitud(vSolicitud.getIdSolicitud());
                    vIdDetLicencia=sequence.getSequenceNumber();
                    
                   // vSolicitud.setInsertarAutomat(false);
                   
                   vFilasCubre=this.getSisDetplazaCubreLic().getAllRowsInRange();
                  
                   if (vFilasCubre!=null)
                   {
                       for (int i=0;i<vFilasCubre.length;i++){
                           
                         vFilasCubre[i].setAttribute("IdDetLicencia",vIdDetLicencia);  
                       }
                   }   
                      this.setIdDetLicencia(vIdDetLicencia);
                   
                }
                
                if (this.getProrroga().equals("NO")){
                    this.setIdDetLicProrroga(null);
                    this.setProrrogaDel(null);
                    this.setProrrogaAl(null);
                    this.setMotivoProrroga(null);
                }
                
                if (this.getTipoLicencia().equals("RP")){
                    this.setTipoLicencia(null);
                }
                
                try{
                    registrarLogOperaciones(operation, e);
                    super.doDML(operation, e);
                
                }catch(Exception exep){
                
                    throw new JboException(utils.getSQLMensaje(exep));  
                }
            }
        
    }

    /**Gets the attribute value for IdDetLicencia, using the alias name IdDetLicencia
     */
    public Number getIdDetLicencia() {
        return (Number)getAttributeInternal(IDDETLICENCIA);
    }

    /**Sets <code>value</code> as the attribute value for IdDetLicencia
     */
    public void setIdDetLicencia(Number value) {
        setAttributeInternal(IDDETLICENCIA, value);
    }

    /**Gets the attribute value for IdSolicitud, using the alias name IdSolicitud
     */
    public Number getIdSolicitud() {
        return (Number)getAttributeInternal(IDSOLICITUD);
    }

    /**Sets <code>value</code> as the attribute value for IdSolicitud
     */
    public void setIdSolicitud(Number value) {
        setAttributeInternal(IDSOLICITUD, value);
    }

    /**Gets the attribute value for IdMotivoDetLicencia, using the alias name IdMotivoDetLicencia
     */
    public Number getIdMotivoDetLicencia() {
        return (Number)getAttributeInternal(IDMOTIVODETLICENCIA);
    }

    /**Sets <code>value</code> as the attribute value for IdMotivoDetLicencia
     */
    public void setIdMotivoDetLicencia(Number value) {
        setAttributeInternal(IDMOTIVODETLICENCIA, value);
    }

    /**Gets the attribute value for IdDetLicProrroga, using the alias name IdDetLicProrroga
     */
    public Number getIdDetLicProrroga() {
        return (Number)getAttributeInternal(IDDETLICPRORROGA);
    }

    /**Sets <code>value</code> as the attribute value for IdDetLicProrroga
     */
    public void setIdDetLicProrroga(Number value) {
        setAttributeInternal(IDDETLICPRORROGA, value);
    }

    /**Gets the attribute value for TipoLicencia, using the alias name TipoLicencia
     */
    public String getTipoLicencia() {
        return (String)getAttributeInternal(TIPOLICENCIA);
    }

    /**Sets <code>value</code> as the attribute value for TipoLicencia
     */
    public void setTipoLicencia(String value) {
        setAttributeInternal(TIPOLICENCIA, value);
    }

    /**Gets the attribute value for AyudaBecaria, using the alias name AyudaBecaria
     */
    public String getAyudaBecaria() {
        return (String)getAttributeInternal(AYUDABECARIA);
    }

    /**Sets <code>value</code> as the attribute value for AyudaBecaria
     */
    public void setAyudaBecaria(String value) {
        setAttributeInternal(AYUDABECARIA, value);
    }

    /**Gets the attribute value for FechaInicio, using the alias name FechaInicio
     */
    public Date getFechaInicio() {
        return (Date)getAttributeInternal(FECHAINICIO);
    }

    /**Sets <code>value</code> as the attribute value for FechaInicio
     */
    public void setFechaInicio(Date value) {
        setAttributeInternal(FECHAINICIO, value);
    }

    /**Gets the attribute value for FechaFin, using the alias name FechaFin
     */
    public Date getFechaFin() {
        return (Date)getAttributeInternal(FECHAFIN);
    }

    /**Sets <code>value</code> as the attribute value for FechaFin
     */
    public void setFechaFin(Date value) {
        setAttributeInternal(FECHAFIN, value);
    }

    /**Gets the attribute value for DescMotivoLicencia, using the alias name DescMotivoLicencia
     */
    public String getDescMotivoLicencia() {
        return (String)getAttributeInternal(DESCMOTIVOLICENCIA);
    }

    /**Sets <code>value</code> as the attribute value for DescMotivoLicencia
     */
    public void setDescMotivoLicencia(String value) {
        setAttributeInternal(DESCMOTIVOLICENCIA, value);
    }

    /**Gets the attribute value for Prorroga, using the alias name Prorroga
     */
    public String getProrroga() {
        return (String)getAttributeInternal(PRORROGA);
    }

    /**Sets <code>value</code> as the attribute value for Prorroga
     */
    public void setProrroga(String value) {
        setAttributeInternal(PRORROGA, value);
    }

    /**Gets the attribute value for FechaResolucion, using the alias name FechaResolucion
     */
    public Date getFechaResolucion() {
        return (Date)getAttributeInternal(FECHARESOLUCION);
    }

    /**Sets <code>value</code> as the attribute value for FechaResolucion
     */
    public void setFechaResolucion(Date value) {
        setAttributeInternal(FECHARESOLUCION, value);
    }

    /**Gets the attribute value for Procede, using the alias name Procede
     */
    public String getProcede() {
        return (String)getAttributeInternal(PROCEDE);
    }

    /**Sets <code>value</code> as the attribute value for Procede
     */
    public void setProcede(String value) {
        setAttributeInternal(PROCEDE, value);
    }

    /**Gets the attribute value for ObservResolucion, using the alias name ObservResolucion
     */
    public String getObservResolucion() {
        return (String)getAttributeInternal(OBSERVRESOLUCION);
    }

    /**Sets <code>value</code> as the attribute value for ObservResolucion
     */
    public void setObservResolucion(String value) {
        setAttributeInternal(OBSERVRESOLUCION, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case IDDETLICENCIA:
            return getIdDetLicencia();
        case IDSOLICITUD:
            return getIdSolicitud();
        case IDMOTIVODETLICENCIA:
            return getIdMotivoDetLicencia();
        case IDDETLICPRORROGA:
            return getIdDetLicProrroga();
        case TIPOLICENCIA:
            return getTipoLicencia();
        case AYUDABECARIA:
            return getAyudaBecaria();
        case FECHAINICIO:
            return getFechaInicio();
        case FECHAFIN:
            return getFechaFin();
        case DESCMOTIVOLICENCIA:
            return getDescMotivoLicencia();
        case PRORROGA:
            return getProrroga();
        case FECHARESOLUCION:
            return getFechaResolucion();
        case PROCEDE:
            return getProcede();
        case OBSERVRESOLUCION:
            return getObservResolucion();
        case MODPOR:
            return getModPor();
        case HORASBAJA:
            return getHorasBaja();
        case JEFEINMEDIATO:
            return getJefeinmediato();
        case AUTORIDADRESOLUCION:
            return getAutoridadResolucion();
        case OTRASOBSERVRESOL:
            return getOtrasObservResol();
        case PRORROGADEL:
            return getProrrogaDel();
        case PRORROGAAL:
            return getProrrogaAl();
        case MOTIVOPRORROGA:
            return getMotivoProrroga();
        case CARGOJEFE:
            return getCargoJefe();
        case NOMBREJEFE:
            return getNombreJefe();
        case SISDETPLAZACUBRELIC:
            return getSisDetplazaCubreLic();
        case SISSOLICITUD:
            return getSisSolicitud();
        case SISMOTIVODETLICENCIA:
            return getSisMotivoDetLicencia();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case IDDETLICENCIA:
            setIdDetLicencia((Number)value);
            return;
        case IDSOLICITUD:
            setIdSolicitud((Number)value);
            return;
        case IDMOTIVODETLICENCIA:
            setIdMotivoDetLicencia((Number)value);
            return;
        case IDDETLICPRORROGA:
            setIdDetLicProrroga((Number)value);
            return;
        case TIPOLICENCIA:
            setTipoLicencia((String)value);
            return;
        case AYUDABECARIA:
            setAyudaBecaria((String)value);
            return;
        case FECHAINICIO:
            setFechaInicio((Date)value);
            return;
        case FECHAFIN:
            setFechaFin((Date)value);
            return;
        case DESCMOTIVOLICENCIA:
            setDescMotivoLicencia((String)value);
            return;
        case PRORROGA:
            setProrroga((String)value);
            return;
        case FECHARESOLUCION:
            setFechaResolucion((Date)value);
            return;
        case PROCEDE:
            setProcede((String)value);
            return;
        case OBSERVRESOLUCION:
            setObservResolucion((String)value);
            return;
        case MODPOR:
            setModPor((Number)value);
            return;
        case HORASBAJA:
            setHorasBaja((Number)value);
            return;
        case JEFEINMEDIATO:
            setJefeinmediato((String)value);
            return;
        case AUTORIDADRESOLUCION:
            setAutoridadResolucion((String)value);
            return;
        case OTRASOBSERVRESOL:
            setOtrasObservResol((String)value);
            return;
        case PRORROGADEL:
            setProrrogaDel((Date)value);
            return;
        case PRORROGAAL:
            setProrrogaAl((Date)value);
            return;
        case MOTIVOPRORROGA:
            setMotivoProrroga((String)value);
            return;
        case CARGOJEFE:
            setCargoJefe((String)value);
            return;
        case NOMBREJEFE:
            setNombreJefe((String)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }

    /**Gets the associated entity SisSolicitudImpl
     */
    public SisSolicitudImpl getSisSolicitud() {
        return (SisSolicitudImpl)getAttributeInternal(SISSOLICITUD);
    }

    /**Sets <code>value</code> as the associated entity SisSolicitudImpl
     */
    public void setSisSolicitud(SisSolicitudImpl value) {
        setAttributeInternal(SISSOLICITUD, value);
    }

    /**Gets the attribute value for ModPor, using the alias name ModPor
     */
    public Number getModPor() {
        return (Number)getAttributeInternal(MODPOR);
    }

    /**Sets <code>value</code> as the attribute value for ModPor
     */
    public void setModPor(Number value) {
        setAttributeInternal(MODPOR, value);
    }

    /**Gets the associated entity SisMotivoDetLicenciaImpl
     */
    public SisMotivoDetLicenciaImpl getSisMotivoDetLicencia() {
        return (SisMotivoDetLicenciaImpl)getAttributeInternal(SISMOTIVODETLICENCIA);
    }

    /**Sets <code>value</code> as the associated entity SisMotivoDetLicenciaImpl
     */
    public void setSisMotivoDetLicencia(SisMotivoDetLicenciaImpl value) {
        setAttributeInternal(SISMOTIVODETLICENCIA, value);
    }


    /**Gets the attribute value for HorasBaja, using the alias name HorasBaja
     */
    public Number getHorasBaja() {
        return (Number)getAttributeInternal(HORASBAJA);
    }

    /**Sets <code>value</code> as the attribute value for HorasBaja
     */
    public void setHorasBaja(Number value) {
        setAttributeInternal(HORASBAJA, value);
    }

    /**Gets the attribute value for Jefeinmediato, using the alias name Jefeinmediato
     */
    public String getJefeinmediato() {
        return (String)getAttributeInternal(JEFEINMEDIATO);
    }

    /**Sets <code>value</code> as the attribute value for Jefeinmediato
     */
    public void setJefeinmediato(String value) {
        setAttributeInternal(JEFEINMEDIATO, value);
    }

    /**Gets the attribute value for AutoridadResolucion, using the alias name AutoridadResolucion
     */
    public String getAutoridadResolucion() {
        return (String)getAttributeInternal(AUTORIDADRESOLUCION);
    }

    /**Sets <code>value</code> as the attribute value for AutoridadResolucion
     */
    public void setAutoridadResolucion(String value) {
        setAttributeInternal(AUTORIDADRESOLUCION, value);
    }

    /**Gets the attribute value for OtrasObservResol, using the alias name OtrasObservResol
     */
    public String getOtrasObservResol() {
        return (String)getAttributeInternal(OTRASOBSERVRESOL);
    }

    /**Sets <code>value</code> as the attribute value for OtrasObservResol
     */
    public void setOtrasObservResol(String value) {
        setAttributeInternal(OTRASOBSERVRESOL, value);
    }

    /**Gets the attribute value for ProrrogaDel, using the alias name ProrrogaDel
     */
    public Date getProrrogaDel() {
        return (Date)getAttributeInternal(PRORROGADEL);
    }

    /**Sets <code>value</code> as the attribute value for ProrrogaDel
     */
    public void setProrrogaDel(Date value) {
        setAttributeInternal(PRORROGADEL, value);
    }

    /**Gets the attribute value for ProrrogaAl, using the alias name ProrrogaAl
     */
    public Date getProrrogaAl() {
        return (Date)getAttributeInternal(PRORROGAAL);
    }

    /**Sets <code>value</code> as the attribute value for ProrrogaAl
     */
    public void setProrrogaAl(Date value) {
        setAttributeInternal(PRORROGAAL, value);
    }

    /**Gets the attribute value for MotivoProrroga, using the alias name MotivoProrroga
     */
    public String getMotivoProrroga() {
        return (String)getAttributeInternal(MOTIVOPRORROGA);
    }

    /**Sets <code>value</code> as the attribute value for MotivoProrroga
     */
    public void setMotivoProrroga(String value) {
        setAttributeInternal(MOTIVOPRORROGA, value);
    }

    /**Gets the attribute value for CargoJefe, using the alias name CargoJefe
     */
    public String getCargoJefe() {
        
      String []vValores;      
      if (getAttributeInternal(CARGOJEFE)==null)
      {
        if (this.getJefeinmediato()!=null)
        {
            vValores=this.getJefeinmediato().split("\\|");
            if (vValores.length>=1){
               return vValores[1]; 
            }
        }
      }  
        return (String)getAttributeInternal(CARGOJEFE);
    }

    /**Sets <code>value</code> as the attribute value for CargoJefe
     */
    public void setCargoJefe(String value) {
        setAttributeInternal(CARGOJEFE, value);
    }

    /**Gets the attribute value for NombreJefe, using the alias name NombreJefe
     */
    public String getNombreJefe() {
        String []vValores;      
       if (getAttributeInternal(NOMBREJEFE)==null)
       {
          if (this.getJefeinmediato()!=null){
              vValores=this.getJefeinmediato().split("\\|");
              if (vValores.length>=1){
                 return vValores[0]; 
              }
          }
       }   
        return (String)getAttributeInternal(NOMBREJEFE);
    }

    /**Sets <code>value</code> as the attribute value for NombreJefe
     */
    public void setNombreJefe(String value) {
        setAttributeInternal(NOMBREJEFE, value);
    }

    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getSisDetplazaCubreLic() {
        return (RowIterator)getAttributeInternal(SISDETPLAZACUBRELIC);
    }

    /**Creates a Key object based on given key constituents
     */
    public static Key createPrimaryKey(Number idDetLicencia) {
        return new Key(new Object[]{idDetLicencia});
    }
}
