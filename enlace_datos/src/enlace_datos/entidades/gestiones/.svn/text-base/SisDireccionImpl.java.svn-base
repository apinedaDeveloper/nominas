package enlace_datos.entidades.gestiones;

import enlace_datos.util.myEntityImpl;

import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SisDireccionImpl extends myEntityImpl {
    public static final int IDDIRECCION = 0;
    public static final int IDMUNICIPIO = 1;
    public static final int REGISTROEMPLEADO = 2;
    public static final int DIRECCION = 3;
    public static final int DIRECACTUAL = 4;
    public static final int FECHACREACION = 5;
    public static final int NOMDEP = 6;
    public static final int NOMMUNI = 7;
    public static final int SISEMPLEADO = 8;
    private static EntityDefImpl mDefinitionObject;

    /**This is the default constructor (do not remove)
     */
    public SisDireccionImpl() {
    }


    /**Retrieves the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = (EntityDefImpl)EntityDefImpl.findDefObject("enlace_datos.entidades.gestiones.SisDireccion");
        }
        return mDefinitionObject;
    }

    /**Gets the attribute value for IdDireccion, using the alias name IdDireccion
     */
    public Number getIdDireccion() {
        return (Number)getAttributeInternal(IDDIRECCION);
    }

    /**Sets <code>value</code> as the attribute value for IdDireccion
     */
    public void setIdDireccion(Number value) {
        setAttributeInternal(IDDIRECCION, value);
    }

    /**Gets the attribute value for IdMunicipio, using the alias name IdMunicipio
     */
    public Number getIdMunicipio() {
        return (Number)getAttributeInternal(IDMUNICIPIO);
    }

    /**Sets <code>value</code> as the attribute value for IdMunicipio
     */
    public void setIdMunicipio(Number value) {
        setAttributeInternal(IDMUNICIPIO, value);
    }

    /**Gets the attribute value for RegistroEmpleado, using the alias name RegistroEmpleado
     */
    public Number getRegistroEmpleado() {
        return (Number)getAttributeInternal(REGISTROEMPLEADO);
    }

    /**Sets <code>value</code> as the attribute value for RegistroEmpleado
     */
    public void setRegistroEmpleado(Number value) {
        setAttributeInternal(REGISTROEMPLEADO, value);
    }

    /**Gets the attribute value for Direccion, using the alias name Direccion
     */
    public String getDireccion() {
        return (String)getAttributeInternal(DIRECCION);
    }

    /**Sets <code>value</code> as the attribute value for Direccion
     */
    public void setDireccion(String value) {
        setAttributeInternal(DIRECCION, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case IDDIRECCION:
            return getIdDireccion();
        case IDMUNICIPIO:
            return getIdMunicipio();
        case REGISTROEMPLEADO:
            return getRegistroEmpleado();
        case DIRECCION:
            return getDireccion();
        case DIRECACTUAL:
            return getDirecActual();
        case FECHACREACION:
            return getFechaCreacion();
        case NOMDEP:
            return getNomDep();
        case NOMMUNI:
            return getNomMuni();
        case SISEMPLEADO:
            return getSisEmpleado();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case IDDIRECCION:
            setIdDireccion((Number)value);
            return;
        case IDMUNICIPIO:
            setIdMunicipio((Number)value);
            return;
        case REGISTROEMPLEADO:
            setRegistroEmpleado((Number)value);
            return;
        case DIRECCION:
            setDireccion((String)value);
            return;
        case DIRECACTUAL:
            setDirecActual((String)value);
            return;
        case FECHACREACION:
            setFechaCreacion((Date)value);
            return;
        case NOMDEP:
            setNomDep((String)value);
            return;
        case NOMMUNI:
            setNomMuni((String)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }

    /**Gets the associated entity SisEmpleadoImpl
     */
    public SisEmpleadoImpl getSisEmpleado() {
        return (SisEmpleadoImpl)getAttributeInternal(SISEMPLEADO);
    }

    /**Sets <code>value</code> as the associated entity SisEmpleadoImpl
     */
    public void setSisEmpleado(SisEmpleadoImpl value) {
        setAttributeInternal(SISEMPLEADO, value);
    }


    /**Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    protected void validateEntity2(){
       
       if (this.getIdMunicipio()==null){
           throw new JboException("- Seleccione el municipio.");
       }
       if (this.getDireccion()==null || (this.getDireccion()!=null && this.getDireccion().equals(""))){
           throw new JboException("- Ingrese su domicilio.");
       }
       
    }

    /**Custom DML update/insert/delete logic here.
     */
    protected void doDML(int operation, TransactionEvent e) {
        
      //  System.out.println("direcicon");        
        validateEntity2();
        if (operation==this.DML_INSERT){
            SequenceImpl sequence = new SequenceImpl("SIS_DIRECCION_SQ",e.getDBTransaction());
            this.setIdDireccion(sequence.getSequenceNumber());
           
         
        }
        registrarLogOperaciones(operation, e);  
        super.doDML(operation, e);
    }

    /**Gets the attribute value for DirecActual, using the alias name DirecActual
     */
    public String getDirecActual() {
        return (String)getAttributeInternal(DIRECACTUAL);
    }

    /**Sets <code>value</code> as the attribute value for DirecActual
     */
    public void setDirecActual(String value) {
        setAttributeInternal(DIRECACTUAL, value);
    }

    /**Gets the attribute value for FechaCreacion, using the alias name FechaCreacion
     */
    public Date getFechaCreacion() {
        return (Date)getAttributeInternal(FECHACREACION);
    }

    /**Sets <code>value</code> as the attribute value for FechaCreacion
     */
    public void setFechaCreacion(Date value) {
        setAttributeInternal(FECHACREACION, value);
    }

    /**Gets the attribute value for NomDep, using the alias name NomDep
     */
    public String getNomDep() {
        return (String)getAttributeInternal(NOMDEP);
    }

    /**Sets <code>value</code> as the attribute value for NomDep
     */
    public void setNomDep(String value) {
        setAttributeInternal(NOMDEP, value);
    }

    /**Gets the attribute value for NomMuni, using the alias name NomMuni
     */
    public String getNomMuni() {
        return (String)getAttributeInternal(NOMMUNI);
    }

    /**Sets <code>value</code> as the attribute value for NomMuni
     */
    public void setNomMuni(String value) {
        setAttributeInternal(NOMMUNI, value);
    }

    /**Creates a Key object based on given key constituents
     */
    public static Key createPrimaryKey(Number idDireccion) {
        return new Key(new Object[]{idDireccion});
    }
}
