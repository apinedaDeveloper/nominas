package enlace_datos.entidades.admin;

import enlace_datos.util.myEntityImpl;

import oracle.jbo.Key;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SisIntervaloIsrImpl extends myEntityImpl {
    public static final int IDINTERVALOISR = 0;
    public static final int LIMITEINFERIOR = 1;
    public static final int LIMITESUPERIOR = 2;
    public static final int IMPORTEFIJO = 3;
    public static final int PORCENTAJE = 4;
    public static final int EXCEDENTE = 5;
    public static final int FECHAINICIO = 6;
    public static final int FECHAFIN = 7;
    public static final int FECHACREACION = 8;
    private static EntityDefImpl mDefinitionObject;

    /**This is the default constructor (do not remove)
     */
    public SisIntervaloIsrImpl() {
    }


    /**Retrieves the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = (EntityDefImpl)EntityDefImpl.findDefObject("enlace_datos.entidades.admin.SisIntervaloIsr");
        }
        return mDefinitionObject;
    }

    /**Gets the attribute value for IdIntervaloIsr, using the alias name IdIntervaloIsr
     */
    public Number getIdIntervaloIsr() {
        return (Number)getAttributeInternal(IDINTERVALOISR);
    }

    /**Sets <code>value</code> as the attribute value for IdIntervaloIsr
     */
    public void setIdIntervaloIsr(Number value) {
        setAttributeInternal(IDINTERVALOISR, value);
    }

    /**Gets the attribute value for LimiteInferior, using the alias name LimiteInferior
     */
    public Number getLimiteInferior() {
        return (Number)getAttributeInternal(LIMITEINFERIOR);
    }

    /**Sets <code>value</code> as the attribute value for LimiteInferior
     */
    public void setLimiteInferior(Number value) {
        setAttributeInternal(LIMITEINFERIOR, value);
    }

    /**Gets the attribute value for LimiteSuperior, using the alias name LimiteSuperior
     */
    public Number getLimiteSuperior() {
        return (Number)getAttributeInternal(LIMITESUPERIOR);
    }

    /**Sets <code>value</code> as the attribute value for LimiteSuperior
     */
    public void setLimiteSuperior(Number value) {
        setAttributeInternal(LIMITESUPERIOR, value);
    }

    /**Gets the attribute value for ImporteFijo, using the alias name ImporteFijo
     */
    public Number getImporteFijo() {
        return (Number)getAttributeInternal(IMPORTEFIJO);
    }

    /**Sets <code>value</code> as the attribute value for ImporteFijo
     */
    public void setImporteFijo(Number value) {
        setAttributeInternal(IMPORTEFIJO, value);
    }

    /**Gets the attribute value for Porcentaje, using the alias name Porcentaje
     */
    public Number getPorcentaje() {
        return (Number)getAttributeInternal(PORCENTAJE);
    }

    /**Sets <code>value</code> as the attribute value for Porcentaje
     */
    public void setPorcentaje(Number value) {
        setAttributeInternal(PORCENTAJE, value);
    }

    /**Gets the attribute value for Excedente, using the alias name Excedente
     */
    public Number getExcedente() {
        return (Number)getAttributeInternal(EXCEDENTE);
    }

    /**Sets <code>value</code> as the attribute value for Excedente
     */
    public void setExcedente(Number value) {
        setAttributeInternal(EXCEDENTE, value);
    }

    /**Gets the attribute value for FechaInicio, using the alias name FechaInicio
     */
    public Date getFechaInicio() {
        return (Date)getAttributeInternal(FECHAINICIO);
    }

    /**Sets <code>value</code> as the attribute value for FechaInicio
     */
    public void setFechaInicio(Date value) {
        setAttributeInternal(FECHAINICIO, value);
    }

    /**Gets the attribute value for FechaFin, using the alias name FechaFin
     */
    public Date getFechaFin() {
        return (Date)getAttributeInternal(FECHAFIN);
    }

    /**Sets <code>value</code> as the attribute value for FechaFin
     */
    public void setFechaFin(Date value) {
        setAttributeInternal(FECHAFIN, value);
    }

    /**Gets the attribute value for FechaCreacion, using the alias name FechaCreacion
     */
    public Date getFechaCreacion() {
        return (Date)getAttributeInternal(FECHACREACION);
    }

    /**Sets <code>value</code> as the attribute value for FechaCreacion
     */
    public void setFechaCreacion(Date value) {
        setAttributeInternal(FECHACREACION, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case IDINTERVALOISR:
            return getIdIntervaloIsr();
        case LIMITEINFERIOR:
            return getLimiteInferior();
        case LIMITESUPERIOR:
            return getLimiteSuperior();
        case IMPORTEFIJO:
            return getImporteFijo();
        case PORCENTAJE:
            return getPorcentaje();
        case EXCEDENTE:
            return getExcedente();
        case FECHAINICIO:
            return getFechaInicio();
        case FECHAFIN:
            return getFechaFin();
        case FECHACREACION:
            return getFechaCreacion();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case IDINTERVALOISR:
            setIdIntervaloIsr((Number)value);
            return;
        case LIMITEINFERIOR:
            setLimiteInferior((Number)value);
            return;
        case LIMITESUPERIOR:
            setLimiteSuperior((Number)value);
            return;
        case IMPORTEFIJO:
            setImporteFijo((Number)value);
            return;
        case PORCENTAJE:
            setPorcentaje((Number)value);
            return;
        case EXCEDENTE:
            setExcedente((Number)value);
            return;
        case FECHAINICIO:
            setFechaInicio((Date)value);
            return;
        case FECHAFIN:
            setFechaFin((Date)value);
            return;
        case FECHACREACION:
            setFechaCreacion((Date)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }

    /**Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**Custom DML update/insert/delete logic here.
     */
    protected void doDML(int operation, TransactionEvent e) {
        
      if (operation==this.DML_INSERT){  
        SequenceImpl sequence = new SequenceImpl("SIS_INTERVALO_ISR_SQ",e.getDBTransaction());
          System.out.print(sequence.getSequenceNumber());
         this.setIdIntervaloIsr(sequence.getSequenceNumber());
         //  setProdId(sequence.getSequenceNumber());
      }
        
        registrarLogOperaciones(operation, e); 
        super.doDML(operation, e);
    }

    /**Creates a Key object based on given key constituents
     */
    public static Key createPrimaryKey(Number idIntervaloIsr) {
        return new Key(new Object[]{idIntervaloIsr});
    }
}
