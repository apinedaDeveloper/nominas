package enlace_datos.entidades.admin;

import enlace_datos.util.myEntityImpl;
import enlace_datos.util.utils;

import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SisPuestoImpl extends myEntityImpl {
    public static final int IDPUESTO = 0;
    public static final int NOMBRE = 1;
    public static final int NOMBREABREV = 2;
    public static final int ESCALAMIN = 3;
    public static final int ESCALAMAX = 4;
    public static final int IDCATEGORIA = 5;
    public static final int ESCALAFON = 6;
    public static final int FECHACREACION = 7;
    public static final int CREADOPOR = 8;
    public static final int RECORRIDO = 9;
    public static final int ELECTOR = 10;
    public static final int REQUISITOEXTERNO = 11;
    public static final int REQUISITOINTERNO = 12;
    public static final int NATURALEZA = 13;
    public static final int FECHABAJA = 14;
    public static final int OBSERV = 15;
    public static final int IDTIPOSERVPUESTO = 16;
    public static final int REQPROF = 17;
    public static final int SISCATEGORIAPUESTO = 18;
    public static final int SISHISTORICOPUESTO = 19;
    private static EntityDefImpl mDefinitionObject;

    /**This is the default constructor (do not remove)
     */
    public SisPuestoImpl() {
    }


    /**Retrieves the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = (EntityDefImpl)EntityDefImpl.findDefObject("enlace_datos.entidades.admin.SisPuesto");
        }
        return mDefinitionObject;
    }

    /**Gets the attribute value for IdPuesto, using the alias name IdPuesto
     */
    public Number getIdPuesto() {
        return (Number)getAttributeInternal(IDPUESTO);
    }

    /**Sets <code>value</code> as the attribute value for IdPuesto
     */
    public void setIdPuesto(Number value) {
        setAttributeInternal(IDPUESTO, value);
    }

    /**Gets the attribute value for Nombre, using the alias name Nombre
     */
    public String getNombre() {
        return (String)getAttributeInternal(NOMBRE);
    }

    /**Sets <code>value</code> as the attribute value for Nombre
     */
    public void setNombre(String value) {
        setAttributeInternal(NOMBRE, value);
    }

    /**Gets the attribute value for Nombreabrev, using the alias name Nombreabrev
     */
    public String getNombreabrev() {
        return (String)getAttributeInternal(NOMBREABREV);
    }

    /**Sets <code>value</code> as the attribute value for Nombreabrev
     */
    public void setNombreabrev(String value) {
        setAttributeInternal(NOMBREABREV, value);
    }

    /**Gets the attribute value for Escalamin, using the alias name Escalamin
     */
    public Number getEscalamin() {
        return (Number)getAttributeInternal(ESCALAMIN);
    }

    /**Sets <code>value</code> as the attribute value for Escalamin
     */
    public void setEscalamin(Number value) {
        setAttributeInternal(ESCALAMIN, value);
    }

    /**Gets the attribute value for Escalamax, using the alias name Escalamax
     */
    public Number getEscalamax() {
        return (Number)getAttributeInternal(ESCALAMAX);
    }

    /**Sets <code>value</code> as the attribute value for Escalamax
     */
    public void setEscalamax(Number value) {
        setAttributeInternal(ESCALAMAX, value);
    }

    /**Gets the attribute value for IdCategoria, using the alias name IdCategoria
     */
    public Number getIdCategoria() {
        return (Number)getAttributeInternal(IDCATEGORIA);
    }

    /**Sets <code>value</code> as the attribute value for IdCategoria
     */
    public void setIdCategoria(Number value) {
        setAttributeInternal(IDCATEGORIA, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case IDPUESTO:
            return getIdPuesto();
        case NOMBRE:
            return getNombre();
        case NOMBREABREV:
            return getNombreabrev();
        case ESCALAMIN:
            return getEscalamin();
        case ESCALAMAX:
            return getEscalamax();
        case IDCATEGORIA:
            return getIdCategoria();
        case ESCALAFON:
            return getEscalafon();
        case FECHACREACION:
            return getFechaCreacion();
        case CREADOPOR:
            return getCreadopor();
        case RECORRIDO:
            return getRecorrido();
        case ELECTOR:
            return getElector();
        case REQUISITOEXTERNO:
            return getRequisitoExterno();
        case REQUISITOINTERNO:
            return getRequisitoInterno();
        case NATURALEZA:
            return getNaturaleza();
        case FECHABAJA:
            return getFechaBaja();
        case OBSERV:
            return getObserv();
        case IDTIPOSERVPUESTO:
            return getIdTiposervPuesto();
        case REQPROF:
            return getReqProf();
        case SISHISTORICOPUESTO:
            return getSisHistoricoPuesto();
        case SISCATEGORIAPUESTO:
            return getSisCategoriaPuesto();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case IDPUESTO:
            setIdPuesto((Number)value);
            return;
        case NOMBRE:
            setNombre((String)value);
            return;
        case NOMBREABREV:
            setNombreabrev((String)value);
            return;
        case ESCALAMIN:
            setEscalamin((Number)value);
            return;
        case ESCALAMAX:
            setEscalamax((Number)value);
            return;
        case IDCATEGORIA:
            setIdCategoria((Number)value);
            return;
        case ESCALAFON:
            setEscalafon((Number)value);
            return;
        case FECHACREACION:
            setFechaCreacion((Date)value);
            return;
        case CREADOPOR:
            setCreadopor((String)value);
            return;
        case RECORRIDO:
            setRecorrido((Number)value);
            return;
        case ELECTOR:
            setElector((Number)value);
            return;
        case REQUISITOEXTERNO:
            setRequisitoExterno((String)value);
            return;
        case REQUISITOINTERNO:
            setRequisitoInterno((String)value);
            return;
        case NATURALEZA:
            setNaturaleza((String)value);
            return;
        case FECHABAJA:
            setFechaBaja((Date)value);
            return;
        case OBSERV:
            setObserv((String)value);
            return;
        case IDTIPOSERVPUESTO:
            setIdTiposervPuesto((Number)value);
            return;
        case REQPROF:
            setReqProf((Number)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }

    /**Gets the associated entity SisCategoriaPuestoImpl
     */
    public SisCategoriaPuestoImpl getSisCategoriaPuesto() {
        return (SisCategoriaPuestoImpl)getAttributeInternal(SISCATEGORIAPUESTO);
    }

    /**Sets <code>value</code> as the associated entity SisCategoriaPuestoImpl
     */
    public void setSisCategoriaPuesto(SisCategoriaPuestoImpl value) {
        setAttributeInternal(SISCATEGORIAPUESTO, value);
    }

    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getSisHistoricoPuesto() {
        return (RowIterator)getAttributeInternal(SISHISTORICOPUESTO);
    }

    /**Gets the attribute value for Escalafon, using the alias name Escalafon
     */
    public Number getEscalafon() {
        return (Number)getAttributeInternal(ESCALAFON);
    }

    /**Sets <code>value</code> as the attribute value for Escalafon
     */
    public void setEscalafon(Number value) {
        setAttributeInternal(ESCALAFON, value);
    }

    /**Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    
    public void validarPuesto(int vOperacion){
        

        if (this.getIdCategoria()==null)
         throw new JboException("Por favor seleccione la categoria.");


        if (this.getIdPuesto()==null)
         throw new JboException("Por favor ingrese la clasificación.");
        
         
        if (this.getNombre()==null || (this.getNombre()!=null && this.getNombre().equals(""))) 
            throw new JboException("Por favor ingrese el nombre");
     /*
        if (vOperacion!=DML_INSERT)
        {
                if (this.getEscalamin()==null)
                    throw new JboException("Por favor ingrese la escala minima");
                    
                if (this.getEscalamax()==null)
                    throw new JboException("Por favor ingrese la escala maxima");
        }
        */
    }
    /**Custom DML update/insert/delete logic here.
     */
    protected void doDML(int operation, TransactionEvent e) {
    
        validarPuesto(operation);

        if (operation==DML_INSERT)
        {
          this.setCreadopor(utils.getAuthUser(e.getDBTransaction()));
        }else if(operation==DML_UPDATE){
      //    this.setCreadopor();  
            
        }
        
        registrarLogOperaciones(operation, e); 
        super.doDML(operation, e);
    }

    /**Gets the attribute value for FechaCreacion, using the alias name FechaCreacion
     */
    public Date getFechaCreacion() {
        return (Date)getAttributeInternal(FECHACREACION);
    }

    /**Sets <code>value</code> as the attribute value for FechaCreacion
     */
    public void setFechaCreacion(Date value) {
        setAttributeInternal(FECHACREACION, value);
    }

    /**Gets the attribute value for Creadopor, using the alias name Creadopor
     */
    public String getCreadopor() {
        return (String)getAttributeInternal(CREADOPOR);
    }

    /**Sets <code>value</code> as the attribute value for Creadopor
     */
    public void setCreadopor(String value) {
        setAttributeInternal(CREADOPOR, value);
    }

    /**Gets the attribute value for Recorrido, using the alias name Recorrido
     */
    public Number getRecorrido() {
        return (Number)getAttributeInternal(RECORRIDO);
    }

    /**Sets <code>value</code> as the attribute value for Recorrido
     */
    public void setRecorrido(Number value) {
        setAttributeInternal(RECORRIDO, value);
    }

    /**Gets the attribute value for Elector, using the alias name Elector
     */
    public Number getElector() {
        return (Number)getAttributeInternal(ELECTOR);
    }

    /**Sets <code>value</code> as the attribute value for Elector
     */
    public void setElector(Number value) {
        setAttributeInternal(ELECTOR, value);
    }

    /**Gets the attribute value for RequisitoExterno, using the alias name RequisitoExterno
     */
    public String getRequisitoExterno() {
        return (String)getAttributeInternal(REQUISITOEXTERNO);
    }

    /**Sets <code>value</code> as the attribute value for RequisitoExterno
     */
    public void setRequisitoExterno(String value) {
        setAttributeInternal(REQUISITOEXTERNO, value);
    }

    /**Gets the attribute value for RequisitoInterno, using the alias name RequisitoInterno
     */
    public String getRequisitoInterno() {
        return (String)getAttributeInternal(REQUISITOINTERNO);
    }

    /**Sets <code>value</code> as the attribute value for RequisitoInterno
     */
    public void setRequisitoInterno(String value) {
        setAttributeInternal(REQUISITOINTERNO, value);
    }

    /**Gets the attribute value for Naturaleza, using the alias name Naturaleza
     */
    public String getNaturaleza() {
        return (String)getAttributeInternal(NATURALEZA);
    }

    /**Sets <code>value</code> as the attribute value for Naturaleza
     */
    public void setNaturaleza(String value) {
        setAttributeInternal(NATURALEZA, value);
    }

    /**Gets the attribute value for FechaBaja, using the alias name FechaBaja
     */
    public Date getFechaBaja() {
        return (Date)getAttributeInternal(FECHABAJA);
    }

    /**Sets <code>value</code> as the attribute value for FechaBaja
     */
    public void setFechaBaja(Date value) {
        setAttributeInternal(FECHABAJA, value);
    }

    /**Gets the attribute value for Observ, using the alias name Observ
     */
    public String getObserv() {
        return (String)getAttributeInternal(OBSERV);
    }

    /**Sets <code>value</code> as the attribute value for Observ
     */
    public void setObserv(String value) {
        setAttributeInternal(OBSERV, value);
    }

    /**Gets the attribute value for IdTiposervPuesto, using the alias name IdTiposervPuesto
     */
    public Number getIdTiposervPuesto() {
        return (Number)getAttributeInternal(IDTIPOSERVPUESTO);
    }

    /**Sets <code>value</code> as the attribute value for IdTiposervPuesto
     */
    public void setIdTiposervPuesto(Number value) {
        setAttributeInternal(IDTIPOSERVPUESTO, value);
    }

    /**Gets the attribute value for ReqProf, using the alias name ReqProf
     */
    public Number getReqProf() {
        return (Number)getAttributeInternal(REQPROF);
    }

    /**Sets <code>value</code> as the attribute value for ReqProf
     */
    public void setReqProf(Number value) {
        setAttributeInternal(REQPROF, value);
    }

    /**Creates a Key object based on given key constituents
     */
    public static Key createPrimaryKey(Number idPuesto) {
        return new Key(new Object[]{idPuesto});
    }
}
