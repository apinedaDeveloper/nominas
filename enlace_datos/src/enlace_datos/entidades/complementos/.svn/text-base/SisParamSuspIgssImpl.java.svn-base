package enlace_datos.entidades.complementos;


import enlace_datos.myException;

import enlace_datos.util.utils;

import java.util.Calendar;

import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SessionImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SisParamSuspIgssImpl extends EntityImpl {
    public static final int IDPARAMSUSPIGSS = 0;
    public static final int REGISTROEMPLEADO = 1;
    public static final int MAXPAGAIGSS = 2;
    public static final int FECHAINICIO = 3;
    public static final int FECHAFIN = 4;
    public static final int APLICACOMPLEMENTO = 5;
    public static final int OBSERVACIONES = 6;
    public static final int CREADOPOR = 7;
    public static final int FECHACREACION = 8;
    public static final int MODPOR = 9;
    public static final int FECHAMOD = 10;
    private static EntityDefImpl mDefinitionObject;

    /**This is the default constructor (do not remove)
     */
    public SisParamSuspIgssImpl() {
    }


    /**Retrieves the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = (EntityDefImpl)EntityDefImpl.findDefObject("enlace_datos.entidades.complementos.SisParamSuspIgss");
        }
        return mDefinitionObject;
    }

    /**Gets the attribute value for IdParamSuspIgss, using the alias name IdParamSuspIgss
     */
    public Number getIdParamSuspIgss() {
        return (Number)getAttributeInternal(IDPARAMSUSPIGSS);
    }

    /**Sets <code>value</code> as the attribute value for IdParamSuspIgss
     */
    public void setIdParamSuspIgss(Number value) {
        setAttributeInternal(IDPARAMSUSPIGSS, value);
    }

    /**Gets the attribute value for RegistroEmpleado, using the alias name RegistroEmpleado
     */
    public Number getRegistroEmpleado() {
        return (Number)getAttributeInternal(REGISTROEMPLEADO);
    }

    /**Sets <code>value</code> as the attribute value for RegistroEmpleado
     */
    public void setRegistroEmpleado(Number value) {
        setAttributeInternal(REGISTROEMPLEADO, value);
    }

    /**Gets the attribute value for MaxPagaIgss, using the alias name MaxPagaIgss
     */
    public Number getMaxPagaIgss() {
        return (Number)getAttributeInternal(MAXPAGAIGSS);
    }

    /**Sets <code>value</code> as the attribute value for MaxPagaIgss
     */
    public void setMaxPagaIgss(Number value) {
        setAttributeInternal(MAXPAGAIGSS, value);
    }

    /**Gets the attribute value for FechaInicio, using the alias name FechaInicio
     */
    public Date getFechaInicio() {
        return (Date)getAttributeInternal(FECHAINICIO);
    }

    /**Sets <code>value</code> as the attribute value for FechaInicio
     */
    public void setFechaInicio(Date value) {
        setAttributeInternal(FECHAINICIO, value);
    }

    /**Gets the attribute value for FechaFin, using the alias name FechaFin
     */
    public Date getFechaFin() {
        return (Date)getAttributeInternal(FECHAFIN);
    }

    /**Sets <code>value</code> as the attribute value for FechaFin
     */
    public void setFechaFin(Date value) {
        setAttributeInternal(FECHAFIN, value);
    }

    /**Gets the attribute value for AplicaComplemento, using the alias name AplicaComplemento
     */
    public String getAplicaComplemento() {
        return (String)getAttributeInternal(APLICACOMPLEMENTO);
    }

    /**Sets <code>value</code> as the attribute value for AplicaComplemento
     */
    public void setAplicaComplemento(String value) {
        setAttributeInternal(APLICACOMPLEMENTO, value);
    }

    /**Gets the attribute value for Observaciones, using the alias name Observaciones
     */
    public String getObservaciones() {
        return (String)getAttributeInternal(OBSERVACIONES);
    }

    /**Sets <code>value</code> as the attribute value for Observaciones
     */
    public void setObservaciones(String value) {
        setAttributeInternal(OBSERVACIONES, value);
    }

    /**Gets the attribute value for CreadoPor, using the alias name CreadoPor
     */
    public String getCreadoPor() {
        return (String)getAttributeInternal(CREADOPOR);
    }

    /**Sets <code>value</code> as the attribute value for CreadoPor
     */
    public void setCreadoPor(String value) {
        setAttributeInternal(CREADOPOR, value);
    }

    /**Gets the attribute value for FechaCreacion, using the alias name FechaCreacion
     */
    public Date getFechaCreacion() {
        return (Date)getAttributeInternal(FECHACREACION);
    }

    /**Sets <code>value</code> as the attribute value for FechaCreacion
     */
    public void setFechaCreacion(Date value) {
        setAttributeInternal(FECHACREACION, value);
    }

    /**Gets the attribute value for ModPor, using the alias name ModPor
     */
    public String getModPor() {
        return (String)getAttributeInternal(MODPOR);
    }

    /**Sets <code>value</code> as the attribute value for ModPor
     */
    public void setModPor(String value) {
        setAttributeInternal(MODPOR, value);
    }

    /**Gets the attribute value for FechaMod, using the alias name FechaMod
     */
    public Date getFechaMod() {
        return (Date)getAttributeInternal(FECHAMOD);
    }

    /**Sets <code>value</code> as the attribute value for FechaMod
     */
    public void setFechaMod(Date value) {
        setAttributeInternal(FECHAMOD, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case IDPARAMSUSPIGSS:
            return getIdParamSuspIgss();
        case REGISTROEMPLEADO:
            return getRegistroEmpleado();
        case MAXPAGAIGSS:
            return getMaxPagaIgss();
        case FECHAINICIO:
            return getFechaInicio();
        case FECHAFIN:
            return getFechaFin();
        case APLICACOMPLEMENTO:
            return getAplicaComplemento();
        case OBSERVACIONES:
            return getObservaciones();
        case CREADOPOR:
            return getCreadoPor();
        case FECHACREACION:
            return getFechaCreacion();
        case MODPOR:
            return getModPor();
        case FECHAMOD:
            return getFechaMod();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case IDPARAMSUSPIGSS:
            setIdParamSuspIgss((Number)value);
            return;
        case REGISTROEMPLEADO:
            setRegistroEmpleado((Number)value);
            return;
        case MAXPAGAIGSS:
            setMaxPagaIgss((Number)value);
            return;
        case FECHAINICIO:
            setFechaInicio((Date)value);
            return;
        case FECHAFIN:
            setFechaFin((Date)value);
            return;
        case APLICACOMPLEMENTO:
            setAplicaComplemento((String)value);
            return;
        case OBSERVACIONES:
            setObservaciones((String)value);
            return;
        case CREADOPOR:
            setCreadoPor((String)value);
            return;
        case FECHACREACION:
            setFechaCreacion((Date)value);
            return;
        case MODPOR:
            setModPor((String)value);
            return;
        case FECHAMOD:
            setFechaMod((Date)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }


    protected void doDML(int i, TransactionEvent transactionEvent) {
        oracle.jbo.DMLException vCausa;
        Object []vExceptions;
        SessionImpl session = (SessionImpl)this.getDBTransaction().getRootApplicationModule().getSession();
        String usuario = session.getUserPrincipalName();
        
        if(i == DML_UPDATE || i == DML_INSERT){
            
                Date fecha_inicio = null;
                Number registro_empleado = null;
                
                try{
                    fecha_inicio = this.getFechaInicio();
                    registro_empleado = this.getRegistroEmpleado();
                }
                catch( Exception e){
                    String err = e.getMessage();
                }
                
                if(fecha_inicio == null || 
                   registro_empleado == null
                ){
                    throw new JboException("Faltan datos obligatorios. Por favor verifique que haya ingresado el registro de personal y la fecha de inicio.");
                }
                
                if(registro_empleado.toString().length()<=0){
                    throw new JboException("Debe ingresar el registro de personal.");
                }
                
                if(fecha_inicio.toString().length() <= 0){
                    throw new JboException("Debe ingresar una fecha de inicio que sea válida.");
                }
            
            
                // asignar datos de quien inserta o actualiza
                Calendar calendario = Calendar.getInstance();
                int hora = calendario.get(Calendar.HOUR_OF_DAY);
                int minutos = calendario.get(Calendar.MINUTE);
                int segundos = calendario.get(Calendar.SECOND);
                                 
                Object fecha = new Date().getCurrentDate();
                oracle.jbo.domain.Date fechaHora = new oracle.jbo.domain.Date(fecha.toString()+" "+String.valueOf(hora)+":"+String.valueOf(minutos)+":"+String.valueOf(segundos));            
                
                if(i == DML_INSERT){
                    // añado datos del usuario que hace insert
                    this.setCreadoPor(usuario);
                    this.setFechaCreacion(fechaHora);
                }
                else if(i == DML_UPDATE){
                    // añado datos del usuario que hace update
                    this.setModPor(usuario);
                    this.setFechaMod(fechaHora);
                }
                
        }
        //System.out.println("Antes de hacer commit");
    
        try{
                super.doDML(i, transactionEvent);
        }
        catch(Exception exep){
                //throw new JboException("Ocurrio un error al tratar de guardar los datos de la parametrización");
                 super.getDBTransaction().cancelDMLOperations();

                 vCausa=(oracle.jbo.DMLException)exep;
                 vExceptions=vCausa.getExceptions();
                 
                 if (vExceptions.length>0){                 
                      throw new JboException(utils.getSQLMensaje((Exception)vExceptions[0])+"    Usuario que realiza la operación [ "+usuario+" ]");        
                 }
                 else{
                     throw new JboException("Ocurrio un error al tratar de guardar los datos de la parametrización");
                 }

                 /*
                 System.out.println("Usuario que opera: "+usuario);
                 exep.printStackTrace();
                 throw new JboException(utils.getSQLMensaje(exep)+" Usuario que realiza la operación [ "+usuario+" ]");        
                 */
        }
    
        //super.doDML(i, transactionEvent);
    }


    protected void create(AttributeList attributeList) {
        // setear la fecha del documento igual a SYSDATE
        Object fecha = new oracle.jbo.domain.Date().getCurrentDate();
        this.setFechaInicio((oracle.jbo.domain.Date)fecha);
        // setear por default se debe generar complemento
        this.setAplicaComplemento("SI");
        
        super.create(attributeList);
    }

    /**Creates a Key object based on given key constituents
     */
    public static Key createPrimaryKey(Number idParamSuspIgss) {
        return new Key(new Object[]{idParamSuspIgss});
    }
}
