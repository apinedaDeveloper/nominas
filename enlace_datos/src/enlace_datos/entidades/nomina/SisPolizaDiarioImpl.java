package enlace_datos.entidades.nomina;

import enlace_datos.util.utils;

import enlace_datos.util.utils_DB;

import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SisPolizaDiarioImpl extends EntityImpl {
    public static final int NOPOLIZADIARIO = 0;
    public static final int FECHAINICIO = 1;
    public static final int FECHAFIN = 2;
    public static final int FECHACREACION = 3;
    public static final int CREADOPOR = 4;
    public static final int NOPOLIZACONTABLE = 5;
    public static final int TIPOPOLIZA = 6;
    private static EntityDefImpl mDefinitionObject;

    /**This is the default constructor (do not remove)
     */
    public SisPolizaDiarioImpl() {
    }


    /**Retrieves the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = (EntityDefImpl)EntityDefImpl.findDefObject("enlace_datos.entidades.nomina.SisPolizaDiario");
        }
        return mDefinitionObject;
    }

    /**Gets the attribute value for NoPolizaDiario, using the alias name NoPolizaDiario
     */
    public Number getNoPolizaDiario() {
        return (Number)getAttributeInternal(NOPOLIZADIARIO);
    }

    /**Sets <code>value</code> as the attribute value for NoPolizaDiario
     */
    public void setNoPolizaDiario(Number value) {
        setAttributeInternal(NOPOLIZADIARIO, value);
    }

    /**Gets the attribute value for FechaInicio, using the alias name FechaInicio
     */
    public Date getFechaInicio() {
        return (Date)getAttributeInternal(FECHAINICIO);
    }

    /**Sets <code>value</code> as the attribute value for FechaInicio
     */
    public void setFechaInicio(Date value) {
        setAttributeInternal(FECHAINICIO, value);
    }

    /**Gets the attribute value for FechaFin, using the alias name FechaFin
     */
    public Date getFechaFin() {
        return (Date)getAttributeInternal(FECHAFIN);
    }

    /**Sets <code>value</code> as the attribute value for FechaFin
     */
    public void setFechaFin(Date value) {
        setAttributeInternal(FECHAFIN, value);
    }

    /**Gets the attribute value for FechaCreacion, using the alias name FechaCreacion
     */
    public Date getFechaCreacion() {
        return (Date)getAttributeInternal(FECHACREACION);
    }

    /**Sets <code>value</code> as the attribute value for FechaCreacion
     */
    public void setFechaCreacion(Date value) {
        setAttributeInternal(FECHACREACION, value);
    }

    /**Gets the attribute value for CreadoPor, using the alias name CreadoPor
     */
    public String getCreadoPor() {
        return (String)getAttributeInternal(CREADOPOR);
    }

    /**Sets <code>value</code> as the attribute value for CreadoPor
     */
    public void setCreadoPor(String value) {
        setAttributeInternal(CREADOPOR, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case NOPOLIZADIARIO:
            return getNoPolizaDiario();
        case FECHAINICIO:
            return getFechaInicio();
        case FECHAFIN:
            return getFechaFin();
        case FECHACREACION:
            return getFechaCreacion();
        case CREADOPOR:
            return getCreadoPor();
        case NOPOLIZACONTABLE:
            return getNoPolizaContable();
        case TIPOPOLIZA:
            return getTipoPoliza();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case NOPOLIZADIARIO:
            setNoPolizaDiario((Number)value);
            return;
        case FECHAINICIO:
            setFechaInicio((Date)value);
            return;
        case FECHAFIN:
            setFechaFin((Date)value);
            return;
        case FECHACREACION:
            setFechaCreacion((Date)value);
            return;
        case CREADOPOR:
            setCreadoPor((String)value);
            return;
        case NOPOLIZACONTABLE:
            setNoPolizaContable((Number)value);
            return;
        case TIPOPOLIZA:
            setTipoPoliza((String)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }

    /**Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**Custom DML update/insert/delete logic here.
     */
    protected void doDML(int operation, TransactionEvent e) {
        /*
        // comentado por J.M.  21-05-2012
        // el proceso se hara a traves del metodo SIS_PKG_PROCS.GENERA_POLIZA_DIARIO
        Object valor;
        if (operation==DML_INSERT){
         valor=utils_DB.getEjecutarQuerry(e.getDBTransaction(),"select valor_numerico from sis_parametros_aplicacion where nom_parametro='NUM_POLIZA_DIARIO'");
         this.setNoPolizaDiario(utils.getNumberOracle(valor));
         this.setCreadoPor(utils.getAuthUser(e.getDBTransaction()));   
        }
        */
        super.doDML(operation, e);
    }

    /**Gets the attribute value for NoPolizaContable, using the alias name NoPolizaContable
     */
    public Number getNoPolizaContable() {
        return (Number)getAttributeInternal(NOPOLIZACONTABLE);
    }

    /**Sets <code>value</code> as the attribute value for NoPolizaContable
     */
    public void setNoPolizaContable(Number value) {
        setAttributeInternal(NOPOLIZACONTABLE, value);
    }


    /**Gets the attribute value for TipoPoliza, using the alias name TipoPoliza
     */
    public String getTipoPoliza() {
        return (String)getAttributeInternal(TIPOPOLIZA);
    }

    /**Sets <code>value</code> as the attribute value for TipoPoliza
     */
    public void setTipoPoliza(String value) {
        setAttributeInternal(TIPOPOLIZA, value);
    }

    /**Creates a Key object based on given key constituents
     */
    public static Key createPrimaryKey(Number noPolizaDiario) {
        return new Key(new Object[]{noPolizaDiario});
    }
}
