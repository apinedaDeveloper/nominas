package enlace_datos.entidades.util;

import enlace_datos.util.utils;

import enlace_datos.util.utils_DB;

import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class UsuarioImpl extends EntityImpl {
    public static final int USUARIO = 0;
    public static final int APELLIDOS = 1;
    public static final int NOMBRES = 2;
    public static final int DIRECCION = 3;
    public static final int TELEFONO = 4;
    public static final int EMAIL = 5;
    public static final int PASSWORD = 6;
    public static final int TITULO = 7;
    public static final int MOVIL = 8;
    public static final int TIPOUSUARIO = 9;
    public static final int ACTIVO = 10;
    public static final int PRIMERLOGIN = 11;
    public static final int IDPREGUNTA = 12;
    public static final int PREGSEGURIDAD = 13;
    public static final int RESPSEGURIDAD = 14;
    public static final int FECHACREACION = 15;
    public static final int CREADOPOR = 16;
    public static final int FECHAMODIFICACION = 17;
    public static final int MODPOR = 18;
    public static final int PASSNUEVO = 19;
    public static final int PASSACTUAL = 20;
    public static final int PASSNUEVO2 = 21;
    public static final int BITACORAEVENTOUSUARIO = 22;
    private static EntityDefImpl mDefinitionObject;

    /**This is the default constructor (do not remove)
     */
    public UsuarioImpl() {
    }


    /**Retrieves the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = (EntityDefImpl)EntityDefImpl.findDefObject("enlace_datos.entidades.util.Usuario");
        }
        return mDefinitionObject;
    }

    /**Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    private void validarEntidad(){
        
    Object vClaveActual; 
 

       if (this.getIdPregunta()==null)
       {
           throw  utils.getJboException("Por favor seleccione la pregunta de seguridad.","pregunta",false); 
           
       }else{
           
          if (this.getIdPregunta().compareTo(8)==0)
          {
             if (this.getPregSeguridad()==null || (this.getPregSeguridad()!=null && this.getRespSeguridad().equals("")))
             {
             
                 throw utils.getJboException("Por favor ingrese la pregunta.","pregunta_seguridad",false); 
             
             }
              
              this.setPregSeguridad(this.getPregSeguridad().trim());
          }else{
              
              this.setPregSeguridad(null);
          }
           
       }
       
       if (this.getRespSeguridad()==null || (this.getRespSeguridad()!=null && this.getRespSeguridad().equals(""))) 
       {
           throw utils.getJboException("Por favor ingrese la respuesta a la pregunta.","resp_seguridad",false); 
           
       }
       

       if (this.getPassActual()==null || (this.getPassActual()!=null && this.getPassActual().equals("")))
       {
                throw utils.getJboException("Por favor ingrese la contraseña actual.","claveactual",false);          
       }


       if (this.getPassNuevo()==null || (this.getPassNuevo()!=null && this.getPassNuevo().equals("")))
       {
                throw utils.getJboException("Por favor ingrese la nueva contraseña","clave_nueva",false);          
       }
        
     
        if (this.getPassNuevo2()==null || (this.getPassNuevo2()!=null && this.getPassNuevo2().equals("")))
        {
                 throw utils.getJboException("Por favor ingrese la nueva contraseña","clave_nueva2",false);          
        }
        
     
       vClaveActual=utils_DB.getEjecutarQuerry(this.getDBTransaction(),"select SYNCHRONIZE_LDAP_USERS_PK.GETSHAPASSWORDENCRYPTEDBASE64('"+getPassActual()+ "') from dual");
       vClaveActual=(vClaveActual==null?"":vClaveActual);
     
       if (!vClaveActual.toString().equals(this.getPassword()))
       {
          
          throw utils.getJboException("La contraseña actual no es la correcta, ingrese nuevamente la contraseña actual","claveactual",false);          
            
       }
     
       if (this.getPassNuevo().equals(this.getPassActual())){
            
               throw utils.getJboException("La nueva contraseña no puede ser igual a la anterior.","clave_nueva",false);          
       }
          
       if (this.getPassNuevo().length()<8){
              throw utils.getJboException("La contraseña debe tener al menos 8 carácteres.","clave_nueva",false);             
       }else if (this.getPassNuevo().length()>20){
              throw utils.getJboException("En tamaño máximo de la contraseña es de 20 carácteres.","clave_nueva",false);             
       }
    
    
       if (!this.getPassNuevo().equals(this.getPassNuevo2())){
        
           throw utils.getJboException("La contraseña actual no es la correcta, ingrese nuevamente la contraseña actual","clave_nueva",false);          
           
       }

      
      this.setPassword(this.getPassNuevo());
     
    }

    /**Custom DML update/insert/delete logic here.
     */
    protected void doDML(int operation, TransactionEvent e) {
        validarEntidad();
        
        if (operation==DML_UPDATE){
           this.setFechaModificacion(utils.getFechaActual()); 
           this.setModPor(utils.getAuthUser(this.getDBTransaction()));
           this.setPrimerLogin(utils.getNumberOracle(0));
        }

        super.doDML(operation, e);
    }

    /**Gets the attribute value for Usuario, using the alias name Usuario
     */
    public String getUsuario() {
        return (String)getAttributeInternal(USUARIO);
    }

    /**Sets <code>value</code> as the attribute value for Usuario
     */
    public void setUsuario(String value) {
        setAttributeInternal(USUARIO, value);
    }

    /**Gets the attribute value for Apellidos, using the alias name Apellidos
     */
    public String getApellidos() {
        return (String)getAttributeInternal(APELLIDOS);
    }

    /**Sets <code>value</code> as the attribute value for Apellidos
     */
    public void setApellidos(String value) {
        setAttributeInternal(APELLIDOS, value);
    }

    /**Gets the attribute value for Nombres, using the alias name Nombres
     */
    public String getNombres() {
        return (String)getAttributeInternal(NOMBRES);
    }

    /**Sets <code>value</code> as the attribute value for Nombres
     */
    public void setNombres(String value) {
        setAttributeInternal(NOMBRES, value);
    }

    /**Gets the attribute value for Direccion, using the alias name Direccion
     */
    public String getDireccion() {
        return (String)getAttributeInternal(DIRECCION);
    }

    /**Sets <code>value</code> as the attribute value for Direccion
     */
    public void setDireccion(String value) {
        setAttributeInternal(DIRECCION, value);
    }

    /**Gets the attribute value for Telefono, using the alias name Telefono
     */
    public String getTelefono() {
        return (String)getAttributeInternal(TELEFONO);
    }

    /**Sets <code>value</code> as the attribute value for Telefono
     */
    public void setTelefono(String value) {
        setAttributeInternal(TELEFONO, value);
    }

    /**Gets the attribute value for Email, using the alias name Email
     */
    public String getEmail() {
        return (String)getAttributeInternal(EMAIL);
    }

    /**Sets <code>value</code> as the attribute value for Email
     */
    public void setEmail(String value) {
        setAttributeInternal(EMAIL, value);
    }

    /**Gets the attribute value for Password, using the alias name Password
     */
    public String getPassword() {
        return (String)getAttributeInternal(PASSWORD);
    }

    /**Sets <code>value</code> as the attribute value for Password
     */
    public void setPassword(String value) {
        setAttributeInternal(PASSWORD, value);
    }

    /**Gets the attribute value for Titulo, using the alias name Titulo
     */
    public String getTitulo() {
        return (String)getAttributeInternal(TITULO);
    }

    /**Sets <code>value</code> as the attribute value for Titulo
     */
    public void setTitulo(String value) {
        setAttributeInternal(TITULO, value);
    }

    /**Gets the attribute value for Movil, using the alias name Movil
     */
    public String getMovil() {
        return (String)getAttributeInternal(MOVIL);
    }

    /**Sets <code>value</code> as the attribute value for Movil
     */
    public void setMovil(String value) {
        setAttributeInternal(MOVIL, value);
    }

    /**Gets the attribute value for TipoUsuario, using the alias name TipoUsuario
     */
    public String getTipoUsuario() {
        return (String)getAttributeInternal(TIPOUSUARIO);
    }

    /**Sets <code>value</code> as the attribute value for TipoUsuario
     */
    public void setTipoUsuario(String value) {
        setAttributeInternal(TIPOUSUARIO, value);
    }

    /**Gets the attribute value for Activo, using the alias name Activo
     */
    public Number getActivo() {
        return (Number)getAttributeInternal(ACTIVO);
    }

    /**Sets <code>value</code> as the attribute value for Activo
     */
    public void setActivo(Number value) {
        setAttributeInternal(ACTIVO, value);
    }

    /**Gets the attribute value for PrimerLogin, using the alias name PrimerLogin
     */
    public Number getPrimerLogin() {
        return (Number)getAttributeInternal(PRIMERLOGIN);
    }

    /**Sets <code>value</code> as the attribute value for PrimerLogin
     */
    public void setPrimerLogin(Number value) {
        setAttributeInternal(PRIMERLOGIN, value);
    }

    /**Gets the attribute value for IdPregunta, using the alias name IdPregunta
     */
    public Number getIdPregunta() {
        return (Number)getAttributeInternal(IDPREGUNTA);
    }

    /**Sets <code>value</code> as the attribute value for IdPregunta
     */
    public void setIdPregunta(Number value) {
        setAttributeInternal(IDPREGUNTA, value);
    }

    /**Gets the attribute value for PregSeguridad, using the alias name PregSeguridad
     */
    public String getPregSeguridad() {
        return (String)getAttributeInternal(PREGSEGURIDAD);
    }

    /**Sets <code>value</code> as the attribute value for PregSeguridad
     */
    public void setPregSeguridad(String value) {
        setAttributeInternal(PREGSEGURIDAD, value);
    }

    /**Gets the attribute value for RespSeguridad, using the alias name RespSeguridad
     */
    public String getRespSeguridad() {
        return (String)getAttributeInternal(RESPSEGURIDAD);
    }

    /**Sets <code>value</code> as the attribute value for RespSeguridad
     */
    public void setRespSeguridad(String value) {
        setAttributeInternal(RESPSEGURIDAD, value);
    }

    /**Gets the attribute value for FechaCreacion, using the alias name FechaCreacion
     */
    public Date getFechaCreacion() {
        return (Date)getAttributeInternal(FECHACREACION);
    }

    /**Sets <code>value</code> as the attribute value for FechaCreacion
     */
    public void setFechaCreacion(Date value) {
        setAttributeInternal(FECHACREACION, value);
    }

    /**Gets the attribute value for CreadoPor, using the alias name CreadoPor
     */
    public String getCreadoPor() {
        return (String)getAttributeInternal(CREADOPOR);
    }

    /**Sets <code>value</code> as the attribute value for CreadoPor
     */
    public void setCreadoPor(String value) {
        setAttributeInternal(CREADOPOR, value);
    }

    /**Gets the attribute value for FechaModificacion, using the alias name FechaModificacion
     */
    public Date getFechaModificacion() {
        return (Date)getAttributeInternal(FECHAMODIFICACION);
    }

    /**Sets <code>value</code> as the attribute value for FechaModificacion
     */
    public void setFechaModificacion(Date value) {
        setAttributeInternal(FECHAMODIFICACION, value);
    }

    /**Gets the attribute value for ModPor, using the alias name ModPor
     */
    public String getModPor() {
        return (String)getAttributeInternal(MODPOR);
    }

    /**Sets <code>value</code> as the attribute value for ModPor
     */
    public void setModPor(String value) {
        setAttributeInternal(MODPOR, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case USUARIO:
            return getUsuario();
        case APELLIDOS:
            return getApellidos();
        case NOMBRES:
            return getNombres();
        case DIRECCION:
            return getDireccion();
        case TELEFONO:
            return getTelefono();
        case EMAIL:
            return getEmail();
        case PASSWORD:
            return getPassword();
        case TITULO:
            return getTitulo();
        case MOVIL:
            return getMovil();
        case TIPOUSUARIO:
            return getTipoUsuario();
        case ACTIVO:
            return getActivo();
        case PRIMERLOGIN:
            return getPrimerLogin();
        case IDPREGUNTA:
            return getIdPregunta();
        case PREGSEGURIDAD:
            return getPregSeguridad();
        case RESPSEGURIDAD:
            return getRespSeguridad();
        case FECHACREACION:
            return getFechaCreacion();
        case CREADOPOR:
            return getCreadoPor();
        case FECHAMODIFICACION:
            return getFechaModificacion();
        case MODPOR:
            return getModPor();
        case PASSNUEVO:
            return getPassNuevo();
        case PASSACTUAL:
            return getPassActual();
        case PASSNUEVO2:
            return getPassNuevo2();
        case BITACORAEVENTOUSUARIO:
            return getBitacoraEventoUsuario();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case USUARIO:
            setUsuario((String)value);
            return;
        case APELLIDOS:
            setApellidos((String)value);
            return;
        case NOMBRES:
            setNombres((String)value);
            return;
        case DIRECCION:
            setDireccion((String)value);
            return;
        case TELEFONO:
            setTelefono((String)value);
            return;
        case EMAIL:
            setEmail((String)value);
            return;
        case PASSWORD:
            setPassword((String)value);
            return;
        case TITULO:
            setTitulo((String)value);
            return;
        case MOVIL:
            setMovil((String)value);
            return;
        case TIPOUSUARIO:
            setTipoUsuario((String)value);
            return;
        case ACTIVO:
            setActivo((Number)value);
            return;
        case PRIMERLOGIN:
            setPrimerLogin((Number)value);
            return;
        case IDPREGUNTA:
            setIdPregunta((Number)value);
            return;
        case PREGSEGURIDAD:
            setPregSeguridad((String)value);
            return;
        case RESPSEGURIDAD:
            setRespSeguridad((String)value);
            return;
        case FECHACREACION:
            setFechaCreacion((Date)value);
            return;
        case CREADOPOR:
            setCreadoPor((String)value);
            return;
        case FECHAMODIFICACION:
            setFechaModificacion((Date)value);
            return;
        case MODPOR:
            setModPor((String)value);
            return;
        case PASSNUEVO:
            setPassNuevo((String)value);
            return;
        case PASSACTUAL:
            setPassActual((String)value);
            return;
        case PASSNUEVO2:
            setPassNuevo2((String)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }

    /**Gets the attribute value for PassNuevo, using the alias name PassNuevo
     */
    public String getPassNuevo() {
        return (String)getAttributeInternal(PASSNUEVO);
    }

    /**Sets <code>value</code> as the attribute value for PassNuevo
     */
    public void setPassNuevo(String value) {
        setAttributeInternal(PASSNUEVO, value);
    }

    /**Gets the attribute value for PassActual, using the alias name PassActual
     */
    public String getPassActual() {
        return (String)getAttributeInternal(PASSACTUAL);
    }

    /**Sets <code>value</code> as the attribute value for PassActual
     */
    public void setPassActual(String value) {
        setAttributeInternal(PASSACTUAL, value);
    }

    /**Gets the attribute value for PassNuevo2, using the alias name PassNuevo2
     */
    public String getPassNuevo2() {
        return (String)getAttributeInternal(PASSNUEVO2);
    }

    /**Sets <code>value</code> as the attribute value for PassNuevo2
     */
    public void setPassNuevo2(String value) {
        setAttributeInternal(PASSNUEVO2, value);
    }

    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getBitacoraEventoUsuario() {
        return (RowIterator)getAttributeInternal(BITACORAEVENTOUSUARIO);
    }

    /**Creates a Key object based on given key constituents
     */
    public static Key createPrimaryKey(String usuario, String tipoUsuario) {
        return new Key(new Object[]{usuario, tipoUsuario});
    }
}
