package enlace_datos.entidades.procesos;

import enlace_datos.util.myEntityImpl;
import enlace_datos.util.utils;
import enlace_datos.util.utils_DB;

import java.util.Calendar;

import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SisFolioEmisionImpl extends myEntityImpl {
    public static final int IDEMISION = 0;
    public static final int IDPROCESO = 1;
    public static final int FOLIOINICIAL = 2;
    public static final int FOLIOFINAL = 3;
    public static final int FECHACREACION = 4;
    public static final int CREADOPOR = 5;
    public static final int MODPOR = 6;
    public static final int FECHAMOD = 7;
    public static final int ESTADO = 8;
    public static final int ISSEL = 9;
    public static final int SISFOLIOEMISIONANULADO = 10;
    private static EntityDefImpl mDefinitionObject;

    /**This is the default constructor (do not remove)
     */
    public SisFolioEmisionImpl() {
    }


    /**Retrieves the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = (EntityDefImpl)EntityDefImpl.findDefObject("enlace_datos.entidades.procesos.SisFolioEmision");
        }
        return mDefinitionObject;
    }

    /**Gets the attribute value for IdEmision, using the alias name IdEmision
     */
    public Number getIdEmision() {
        return (Number)getAttributeInternal(IDEMISION);
    }

    /**Sets <code>value</code> as the attribute value for IdEmision
     */
    public void setIdEmision(Number value) {
        setAttributeInternal(IDEMISION, value);
    }

    /**Gets the attribute value for IdProceso, using the alias name IdProceso
     */
    public Number getIdProceso() {
        return (Number)getAttributeInternal(IDPROCESO);
    }

    /**Sets <code>value</code> as the attribute value for IdProceso
     */
    public void setIdProceso(Number value) {
        setAttributeInternal(IDPROCESO, value);
    }

    /**Gets the attribute value for FolioInicial, using the alias name FolioInicial
     */
    public Number getFolioInicial() {
        return (Number)getAttributeInternal(FOLIOINICIAL);
    }

    /**Sets <code>value</code> as the attribute value for FolioInicial
     */
    public void setFolioInicial(Number value) {
        setAttributeInternal(FOLIOINICIAL, value);
    }

    /**Gets the attribute value for FolioFinal, using the alias name FolioFinal
     */
    public Number getFolioFinal() {
        return (Number)getAttributeInternal(FOLIOFINAL);
    }

    /**Sets <code>value</code> as the attribute value for FolioFinal
     */
    public void setFolioFinal(Number value) {
        setAttributeInternal(FOLIOFINAL, value);
    }

    /**Gets the attribute value for FechaCreacion, using the alias name FechaCreacion
     */
    public Date getFechaCreacion() {
        return (Date)getAttributeInternal(FECHACREACION);
    }

    /**Sets <code>value</code> as the attribute value for FechaCreacion
     */
    public void setFechaCreacion(Date value) {
        setAttributeInternal(FECHACREACION, value);
    }

    /**Gets the attribute value for CreadoPor, using the alias name CreadoPor
     */
    public String getCreadoPor() {
        return (String)getAttributeInternal(CREADOPOR);
    }

    /**Sets <code>value</code> as the attribute value for CreadoPor
     */
    public void setCreadoPor(String value) {
        setAttributeInternal(CREADOPOR, value);
    }

    /**Gets the attribute value for ModPor, using the alias name ModPor
     */
    public String getModPor() {
        return (String)getAttributeInternal(MODPOR);
    }

    /**Sets <code>value</code> as the attribute value for ModPor
     */
    public void setModPor(String value) {
        setAttributeInternal(MODPOR, value);
    }

    /**Gets the attribute value for FechaMod, using the alias name FechaMod
     */
    public Date getFechaMod() {
        return (Date)getAttributeInternal(FECHAMOD);
    }

    /**Sets <code>value</code> as the attribute value for FechaMod
     */
    public void setFechaMod(Date value) {
        setAttributeInternal(FECHAMOD, value);
    }

    /**Gets the attribute value for Estado, using the alias name Estado
     */
    public Number getEstado() {
        return (Number)getAttributeInternal(ESTADO);
    }

    /**Sets <code>value</code> as the attribute value for Estado
     */
    public void setEstado(Number value) {
        setAttributeInternal(ESTADO, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case IDEMISION:
            return getIdEmision();
        case IDPROCESO:
            return getIdProceso();
        case FOLIOINICIAL:
            return getFolioInicial();
        case FOLIOFINAL:
            return getFolioFinal();
        case FECHACREACION:
            return getFechaCreacion();
        case CREADOPOR:
            return getCreadoPor();
        case MODPOR:
            return getModPor();
        case FECHAMOD:
            return getFechaMod();
        case ESTADO:
            return getEstado();
        case ISSEL:
            return getisSel();
        case SISFOLIOEMISIONANULADO:
            return getSisFolioEmisionAnulado();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case IDEMISION:
            setIdEmision((Number)value);
            return;
        case IDPROCESO:
            setIdProceso((Number)value);
            return;
        case FOLIOINICIAL:
            setFolioInicial((Number)value);
            return;
        case FOLIOFINAL:
            setFolioFinal((Number)value);
            return;
        case FECHACREACION:
            setFechaCreacion((Date)value);
            return;
        case CREADOPOR:
            setCreadoPor((String)value);
            return;
        case MODPOR:
            setModPor((String)value);
            return;
        case FECHAMOD:
            setFechaMod((Date)value);
            return;
        case ESTADO:
            setEstado((Number)value);
            return;
        case ISSEL:
            setisSel((Boolean)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }

    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getSisFolioEmisionAnulado() {
        return (RowIterator)getAttributeInternal(SISFOLIOEMISIONANULADO);
    }

    /**Gets the attribute value for isSel, using the alias name isSel
     */
    public Boolean getisSel() {
        return (Boolean)getAttributeInternal(ISSEL);
    }

    /**Sets <code>value</code> as the attribute value for isSel
     */
    public void setisSel(Boolean value) {
        setAttributeInternal(ISSEL, value);
    }


    protected void create(AttributeList attributeList) {
        try{
            this.setIdEmision(new oracle.jbo.domain.Number(utils_DB.getValorSequencia(this.getDBTransaction(),"SIS_FOLIO_EMISION_SQ")));
        }
        catch(Exception e){
            throw new JboException("No fue posible obtener el siguiente valor de la secuencia SIS_FOLIO_EMISION_SQ");
        }
        
        super.create(attributeList);
    }

    protected void doDML(int i, TransactionEvent transactionEvent) {
        //System.out.println("entro con i="+ String.valueOf(i));
        if(i == DML_INSERT || i == DML_UPDATE){
        
            //System.out.println("Entro insert o update");
            String folioInicial = null;
            String folioFinal = null;
            try{
                folioInicial = this.getFolioInicial().toString();
                folioFinal = this.getFolioInicial().toString();
            }
            catch(Exception e){
                folioInicial = null;
                folioFinal = null;
            }
            
            if(folioInicial == null || folioFinal == null){
                throw new JboException("Debe ingresar el folio inicial y el final del papel nomina utilizado en la emisión.");
            }
            else if(folioInicial.length() == 0 || folioFinal.length() == 0){
                    throw new JboException("Debe ingresar el folio inicial y el final del papel nomina utilizado en la emisión.");
            }
            
        }
        
        if(i == DML_INSERT){
            // datos de creacion
            Object fecha = new oracle.jbo.domain.Date().getCurrentDate();
            Calendar calendario = Calendar.getInstance();
            int hora = calendario.get(Calendar.HOUR_OF_DAY);
            int minutos = calendario.get(Calendar.MINUTE);
            int segundos = calendario.get(Calendar.SECOND);
            oracle.jbo.domain.Date fechaHora = new oracle.jbo.domain.Date(fecha.toString()+" "+String.valueOf(hora)+":"+String.valueOf(minutos)+":"+String.valueOf(segundos));
            
            String usuario = utils.getAuthUser(this.getDBTransaction());
            
            this.setCreadoPor(usuario);
            this.setFechaCreacion(fechaHora);            
            
        }
        else if(i == DML_UPDATE){
          
            String modificado = "NO";
            String val, oldval;
            int count = getEntityDef().getAttributeCount();
            
            for (int a = 0; a < count; a++) {

                if(a != 9 && a != 10){
                    val = "";
                    oldval = "";
                    try{
                        val = getAttribute(a).toString();
                    }
                    catch(Exception e){
                        val = " ";
                        //System.out.println("val es nulo a="+String.valueOf(a));
                    }
                    try{
                        oldval = getPostedAttribute(a).toString();
                    }
                    catch(Exception e){
                        oldval = " ";
                        //System.out.println("oldval es nulo en a="+String.valueOf(a));
                    }
                            
                    if(val.compareToIgnoreCase(oldval) != 0){
                        modificado = "SI";
                        //System.out.println("hubo cambio en val="+val.toString()+" oldval="+oldval.toString()+" a="+String.valueOf(a));
                        break;
                    }
                }
                
            }
                           
            if(modificado.compareToIgnoreCase("SI")==0){          
                Object fecha = new oracle.jbo.domain.Date().getCurrentDate();
                Calendar calendario = Calendar.getInstance();
                int hora = calendario.get(Calendar.HOUR_OF_DAY);
                int minutos = calendario.get(Calendar.MINUTE);
                int segundos = calendario.get(Calendar.SECOND);
                oracle.jbo.domain.Date fechaHora = new oracle.jbo.domain.Date(fecha.toString()+" "+String.valueOf(hora)+":"+String.valueOf(minutos)+":"+String.valueOf(segundos));
                
                String usuario = utils.getAuthUser(this.getDBTransaction());
                
                this.setModPor(usuario);
                this.setFechaMod(fechaHora);
            }
        }
        
        registrarLogOperaciones(i, transactionEvent);   
        super.doDML(i, transactionEvent);
    }

    /**Creates a Key object based on given key constituents
     */
    public static Key createPrimaryKey(Number idEmision) {
        return new Key(new Object[]{idEmision});
    }
}
