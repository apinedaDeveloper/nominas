package enlace_datos.entidades.procesos;

import enlace_datos.util.myEntityImpl;
import enlace_datos.util.utils;
import enlace_datos.util.utils_DB;

import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.NameValuePairs;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SisLiquidacionImpl extends myEntityImpl {
    public static final int IDLIQUIDACION = 0;
    public static final int IDPROCESO = 1;
    public static final int IDDEPENDENCIA = 2;
    public static final int IDPROGRAMAUN = 3;
    public static final int IDDEPENDENCIAUN = 4;
    public static final int IDUNIDADUN = 5;
    public static final int FOLIOINICIAL = 6;
    public static final int FOLIOFINAL = 7;
    public static final int FECHALIQUIDACION = 8;
    public static final int CREADOPOR = 9;
    public static final int VALIDACION = 10;
    public static final int TIPOLIQUIDACION = 11;
    public static final int MODPOR = 12;
    public static final int FECHAMOD = 13;
    public static final int SISFOLIOLIQUIDACION = 14;
    public boolean entro=false;
    private static EntityDefImpl mDefinitionObject;
    

    /**This is the default constructor (do not remove)
     */
    public SisLiquidacionImpl() {
    }


    /**Retrieves the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = (EntityDefImpl)EntityDefImpl.findDefObject("enlace_datos.entidades.procesos.SisLiquidacion");
        }
        return mDefinitionObject;
    }

    /**Gets the attribute value for IdLiquidacion, using the alias name IdLiquidacion
     */
    public Number getIdLiquidacion() {
        return (Number)getAttributeInternal(IDLIQUIDACION);
    }

    /**Sets <code>value</code> as the attribute value for IdLiquidacion
     */
    public void setIdLiquidacion(Number value) {
        setAttributeInternal(IDLIQUIDACION, value);
    }

    /**Gets the attribute value for IdProceso, using the alias name IdProceso
     */
    public Number getIdProceso() {
        return (Number)getAttributeInternal(IDPROCESO);
    }

    /**Sets <code>value</code> as the attribute value for IdProceso
     */
    public void setIdProceso(Number value) {
        setAttributeInternal(IDPROCESO, value);
    }

    /**Gets the attribute value for IdDependencia, using the alias name IdDependencia
     */
    public Number getIdDependencia() {
        //System.out.println("return liquidacion " );
        return (Number)getAttributeInternal(IDDEPENDENCIA);
    }

    /**Sets <code>value</code> as the attribute value for IdDependencia
     */
    public void setIdDependencia(Number value) {
       // System.out.println("debug sis_liquidacion " + value);
        setAttributeInternal(IDDEPENDENCIA, value);
    }

    /**Gets the attribute value for IdProgramaUn, using the alias name IdProgramaUn
     */
    public Number getIdProgramaUn() {
        return (Number)getAttributeInternal(IDPROGRAMAUN);
    }

    /**Sets <code>value</code> as the attribute value for IdProgramaUn
     */
    public void setIdProgramaUn(Number value) {
        setAttributeInternal(IDPROGRAMAUN, value);
    }

    /**Gets the attribute value for IdDependenciaUn, using the alias name IdDependenciaUn
     */
    public Number getIdDependenciaUn() {
        return (Number)getAttributeInternal(IDDEPENDENCIAUN);
    }

    /**Sets <code>value</code> as the attribute value for IdDependenciaUn
     */
    public void setIdDependenciaUn(Number value) {
        setAttributeInternal(IDDEPENDENCIAUN, value);
    }

    /**Gets the attribute value for IdUnidadUn, using the alias name IdUnidadUn
     */
    public Number getIdUnidadUn() {
        return (Number)getAttributeInternal(IDUNIDADUN);
    }

    /**Sets <code>value</code> as the attribute value for IdUnidadUn
     */
    public void setIdUnidadUn(Number value) {
        setAttributeInternal(IDUNIDADUN, value);
    }

    /**Gets the attribute value for FolioInicial, using the alias name FolioInicial
     */
    public Number getFolioInicial() {
        return (Number)getAttributeInternal(FOLIOINICIAL);
    }

    /**Sets <code>value</code> as the attribute value for FolioInicial
     */
    public void setFolioInicial(Number value) {
        setAttributeInternal(FOLIOINICIAL, value);
    }

    /**Gets the attribute value for FolioFinal, using the alias name FolioFinal
     */
    public Number getFolioFinal() {
        return (Number)getAttributeInternal(FOLIOFINAL);
    }

    /**Sets <code>value</code> as the attribute value for FolioFinal
     */
    public void setFolioFinal(Number value) {
        setAttributeInternal(FOLIOFINAL, value);
    }

    /**Gets the attribute value for FechaLiquidacion, using the alias name FechaLiquidacion
     */
    public Date getFechaLiquidacion() {
        return (Date)getAttributeInternal(FECHALIQUIDACION);
    }

    /**Sets <code>value</code> as the attribute value for FechaLiquidacion
     */
    public void setFechaLiquidacion(Date value) {
        setAttributeInternal(FECHALIQUIDACION, value);
    }

    /**Gets the attribute value for CreadoPor, using the alias name CreadoPor
     */
    public String getCreadoPor() {
        return (String)getAttributeInternal(CREADOPOR);
    }

    /**Sets <code>value</code> as the attribute value for CreadoPor
     */
    public void setCreadoPor(String value) {
        setAttributeInternal(CREADOPOR, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case IDLIQUIDACION:
            return getIdLiquidacion();
        case IDPROCESO:
            return getIdProceso();
        case IDDEPENDENCIA:
            return getIdDependencia();
        case IDPROGRAMAUN:
            return getIdProgramaUn();
        case IDDEPENDENCIAUN:
            return getIdDependenciaUn();
        case IDUNIDADUN:
            return getIdUnidadUn();
        case FOLIOINICIAL:
            return getFolioInicial();
        case FOLIOFINAL:
            return getFolioFinal();
        case FECHALIQUIDACION:
            return getFechaLiquidacion();
        case CREADOPOR:
            return getCreadoPor();
        case VALIDACION:
            return getValidacion();
        case TIPOLIQUIDACION:
            return getTipoLiquidacion();
        case MODPOR:
            return getModPor();
        case FECHAMOD:
            return getFechaMod();
        case SISFOLIOLIQUIDACION:
            return getSisFolioLiquidacion();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case IDLIQUIDACION:
            setIdLiquidacion((Number)value);
            return;
        case IDPROCESO:
            setIdProceso((Number)value);
            return;
        case IDDEPENDENCIA:
            setIdDependencia((Number)value);
            return;
        case IDPROGRAMAUN:
            setIdProgramaUn((Number)value);
            return;
        case IDDEPENDENCIAUN:
            setIdDependenciaUn((Number)value);
            return;
        case IDUNIDADUN:
            setIdUnidadUn((Number)value);
            return;
        case FOLIOINICIAL:
            setFolioInicial((Number)value);
            return;
        case FOLIOFINAL:
            setFolioFinal((Number)value);
            return;
        case FECHALIQUIDACION:
            setFechaLiquidacion((Date)value);
            return;
        case CREADOPOR:
            setCreadoPor((String)value);
            return;
        case VALIDACION:
            setValidacion((Boolean)value);
            return;
        case TIPOLIQUIDACION:
            setTipoLiquidacion((Number)value);
            return;
        case MODPOR:
            setModPor((String)value);
            return;
        case FECHAMOD:
            setFechaMod((Date)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }

    /**Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

   private void validarEntidad(){
     Row[] vFilas;
   
    //   System.out.println(" entra validar " + this.getFolioInicial()+"  :" +this.getFolioFinal());
    /*
      if (this.getFolioInicial()==null) {
         throw new JboException("Ingrese el Folio Inicial.");  
       }
       if (this.getFolioFinal()==null) {
          throw new JboException("Ingrese el Folio Final.");  
        }
       
       if (this.getFolioInicial().compareTo(this.getFolioFinal())>0){
           throw new JboException("El valor del Folio Inicial no debe ser mayor al Folio Final.");   
       }
       */
       if (this.getIdProceso()==null){
       
           throw new JboException("Por Favor seleccione el proceso.");  
       }
       
       /*
       vFilas=this.getSisFolioLiquidacion().getAllRowsInRange();
       
       if (vFilas.length==0){
       
           throw new JboException("Por favor ingrese los folios.");  
           
       }*/
       
   }

    /**Custom DML update/insert/delete logic here.
     */
    protected void doDML(int operation, TransactionEvent e) {
   
        Number vIdLiquidacion;
        Row[] vFolios;
        
     
        
        validarEntidad();
        if (operation==this.DML_INSERT)
        { 
         if (this.getIdLiquidacion()==null)
           {
          
            SequenceImpl sequence = new SequenceImpl("SIS_LIQUIDACION_SQ",e.getDBTransaction());
            vIdLiquidacion=sequence.getSequenceNumber();
            
            /*
              vFolios=this.getSisFolioLiquidacion().getAllRowsInRange();
              
              for (int i=0;i<vFolios.length;i++){
                  
                  vFolios[i].setAttribute("IdLiquidacion",vIdLiquidacion);
              }*/
              
              this.setIdLiquidacion(vIdLiquidacion);
            }         
          }else if (operation==this.DML_UPDATE){
            //this.set
             this.setModPor(utils.getAuthUser(this.getDBTransaction()));
             this.setFechaMod(utils.getFechaActual());
          }
      
       registrarLogOperaciones(operation, e);   
       super.doDML(operation, e);         
       
        
        
    }
/*
public void beforeCommit(TransactionEvent e){
    NameValuePairs valores1=new NameValuePairs();
    //System.out.println("-- entra al befor commit--");
    Object resultado1;
    String vResultado;
    valores1.setAttribute("1",this.getIdProceso());
    valores1.setAttribute("2",this.getIdLiquidacion());
    
    // System.out.println("-- entra al befor commit--");
    
  //  System.out.println(this.getIdProceso());
  //  System.out.println(this.getIdLiquidacion());
    //OJO  
    vResultado=utils_DB.ejecutarProcedimiento3(e.getDBTransaction(),"sis_pkg_procs.LiquidarDocumentoV2(?,?)",valores1);
    
    if (vResultado!=null && !vResultado.toString().equals("OK")){
        e.getDBTransaction().cancelDMLOperations();
       throw new JboException(vResultado); 
    }
    
  //  System.out.println("--Entra aqui a ejecutora el commit--");
  //  System.out.println(this.getIdProceso());
  //  System.out.println(this.getIdLiquidacion());
   // if (entro==false) {  this.getDBTransaction().commit();}
     super.beforeCommit(e); 
    //  entro=true;

}
*/

    /**Gets the attribute value for Validacion, using the alias name Validacion
     */
    public Boolean getValidacion() {
        
        NameValuePairs valores1=new NameValuePairs();
        NameValuePairs valores2=new NameValuePairs();
        
        Object resultado1,resultado2;
        boolean vResultado=false;;
        
     //   this.getIdLiquidacion()
        //el "1" no indica nada en ambos
      //  this.setValidacion(false);
           try{ 
            if (this.getCreadoPor()!=null && this.getIdDependencia()!=null){      
                valores1.setAttribute("1",this.getCreadoPor());
                valores1.setAttribute("2",this.getIdDependencia());
                valores2.setAttribute("1",this.getCreadoPor());
                valores2.setAttribute("2",this.getIdDependencia());
                
                resultado1=utils_DB.getValorFuncion(this.getDBTransaction(),"sis_pkg_util.USUARIOACCESADEPENDENCIA(?,?)",valores1);
                resultado2=utils_DB.getValorFuncion(this.getDBTransaction(),"SIS_PKG_UTIL.EXISTEN_OTROSUSUARIOSTESOREROS(?,?)",valores2);
                
                //System.out.println(this.getIdDependencia());
                //System.out.println(resultado2);
                //System.out.println(getCreadoPor());
                
               if(resultado1!=null && Integer.parseInt(resultado1.toString())>0){
                    if(resultado2!=null && Integer.parseInt(resultado2.toString())>0){
                        //this.setValidacion(false);
                        vResultado=false;
                      //  System.out.println("------retorna FALSO");
                    }else{
                        //this.setValidacion(true);
                        vResultado=true;
                      //  System.out.print("-----retorna VERDADERO");
                    }
               }
            }
           }catch(Exception exep) {
              // this.setValidacion(false);
               vResultado=false;
           }
       // return (Boolean)getAttributeInternal(VALIDACION);
       return vResultado;
    }

    /**Sets <code>value</code> as the attribute value for Validacion
    */
     
    public void setValidacion(Boolean value) {
        setAttributeInternal(VALIDACION, value);
    }


    /**Add attribute defaulting logic in this method.
     */
    protected void create(AttributeList attributeList) {
       // System.out.println(" ENTRA create");
        super.create(attributeList);
    }

    /**Gets the attribute value for TipoLiquidacion, using the alias name TipoLiquidacion
     */
    public Number getTipoLiquidacion() {
        return (Number)getAttributeInternal(TIPOLIQUIDACION);
    }

    /**Sets <code>value</code> as the attribute value for TipoLiquidacion
     */
    public void setTipoLiquidacion(Number value) {
        setAttributeInternal(TIPOLIQUIDACION, value);
    }

    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getSisFolioLiquidacion() {
        return (RowIterator)getAttributeInternal(SISFOLIOLIQUIDACION);
    }

    /**Gets the attribute value for ModPor, using the alias name ModPor
     */
    public String getModPor() {
        return (String)getAttributeInternal(MODPOR);
    }

    /**Sets <code>value</code> as the attribute value for ModPor
     */
    public void setModPor(String value) {
        setAttributeInternal(MODPOR, value);
    }

    /**Gets the attribute value for FechaMod, using the alias name FechaMod
     */
    public Date getFechaMod() {
        return (Date)getAttributeInternal(FECHAMOD);
    }

    /**Sets <code>value</code> as the attribute value for FechaMod
     */
    public void setFechaMod(Date value) {
        setAttributeInternal(FECHAMOD, value);
    }

    /**Creates a Key object based on given key constituents
     */
    public static Key createPrimaryKey(Number idLiquidacion) {
        return new Key(new Object[]{idLiquidacion});
    }
}
