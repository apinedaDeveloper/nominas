package enlace_datos.entidades.procesos;

import enlace_datos.util.myEntityImpl;
import enlace_datos.util.utils;

import enlace_datos.util.utils_DB;

import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SisFolioLiquidacionImpl extends myEntityImpl {
    public static final int IDFOLIOLIQUIDACION = 0;
    public static final int IDLIQUIDACION = 1;
    public static final int FOLIOINICIAL = 2;
    public static final int FOLIOFINAL = 3;
    public static final int OBSRV = 4;
    public static final int CREADOPOR = 5;
    public static final int FECHACREACION = 6;
    public static final int MODPOR = 7;
    public static final int FECHAMOD = 8;
    public static final int SISLIQUIDACION = 9;
    private static EntityDefImpl mDefinitionObject;

    /**This is the default constructor (do not remove)
     */
    public SisFolioLiquidacionImpl() {
    }


    /**Retrieves the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = (EntityDefImpl)EntityDefImpl.findDefObject("enlace_datos.entidades.procesos.SisFolioLiquidacion");
        }
        return mDefinitionObject;
    }

    /**Gets the attribute value for IdFolioLiquidacion, using the alias name IdFolioLiquidacion
     */
    public Number getIdFolioLiquidacion() {
        return (Number)getAttributeInternal(IDFOLIOLIQUIDACION);
    }

    /**Sets <code>value</code> as the attribute value for IdFolioLiquidacion
     */
    public void setIdFolioLiquidacion(Number value) {
        setAttributeInternal(IDFOLIOLIQUIDACION, value);
    }

    /**Gets the attribute value for IdLiquidacion, using the alias name IdLiquidacion
     */
    public Number getIdLiquidacion() {
        return (Number)getAttributeInternal(IDLIQUIDACION);
    }

    /**Sets <code>value</code> as the attribute value for IdLiquidacion
     */
    public void setIdLiquidacion(Number value) {
        setAttributeInternal(IDLIQUIDACION, value);
    }

    /**Gets the attribute value for FolioInicial, using the alias name FolioInicial
     */
    public Number getFolioInicial() {
        return (Number)getAttributeInternal(FOLIOINICIAL);
    }

    /**Sets <code>value</code> as the attribute value for FolioInicial
     */
    public void setFolioInicial(Number value) {
        setAttributeInternal(FOLIOINICIAL, value);
    }

    /**Gets the attribute value for FolioFinal, using the alias name FolioFinal
     */
    public Number getFolioFinal() {
        return (Number)getAttributeInternal(FOLIOFINAL);
    }

    /**Sets <code>value</code> as the attribute value for FolioFinal
     */
    public void setFolioFinal(Number value) {
        setAttributeInternal(FOLIOFINAL, value);
    }

    /**Gets the attribute value for Obsrv, using the alias name Obsrv
     */
    public String getObsrv() {
        return (String)getAttributeInternal(OBSRV);
    }

    /**Sets <code>value</code> as the attribute value for Obsrv
     */
    public void setObsrv(String value) {
        setAttributeInternal(OBSRV, value);
    }

    /**Gets the attribute value for CreadoPor, using the alias name CreadoPor
     */
    public String getCreadoPor() {
        return (String)getAttributeInternal(CREADOPOR);
    }

    /**Sets <code>value</code> as the attribute value for CreadoPor
     */
    public void setCreadoPor(String value) {
        setAttributeInternal(CREADOPOR, value);
    }

    /**Gets the attribute value for FechaCreacion, using the alias name FechaCreacion
     */
    public Date getFechaCreacion() {
        return (Date)getAttributeInternal(FECHACREACION);
    }

    /**Sets <code>value</code> as the attribute value for FechaCreacion
     */
    public void setFechaCreacion(Date value) {
        setAttributeInternal(FECHACREACION, value);
    }

    /**Gets the attribute value for ModPor, using the alias name ModPor
     */
    public String getModPor() {
        return (String)getAttributeInternal(MODPOR);
    }

    /**Sets <code>value</code> as the attribute value for ModPor
     */
    public void setModPor(String value) {
        setAttributeInternal(MODPOR, value);
    }

    /**Gets the attribute value for FechaMod, using the alias name FechaMod
     */
    public Date getFechaMod() {
        return (Date)getAttributeInternal(FECHAMOD);
    }

    /**Sets <code>value</code> as the attribute value for FechaMod
     */
    public void setFechaMod(Date value) {
        setAttributeInternal(FECHAMOD, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case IDFOLIOLIQUIDACION:
            return getIdFolioLiquidacion();
        case IDLIQUIDACION:
            return getIdLiquidacion();
        case FOLIOINICIAL:
            return getFolioInicial();
        case FOLIOFINAL:
            return getFolioFinal();
        case OBSRV:
            return getObsrv();
        case CREADOPOR:
            return getCreadoPor();
        case FECHACREACION:
            return getFechaCreacion();
        case MODPOR:
            return getModPor();
        case FECHAMOD:
            return getFechaMod();
        case SISLIQUIDACION:
            return getSisLiquidacion();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case IDFOLIOLIQUIDACION:
            setIdFolioLiquidacion((Number)value);
            return;
        case IDLIQUIDACION:
            setIdLiquidacion((Number)value);
            return;
        case FOLIOINICIAL:
            setFolioInicial((Number)value);
            return;
        case FOLIOFINAL:
            setFolioFinal((Number)value);
            return;
        case OBSRV:
            setObsrv((String)value);
            return;
        case CREADOPOR:
            setCreadoPor((String)value);
            return;
        case FECHACREACION:
            setFechaCreacion((Date)value);
            return;
        case MODPOR:
            setModPor((String)value);
            return;
        case FECHAMOD:
            setFechaMod((Date)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }

    /**Gets the associated entity SisLiquidacionImpl
     */
    public SisLiquidacionImpl getSisLiquidacion() {
        return (SisLiquidacionImpl)getAttributeInternal(SISLIQUIDACION);
    }

    /**Sets <code>value</code> as the associated entity SisLiquidacionImpl
     */
    public void setSisLiquidacion(SisLiquidacionImpl value) {
        setAttributeInternal(SISLIQUIDACION, value);
    }

    /**Add locking logic here.
     */
    public void lock() {
        super.lock();
    }


       private void validarEntidad(){
       
        String vQuerry;
        Object vResul;
       
        //   System.out.println(" entra validar " + this.getFolioInicial()+"  :" +this.getFolioFinal());
          if (this.getFolioInicial()==null) {
             throw new JboException("Ingrese el Folio Inicial.");  
           }
           if (this.getFolioFinal()==null) {
              throw new JboException("Ingrese el Folio Final.");  
            }
           
           if (this.getFolioInicial().compareTo(this.getFolioFinal())>0){
               throw new JboException("El valor del Folio Inicial no debe ser mayor al Folio Final.");   
           }
           
           
           vQuerry="select count(0) \n" + 
           "             from sis_folio_liquidacion fol, sis_liquidacion liq\n" + 
           "            where \n" + 
           "            liq.id_liquidacion<>"+this.getIdLiquidacion()+"\n"+
           "            and liq.id_liquidacion=fol.id_liquidacion and liq.estado<>208 and \n" + 
           "            (\n" + 
           "            fol.folio_inicial between "+this.getFolioInicial()+ " and " +this.getFolioFinal()+ 
           "            or fol.folio_final between " + this.getFolioInicial()+ " and " + this.getFolioFinal() + 
           "            )";
           
           vResul= utils_DB.getEjecutarQuerry(this.getDBTransaction(),vQuerry); 
           
           if (vResul!=null && !vResul.toString().equals("0"))
           {
              throw new JboException("Los folios " + this.getFolioInicial() + " " +this.getFolioFinal()+ " ya existen o se traslapan, por favor revise.");
               
           }else if (vResul==null){
               
               throw new JboException(" Verifique los folios");   
           }
           
       }


    /**Custom DML update/insert/delete logic here.
     */
    protected void doDML(int operation, TransactionEvent e) {
        Number vfolio;
    
       // System.out.println("sis folios");
        
        validarEntidad();
        
        if (operation == DML_INSERT){
       
            SequenceImpl sequence = new SequenceImpl("sis_folio_liquidacion_sq",e.getDBTransaction());
            vfolio=sequence.getSequenceNumber();
            this.setIdFolioLiquidacion(vfolio);
        }else if(operation== DML_UPDATE){
            
            this.setModPor(utils.getAuthUser(this.getDBTransaction()));
            this.setFechaMod(utils.getFechaActual());
        }


        registrarLogOperaciones(operation, e);   
        super.doDML(operation, e);
    }

    /**Creates a Key object based on given key constituents
     */
    public static Key createPrimaryKey(Number idFolioLiquidacion) {
        return new Key(new Object[]{idFolioLiquidacion});
    }
}
