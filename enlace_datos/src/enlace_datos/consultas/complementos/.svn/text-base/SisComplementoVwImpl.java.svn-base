package enlace_datos.consultas.complementos;

import enlace_datos.consultas.complementos.common.SisComplementoVw;

import enlace_datos.util.utils;
import enlace_datos.util.utils_DB;

import java.math.BigDecimal;

import java.sql.SQLException;

import oracle.jbo.JboException;
import oracle.jbo.NameValuePairs;
import oracle.jbo.Row;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SisComplementoVwImpl extends ViewObjectImpl implements SisComplementoVw {
    /**This is the default constructor (do not remove)
     */
    private String vSubPrograma1="select id_partida \n" + 
    "      from partida a\n" + 
    "    where \n" + 
    "    a.d1=4\n" + 
    "    and a.d8 is  null and a.d9d10 is  null\n" + 
    "    and\n" + 
    "    (\n" + 
    "    exists(\n" + 
    "    select 1 from usuario_unidad b, partida c\n" + 
    "    where b.id_partida=c.id_partida\n" + 
    "    and b.usuario=";
    
    private String vSubPrograma2= 
    "    and b.tipo_usuario='TRABAJADOR'\n" + 
    "    and sysdate between b.vigencia_de and nvl(vigencia_a,sysdate)\n" + 
    "    and c.aniomanual=a.aniomanual\n" + 
    "    and a.d1=c.d1\n" + 
    "    and a.d2=c.d2\n" + 
    "    and a.d3d4=c.d3d4\n" + 
    "    and\n" + 
    "    (\n" + 
    "    (\n" + 
    "    c.d5 is null\n" + 
    "    and c.d6 is null\n" + 
    "    and c.d7 is null\n" + 
    "    )\n" + 
    "    or\n" + 
    "    (\n" + 
    "    c.d5=a.d5\n" + 
    "    and c.d6=a.d6\n" + 
    "    and c.d7=a.d7\n" + 
    "    )\n" + 
    "    )\n" + 
    "    )\n" + 
    "    )\n" + 
    "    and rownum<=1"; 
     
     
    public SisComplementoVwImpl() {
    }

    /**Gets the bind variable value for pUsuario
     */
    public String getpUsuario() {
        return (String)getNamedWhereClauseParam("pUsuario");
    }

    /**Sets <code>value</code> for bind variable pUsuario
     */
    public void setpUsuario(String value) {
        setNamedWhereClauseParam("pUsuario", value);
    }

    /**Gets the bind variable value for pTipoCompl
     */
    public Number getpTipoCompl() {
        return (Number)getNamedWhereClauseParam("pTipoCompl");
    }

    /**Sets <code>value</code> for bind variable pTipoCompl
     */
    public void setpTipoCompl(Number value) {
        setNamedWhereClauseParam("pTipoCompl", value);
    }
    
    public void crearComplemento(Number pTipoCompl,Number pPeriodo, Number pAnio, String pUsuario, Number pisAutofinanciable){
     
     SisComplementoVwRowImpl pFila;   
     Object pIdCompl,pIdSubprog;
     pFila=(SisComplementoVwRowImpl)this.createRow();     
     pFila.setAnio(pAnio);
     pFila.setPeriodo(pPeriodo);
     pFila.setCreadoPor(pUsuario);
     pFila.setIdTipo(pTipoCompl);
     pFila.setIdEstado(utils.getNumberOracle("170"));
     
     System.out.println("pisAutofinanciable:="+pisAutofinanciable);
     if (pisAutofinanciable.toString().equals("33"))
        pFila.setIsautofinanciable("SI"); 
     else if (pisAutofinanciable.toString().equals("25"))
        pFila.setIsautofinanciable("NO");
     
     pIdCompl=utils_DB.getEjecutarQuerry(this.getDBTransaction(),"select sis_complemento_sq.nextval from dual");
     
     if (pIdCompl!=null){         
      pFila.setIdComplemento( utils.getNumberOracle(pIdCompl) );          
     }
     
     
     pIdSubprog=utils_DB.getEjecutarQuerry(this.getDBTransaction(),vSubPrograma1+"'"+pUsuario+"' "+vSubPrograma2);
     
     if (pIdSubprog!=null){
         
      pFila.setIdSubprograma(utils.getNumberOracle(pIdSubprog));   
      
     }
    
    //this.setCurrentRow(pFila); 
    this.insertRow(pFila);
    
    
        
    }
   
    
    
   public void crearDetComplNormal(Number pIdComplemento,Number pIdcontrato,Number pTipoNomina,Number pMes,Number pAnio,String pUsuario){
       
       NameValuePairs Parametros=new NameValuePairs();
       
       Parametros.setAttribute("1",pIdComplemento);
       Parametros.setAttribute("2",pIdcontrato);
       Parametros.setAttribute("3",pTipoNomina);
       Parametros.setAttribute("4",pMes);
       Parametros.setAttribute("5",pAnio);
       Parametros.setAttribute("6",pUsuario);
              
       utils_DB.ejecutarProcedimiento(this.getDBTransaction(),"sis_complementos_pkg.GENERAR_COMPLEMENTO_NORMAL(?,?,?,?,?,?)",Parametros);
       
             
       
   }

    public void crearComplementoIGSS(Number pIdComplemento, Number pTipoComplemento, Number pMes, Number pIdDependencia, String pDescripcion, Number pAnio, Number pMesPago, Number pAnioPago){
        
        NameValuePairs Parametros=new NameValuePairs();
        String resultado = "OK";
        
        Parametros.setAttribute("1",new BigDecimal(pIdComplemento!=null?pIdComplemento.toString():"0"));
        Parametros.setAttribute("2",pTipoComplemento);
        Parametros.setAttribute("3",pMes);
        Parametros.setAttribute("4",pAnio);
        Parametros.setAttribute("5",pDescripcion);
        Parametros.setAttribute("6",utils.getAuthUser(this.getDBTransaction()));       
        Parametros.setAttribute("7",pIdDependencia);
        Parametros.setAttribute("8",pMesPago);
        Parametros.setAttribute("9",pAnioPago);
        /*
        CREAR_COMPLEMENTO_IGSS( 1- pIdComplemento IN NUMBER,
                                2- pTipoComplemento IN NUMBER,
                                3- pPeriodo IN NUMBER,
                                4- pAnio IN NUMBER,
                                5- pDescripcion in varchar2,
                                6- pUsuario in varchar2,
                                7- pIdDependencia IN NUMBER
                                8- pPeriodoPago IN NUMBER
                                9- pAnioPago IN NUMBER
                                )   */    
        resultado = utils_DB.ejecutarProcedimiento3(this.getDBTransaction(),"sis_complementos_pkg.CREAR_COMPLEMENTO_IGSS(?,?,?,?,?,?,?,?,?)",Parametros);
        if (resultado.compareToIgnoreCase("OK")!=0){
            int posIni=resultado.indexOf("<<");
            int posFin=resultado.indexOf(">>");
            if(posIni > 0 && posFin > 0){
                resultado=resultado.substring(posIni+2, posFin);
            }
            throw new JboException(resultado);
        }
        
    }
    
    
    public void crearAjusteComplementoIGSS(Number pIdComplemento, Number pTipoComplemento, Number pIdDependencia, String pDescripcion, Number pMesPago, Number pAnioPago, Number pIdComplementoIgss){
        
        NameValuePairs Parametros=new NameValuePairs();
        String resultado = "OK";
        /*
        if(pIdComplemento==null)
            System.out.println("valor nulo");
        else
            System.out.println("no es nulo");
        */
        Parametros.setAttribute("1",new BigDecimal(pIdComplemento!=null?pIdComplemento.toString():"0"));
        Parametros.setAttribute("2",pTipoComplemento);
        Parametros.setAttribute("3",pDescripcion);
        Parametros.setAttribute("4",utils.getAuthUser(this.getDBTransaction()));       
        Parametros.setAttribute("5",pIdDependencia);
        Parametros.setAttribute("6",pMesPago);
        Parametros.setAttribute("7",pAnioPago);
        Parametros.setAttribute("8",pIdComplementoIgss);
        
        /*
        CREAR_COMPLEMENTO_IGSS( 1- pIdComplemento IN NUMBER,
                                2- pTipoComplemento IN NUMBER,
                                3- pDescripcion in varchar2,
                                4- pUsuario in varchar2,
                                5- pIdDependencia IN NUMBER
                                6- pPeriodoPago IN NUMBER
                                7- pAnioPago IN NUMBER
                                8- pIdComplementoIgss
                                )   */    
        resultado = utils_DB.ejecutarProcedimiento3(this.getDBTransaction(),"sis_complementos_pkg.CREAR_AJUSTE_COMPLEMENTO_IGSS(?,?,?,?,?,?,?,?)",Parametros);
        if (resultado.compareToIgnoreCase("OK")!=0){
            int posIni=resultado.indexOf("<<");
            int posFin=resultado.indexOf(">>");
            if(posIni > 0 && posFin > 0){
                resultado=resultado.substring(posIni+2, posFin);
            }
            throw new JboException(resultado);
        }
        
    }    
    
    
    //CALCULAR_COMPLEMENTOS_IGSS(pIdComplemento in number,pMes in number,pAnio in number, pUsuario in varchar2, pTipoComplemento in number)
    public void agregarComplementoIGSS(Number pIdComplemento, Number pMes, Number pAnio, Number pTipoComplemento){
        NameValuePairs Parametros=new NameValuePairs();
        String resultado = "OK";
        
        Parametros.setAttribute("1",pIdComplemento);
        Parametros.setAttribute("2",pMes);
        Parametros.setAttribute("3",pAnio);
        Parametros.setAttribute("4",utils.getAuthUser(this.getDBTransaction()));       
        Parametros.setAttribute("5",pTipoComplemento);
        /*
         CALCULAR_COMPLEMENTOS_IGSS( 1- pIdComplemento in number,
                                     2- pMes in number,
                                     3- pAnio in number, 
                                     4- pUsuario in varchar2, 
                                     5- pTipoComplemento in number
                                )   */    
        resultado = utils_DB.ejecutarProcedimiento3(this.getDBTransaction(),"sis_complementos_pkg.CALCULAR_COMPLEMENTOS_IGSS(?,?,?,?,?)",Parametros);
        if (resultado.compareToIgnoreCase("OK")!=0){
            int posIni=resultado.indexOf("<<");
            int posFin=resultado.indexOf(">>");
            if(posIni > 0 && posFin > 0){
                resultado=resultado.substring(posIni+2, posFin);
            }
            throw new JboException(resultado);
        }        
    }
    
    
    public void reprocesarComplementoIGSS(Number pIdComplemento){
        
        NameValuePairs Parametros=new NameValuePairs();
        
        Parametros.setAttribute("1",pIdComplemento);
        Parametros.setAttribute("2",utils.getAuthUser(this.getDBTransaction()));
               
        utils_DB.ejecutarProcedimiento(this.getDBTransaction(),"sis_complementos_pkg.RECALCULAR_COMPLEMENTOS_IGSS(?,?)",Parametros);
        
    }            
    
    
    public void actualizarVW(Number pIdComplemento){
        
        Row []vFilas;        
        vFilas=this.getAllRowsInRange();
        int vTamanio;
        vTamanio=vFilas.length;
        Number vIdComple;
        boolean vEncontrado=false;
        
     //   this.executeQuery();
        
        for (int i=0;i<vTamanio;i++)
        {
            
            vIdComple=(Number)vFilas[i].getAttribute("IdComplemento");
            
            if (vIdComple.compareTo(pIdComplemento)==0){
             
             this.setCurrentRow(vFilas[i]);      
             vEncontrado=true;
             break;    
            }
        }
        
        if (vEncontrado==false)
        {
        
             this.setfechaI(utils.getFechaOracle("01/01/"+utils.getAnioActual()));
             this.setfechaF(null);
             this.executeQuery();
            
            
            for (int i=0;i<vTamanio;i++)
            {
                
                vIdComple=(Number)vFilas[i].getAttribute("IdComplemento");
                
                if (vIdComple.compareTo(pIdComplemento)==0){
                 
                 this.setCurrentRow(vFilas[i]);      
                 vEncontrado=true;
                 break;    
                }
            }
            
        }
        
    }
    
    public void generarComplementoPorPromocion(oracle.jbo.domain.Number pRegPer,
                                                  oracle.jbo.domain.Number pIdPuesto,
                                                  Date pAPartirDe,
                                                  Date pHasta,                                                  
                                                  oracle.jbo.domain.Number pIdComplemento){
        
        NameValuePairs Parametros=new NameValuePairs();
        String resultado = "OK";
        
        Parametros.setAttribute("1",pRegPer);
        Parametros.setAttribute("2",pIdPuesto);
        Parametros.setAttribute("3",utils.getFechaFormato("yyyyMMdd",pAPartirDe));
        Parametros.setAttribute("4",utils.getFechaFormato("yyyyMMdd",pHasta));        
        Parametros.setAttribute("5",utils.getAuthUser(this.getDBTransaction()));       
        Parametros.setAttribute("6",pIdComplemento);            
        
        resultado = utils_DB.ejecutarProcedimiento3(this.getDBTransaction(),"SIS_COMPLEMENTOS_PKG.generarComplementosXPromocion(?,?,to_date(?,'rrrrmmdd'),to_date(?,'rrrrmmdd'),?,?)",Parametros);
        if (resultado.compareToIgnoreCase("OK")!=0){
            int posIni=resultado.indexOf("<<");
            int posFin=resultado.indexOf(">>");
            if(posIni > 0 && posFin > 0){
                resultado=resultado.substring(posIni+2, posFin);
            }
            throw new JboException(resultado);
        }             
        
    }

    /**Gets the bind variable value for fechaI
     */
    public Date getfechaI() {
        return (Date)getNamedWhereClauseParam("fechaI");
    }

    /**Sets <code>value</code> for bind variable fechaI
     */
    public void setfechaI(Date value) {
        setNamedWhereClauseParam("fechaI", value);
    }

    /**Gets the bind variable value for fechaF
     */
    public Date getfechaF() {
        return (Date)getNamedWhereClauseParam("fechaF");
    }

    /**Sets <code>value</code> for bind variable fechaF
     */
    public void setfechaF(Date value) {
        setNamedWhereClauseParam("fechaF", value);
    }
    
    public void Procesar_reposicion(Number pIdComplemento,Number pIdSIS21,String pUsuario ){
       String vResultado;
    
       if (pIdSIS21 !=null)
       {
        
        NameValuePairs Parametros=new NameValuePairs();
        Parametros.setAttribute("1",pIdComplemento);
        Parametros.setAttribute("2",pIdSIS21);        
        Parametros.setAttribute("3",pUsuario);
        
      
        vResultado=utils_DB.ejecutarProcedimiento3(this.getDBTransaction(),"sis_complementos_pkg.REPOSICION_PAGO(?,?,?)",Parametros);
        
       
        if (!vResultado.equals("OK")){
            
            throw new JboException(vResultado);   
            
        }
       
       }else{
           
           throw new JboException("Por favor seleccione un pago a reponer");
       }
       
       
    }            
    
 
    public void crearDetComplAnt(Number pIdComplemento,Number pIdcontrato,Number pAnio,String pUsuario,Number pOpcion){
        
        NameValuePairs Parametros=new NameValuePairs();
        
        Parametros.setAttribute("1",pIdComplemento);
        Parametros.setAttribute("2",pIdcontrato);
        Parametros.setAttribute("3",pUsuario);
        Parametros.setAttribute("4",pOpcion);
               
        utils_DB.ejecutarProcedimiento(this.getDBTransaction(),"sis_complementos_pkg.PAGOS_ANIOS_ANTERIORES(?,?,?,?)",Parametros);
              
        
    }
    
    
 public void borrarComplemento(){
     
     Row vFila=this.getCurrentRow();
     SisComplementoVwRowImpl vFilaCompl;
     int vCantidad;
     
     if (vFila!=null){
         
         vFilaCompl=(SisComplementoVwRowImpl)vFila;
         
         vCantidad=vFilaCompl.getSisComplementoDetVw().getRowCount();
         
         if (vCantidad==0){
             
            vFila.remove(); 
             
         }else{
             throw new JboException("No se puede borrar porque existe mas de un detalle.");
         }
         
     }
     
 }
  
  
private Number getIdSubProgDetalle(Number pIdComplemento){
 String vConsulta; 
 Number pIdSubprog=null;   
 Object vResult;
 
 
 vConsulta="select distinct prt2.id_partida \n" + 
 "from \n" + 
 "sis_complemento_det cmpldt,\n" + 
 "partida prt,\n" + 
 "partida prt2\n" + 
 "where id_complemento= " +pIdComplemento+ 
 "and cmpldt.id_partida=prt.id_partida\n" + 
 "and prt.d1=prt2.d1\n" + 
 "and prt.d2=prt2.d2\n" + 
 "and prt.d3d4=prt2.d3d4\n" + 
 "and prt.d5=prt2.d5\n" + 
 "and prt.d6=prt2.d6\n" + 
 "and prt.d7=prt2.d7\n" + 
 "and prt2.d8 is null\n" + 
 "and prt2.d9d10 is null\n" + 
 "and rownum<=1";
    
 vResult=utils_DB.getEjecutarQuerry(this.getDBTransaction(),vConsulta);   
    
 if (vResult!=null)
 {
     pIdSubprog=utils.getNumberOracle(vResult);
     
 }

return   pIdSubprog;
}
  
    
public void actualizaSubProgramaCompl(){
    
    SisComplementoVwRowImpl pFila;   
    pFila=(SisComplementoVwRowImpl)this.getCurrentRow();   
    Number vIdSubp;
    
    if (pFila!=null)
    {
        vIdSubp=getIdSubProgDetalle(pFila.getIdComplemento());
        
        if (vIdSubp!=null){
            
           pFila.setIdSubprograma(vIdSubp); 
           
        }
    }
     
}

 public void crearDetComplActual(Number pIdComplemento,Number pIdcontrato,Number pAnio,String pUsuario,Number pOpcion){
        
        NameValuePairs Parametros=new NameValuePairs();
        
        Parametros.setAttribute("1",pIdComplemento);
        Parametros.setAttribute("2",pIdcontrato);
        Parametros.setAttribute("3",pUsuario);
        Parametros.setAttribute("4",pOpcion);
               
        utils_DB.ejecutarProcedimiento(this.getDBTransaction(),"sis_complementos_pkg.PAGOS_ANIO_ACTUAL(?,?,?,?)",Parametros);
              
        
 }


    /**Gets the bind variable value for pOpcion
     */
    public Number getpOpcion() {
        return (Number)getNamedWhereClauseParam("pOpcion");
    }

    /**Sets <code>value</code> for bind variable pOpcion
     */
    public void setpOpcion(Number value) {
        setNamedWhereClauseParam("pOpcion", value);
    }
    
    public void revertir_gestion(Number pIdGestion,String pObserv,String pUsuario){
        String vResultado;
        NameValuePairs vListado;        
        vListado= new NameValuePairs();
         
        vListado.setAttribute("01",pIdGestion);
        vListado.setAttribute("02",pObserv);
        vListado.setAttribute("03",pUsuario);
            
        vResultado=utils_DB.ejecutarProcedimiento3(this.getDBTransaction(),"sis_pkg_procs.REVERTIR_GESTIONES(?,?,?,'COMPLEMENTO')",vListado);
            
             if (vResultado.toString().equals("OK")){
                 
                 this.getDBTransaction().commit();
             }else{
                 
                throw new JboException(vResultado); 
             }
            
        //}
    }
}
