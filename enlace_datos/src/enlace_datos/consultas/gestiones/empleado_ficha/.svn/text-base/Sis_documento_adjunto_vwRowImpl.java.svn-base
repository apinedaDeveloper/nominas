package enlace_datos.consultas.gestiones.empleado_ficha;

import enlace_datos.entidades.gestiones.SisArchivoAdjuntoImpl;

import enlace_datos.util.encription;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class Sis_documento_adjunto_vwRowImpl extends ViewRowImpl {
    public static final int IDARCHIVOADJUNTO = 0;
    public static final int IDTIPOARCHIVO = 1;
    public static final int NOMARCHIVO = 2;
    public static final int FECHACREACION = 3;
    public static final int REGISTROEMPLEADO = 4;
    public static final int CREADOPOR = 5;
    public static final int VALIDADO = 6;
    public static final int TIPOARCHIVO_NOMBRE = 7;
    public static final int DESCRIPCION = 8;
    public static final int MODULO = 9;
    public static final int NOMARCHENCRIPT = 10;

    /**This is the default constructor (do not remove)
     */
    public Sis_documento_adjunto_vwRowImpl() {
    }

    /**Gets SisArchivoAdjunto entity object.
     */
    public SisArchivoAdjuntoImpl getSisArchivoAdjunto() {
        return (SisArchivoAdjuntoImpl)getEntity(0);
    }

    /**Gets the attribute value for ID_ARCHIVO_ADJUNTO using the alias name IdArchivoAdjunto
     */
    public Number getIdArchivoAdjunto() {
        return (Number) getAttributeInternal(IDARCHIVOADJUNTO);
    }

    /**Sets <code>value</code> as attribute value for ID_ARCHIVO_ADJUNTO using the alias name IdArchivoAdjunto
     */
    public void setIdArchivoAdjunto(Number value) {
        setAttributeInternal(IDARCHIVOADJUNTO, value);
    }

    /**Gets the attribute value for ID_TIPO_ARCHIVO using the alias name IdTipoArchivo
     */
    public Number getIdTipoArchivo() {
        return (Number) getAttributeInternal(IDTIPOARCHIVO);
    }

    /**Sets <code>value</code> as attribute value for ID_TIPO_ARCHIVO using the alias name IdTipoArchivo
     */
    public void setIdTipoArchivo(Number value) {
        setAttributeInternal(IDTIPOARCHIVO, value);
    }

    /**Gets the attribute value for NOM_ARCHIVO using the alias name NomArchivo
     */
    public String getNomArchivo() {
        return (String) getAttributeInternal(NOMARCHIVO);
    }

    /**Sets <code>value</code> as attribute value for NOM_ARCHIVO using the alias name NomArchivo
     */
    public void setNomArchivo(String value) {
        setAttributeInternal(NOMARCHIVO, value);
    }

    /**Gets the attribute value for FECHA_CREACION using the alias name FechaCreacion
     */
    public Date getFechaCreacion() {
        return (Date) getAttributeInternal(FECHACREACION);
    }

    /**Sets <code>value</code> as attribute value for FECHA_CREACION using the alias name FechaCreacion
     */
    public void setFechaCreacion(Date value) {
        setAttributeInternal(FECHACREACION, value);
    }

    /**Gets the attribute value for REGISTRO_EMPLEADO using the alias name RegistroEmpleado
     */
    public Number getRegistroEmpleado() {
        return (Number) getAttributeInternal(REGISTROEMPLEADO);
    }

    /**Sets <code>value</code> as attribute value for REGISTRO_EMPLEADO using the alias name RegistroEmpleado
     */
    public void setRegistroEmpleado(Number value) {
        setAttributeInternal(REGISTROEMPLEADO, value);
    }

    /**Gets the attribute value for CREADO_POR using the alias name CreadoPor
     */
    public String getCreadoPor() {
        return (String) getAttributeInternal(CREADOPOR);
    }

    /**Sets <code>value</code> as attribute value for CREADO_POR using the alias name CreadoPor
     */
    public void setCreadoPor(String value) {
        setAttributeInternal(CREADOPOR, value);
    }

    /**Gets the attribute value for VALIDADO using the alias name Validado
     */
    public Number getValidado() {
        return (Number) getAttributeInternal(VALIDADO);
    }

    /**Sets <code>value</code> as attribute value for VALIDADO using the alias name Validado
     */
    public void setValidado(Number value) {
        setAttributeInternal(VALIDADO, value);
    }

    /**Gets the attribute value for the calculated attribute TipoArchivo_nombre
     */
    public String getTipoArchivo_nombre() {
        return (String) getAttributeInternal(TIPOARCHIVO_NOMBRE);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute TipoArchivo_nombre
     */
    public void setTipoArchivo_nombre(String value) {
        setAttributeInternal(TIPOARCHIVO_NOMBRE, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case IDARCHIVOADJUNTO:
            return getIdArchivoAdjunto();
        case IDTIPOARCHIVO:
            return getIdTipoArchivo();
        case NOMARCHIVO:
            return getNomArchivo();
        case FECHACREACION:
            return getFechaCreacion();
        case REGISTROEMPLEADO:
            return getRegistroEmpleado();
        case CREADOPOR:
            return getCreadoPor();
        case VALIDADO:
            return getValidado();
        case TIPOARCHIVO_NOMBRE:
            return getTipoArchivo_nombre();
        case DESCRIPCION:
            return getDescripcion();
        case MODULO:
            return getModulo();
        case NOMARCHENCRIPT:
            return getnomArchEncript();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case IDARCHIVOADJUNTO:
            setIdArchivoAdjunto((Number)value);
            return;
        case IDTIPOARCHIVO:
            setIdTipoArchivo((Number)value);
            return;
        case NOMARCHIVO:
            setNomArchivo((String)value);
            return;
        case FECHACREACION:
            setFechaCreacion((Date)value);
            return;
        case REGISTROEMPLEADO:
            setRegistroEmpleado((Number)value);
            return;
        case CREADOPOR:
            setCreadoPor((String)value);
            return;
        case VALIDADO:
            setValidado((Number)value);
            return;
        case TIPOARCHIVO_NOMBRE:
            setTipoArchivo_nombre((String)value);
            return;
        case DESCRIPCION:
            setDescripcion((String)value);
            return;
        case MODULO:
            setModulo((String)value);
            return;
        case NOMARCHENCRIPT:
            setnomArchEncript((String)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }

    /**Gets the attribute value for the calculated attribute nomArchEncript
     */
    public String getnomArchEncript() {
        String vValor,vTemp,vContentTypes[],vContentType,vNomArchivo;
        encription encript;
        vValor=(String) getAttributeInternal(NOMARCHENCRIPT);
        vNomArchivo=this.getNomArchivo();
        if (vValor==null){
            encript=new encription();
            //vContentTypes="image/jpeg|image/jpg|image/png".split("\\|");
            //vContentTypes="image/x-png|image/jpeg|image/png|application/pdf|image/jpg".split("\\|");
            vContentTypes="application/pdf".split("\\|");
            if (vNomArchivo!=null && vNomArchivo.equalsIgnoreCase("")==false) {
                if ( vNomArchivo.indexOf(".") >= 0) {
                    vContentType = vNomArchivo.substring(vNomArchivo.indexOf(".")+1);
                    if (vContentType.equalsIgnoreCase("jpeg")){
                        vContentTypes[0] = "image/jpeg";
                    } else if (vContentType.equalsIgnoreCase("x-png")){
                        vContentTypes[0] = "image/x-png";
                    } else if (vContentType.equalsIgnoreCase("png")){
                        vContentTypes[0] = "image/png";
                    } else if (vContentType.equalsIgnoreCase("jpg")){
                        vContentTypes[0] = "image/jpg";
                    }
                }
            }
            vContentType=vContentTypes[0];
            vTemp=this.getIdArchivoAdjunto()+"|G|"+vContentType;
            vValor=encript.encriptarDES(vTemp,null);
            this.setnomArchEncript(vValor);
        }
        return (String) getAttributeInternal(NOMARCHENCRIPT);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute nomArchEncript
     */
    public void setnomArchEncript(String value) {
        setAttributeInternal(NOMARCHENCRIPT, value);
    }


    /**Gets the attribute value for DESCRIPCION using the alias name Descripcion
     */
    public String getDescripcion() {
        return (String) getAttributeInternal(DESCRIPCION);
    }

    /**Sets <code>value</code> as attribute value for DESCRIPCION using the alias name Descripcion
     */
    public void setDescripcion(String value) {
        setAttributeInternal(DESCRIPCION, value);
    }

    /**Gets the attribute value for MODULO using the alias name Modulo
     */
    public String getModulo() {
        return (String) getAttributeInternal(MODULO);
    }

    /**Sets <code>value</code> as attribute value for MODULO using the alias name Modulo
     */
    public void setModulo(String value) {
        setAttributeInternal(MODULO, value);
    }
}
