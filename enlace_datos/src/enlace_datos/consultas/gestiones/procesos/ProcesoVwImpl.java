package enlace_datos.consultas.gestiones.procesos;

import enlace_datos.consultas.gestiones.procesos.common.ProcesoVw;
import enlace_datos.consultas.procesos.SisProcesoPagoDetViewRowImpl;

import enlace_datos.util.utils;
import enlace_datos.util.utils_DB;

import java.sql.ResultSet;

import oracle.jbo.JboException;
import oracle.jbo.NameValuePairs;
import oracle.jbo.Row;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ProcesoVwImpl extends ViewObjectImpl implements ProcesoVw {
    /**This is the default constructor (do not remove)
     */
    public ProcesoVwImpl() {
    
    
    
    }


    public void filtrarProcesosAnuales(Number pTipoProceso,Date pFechaInicio){
       
       String vFechaInicio=""; 
       this.settipo_proceso(pTipoProceso); 
       this.setfechaI(pFechaInicio);
              
       if (pFechaInicio==null){           
          vFechaInicio="01/01/"+utils.getAnioActual(); 
          this.setfechaI(utils.getFechaOracle(vFechaInicio));
       }
        
      this.executeQuery();
      
    }


    /**executeQueryForCollection - overridden for custom java data source support.
     */
    protected void executeQueryForCollection(Object qc, Object params[], int noUserParams) {     
    super.executeQueryForCollection(qc, params, noUserParams);
    }

    /**hasNextForCollection - overridden for custom java data source support.
     */
    protected boolean hasNextForCollection(Object qc) {
        boolean bRet = super.hasNextForCollection(qc);
        return bRet;
    }

    /**createRowFromResultSet - overridden for custom java data source support.
     */
    protected ViewRowImpl createRowFromResultSet(Object qc, 
                                                 ResultSet resultSet) {
        ViewRowImpl value = super.createRowFromResultSet(qc, resultSet);
        return value;
    }

    /**getEstimatedRowCount - overridden for custom java data source support.
     */
    public long getEstimatedRowCount() {
        long value = super.getEstimatedRowCount();
        return value;
    }
    
    public void crearFila(Number pProcesoNomina,Number pIdTipoNomina,Number pIdPeriodo,Number pPorcentaje,String pNomPeriodo,String pTipoNomina,Number pAnio){
        
        SisProcesoPagoDetViewRowImpl nuevaFila;
        ProcesoVwRowImpl vFilaProceso;
        
        vFilaProceso=(ProcesoVwRowImpl)this.getCurrentRow();
        nuevaFila=(SisProcesoPagoDetViewRowImpl)vFilaProceso.getSisProcesoPagoDetView().createRow();
       
        nuevaFila.setIdProcesoNomina(pProcesoNomina);
        nuevaFila.setIdPeriodo(pIdPeriodo);
        nuevaFila.setIdTipoNomina(pIdTipoNomina);
        nuevaFila.setAnio(pAnio);
        nuevaFila.setPorcentajePago(pPorcentaje);
        nuevaFila.setNomperido(new String(pNomPeriodo));
        nuevaFila.setTiponomina(new String(pTipoNomina));
        
        vFilaProceso=(ProcesoVwRowImpl)this.getCurrentRow();
        vFilaProceso.getSisProcesoPagoDetView().insertRow(nuevaFila);
       // this.insertRow(nuevaFila);
        //nuevaFila.set
        
    }
    
    public void resetear(){
                
        
    }

    public void filtrarProceso(Date pFechaI,Date pFechaF,Number pTipoProc,String pEstado){
        this.setfechaI(pFechaI);
        this.setfechaF(pFechaF);
        this.settipo_proceso(pTipoProc);
        this.setWhereClause( "nomestado = '"+pEstado+"'");
        this.executeQuery();
        
    }


    public Number crearProceso2(String pNomEstado,String pNomProceso){
      
         Object vResultado;
         String vUsuario;
      //  vEstado=utils_DB.getIdEstado(this.getDBTransaction(),"INICIAL","SIS_AUMENTO_SALARIAL");
      //  vResultado=utils_DB.getValorTabla(this.getDBTransaction(),"SIS_AUMENTO_SALARIAL","nvl(max(id_aumento_salarial),0)+1",null);
      //  this.setCreadopor(utils.getAuthUser(this.getDBTransaction()));
      //  this.setIdEstado(vEstado);
      //  this.setIdAumentoSalarial(utils.getNumberOracle(vResultado));
        vUsuario=utils.getAuthUser(this.getDBTransaction());
        vResultado=utils_DB.getValorFuncion2(this.getDBTransaction(),"sis_pkg_util.getNewProceso('"+pNomProceso+"',to_char(sysdate,'mm'),to_char(sysdate,'yyyy'),'',null,'"+pNomEstado+"','"+vUsuario+"')",null,"select sis_proceso_sq.currval from dual"); 
        //this.setIdProceso(utils.getNumberOracle(vResultado));
        return utils.getNumberOracle(vResultado);
        
    }

    /**Gets the bind variable value for tipo_proceso
     */
    public Number gettipo_proceso() {
        return (Number)getNamedWhereClauseParam("tipo_proceso");
    }

    /**Sets <code>value</code> for bind variable tipo_proceso
     */
    public void settipo_proceso(Number value) {
        setNamedWhereClauseParam("tipo_proceso", value);
    }

    /**Gets the bind variable value for fechaI
     */
    public Date getfechaI() {
        return (Date)getNamedWhereClauseParam("fechaI");
    }

    /**Sets <code>value</code> for bind variable fechaI
     */
    public void setfechaI(Date value) {
        setNamedWhereClauseParam("fechaI", value);
    }

    /**Gets the bind variable value for fechaF
     */
    public Date getfechaF() {
        return (Date)getNamedWhereClauseParam("fechaF");
    }

    /**Sets <code>value</code> for bind variable fechaF
     */
    public void setfechaF(Date value) {
        setNamedWhereClauseParam("fechaF", value);
    }
    
    public void setProceso(Number pTipoProceso,Number pIdProceso,Date pFechaInicio){
       
       Row [] vfilas;
       
       Number vIdProceso;
       boolean vEncontrado=false;
       
       vfilas=this.getAllRowsInRange();
       for (int i=0;i<vfilas.length;i++)
       {
           
           vIdProceso=(Number)vfilas[i].getAttribute("IdProceso");
           
           if (vIdProceso.compareTo(pIdProceso)==0)
           {
            
             this.setCurrentRow(vfilas[i]);
             vEncontrado=true;
             break;
            
           }
       }   
           if (vEncontrado==false)
           {
           
           this.settipo_proceso(pTipoProceso);
           this.setfechaI(utils.getFechaOracle(utils.getFechaFormato("dd/MM/yyyy",pFechaInicio)));
           this.setfechaF(new Date(pFechaInicio.addMonths(1).dateValue()));
           this.executeQuery();
           
           vfilas=this.getAllRowsInRange();
               for (int i2=0;i2<vfilas.length;i2++)
               {
                   
                   vIdProceso=(Number)vfilas[i2].getAttribute("IdProceso");
                   
                   if (vIdProceso.compareTo(pIdProceso)==0)
                   {
                    
                     this.setCurrentRow(vfilas[i2]);
                     vEncontrado=true;
                     break;
                    
                   }
           
                }
      
           
    
         }

    }
    
    
public void cargarDescuentos(Number pIdProceso,String pUsuario){
      
         Boolean vResultado;
         
      //  vEstado=utils_DB.getIdEstado(this.getDBTransaction(),"INICIAL","SIS_AUMENTO_SALARIAL");
      //  vResultado=utils_DB.getValorTabla(this.getDBTransaction(),"SIS_AUMENTO_SALARIAL","nvl(max(id_aumento_salarial),0)+1",null);
      //  this.setCreadopor(utils.getAuthUser(this.getDBTransaction()));
      //  this.setIdEstado(vEstado);
      //  this.setIdAumentoSalarial(utils.getNumberOracle(vResultado));  sis_pkg_calculos.PROCESAR_OTROS_DESCUENTOS(12121,1,'20090203,'1'

        vResultado=utils_DB.ejecutarProcedimiento(this.getDBTransaction(),"sis_pkg_calculos.PROCESAR_OTROS_DESCUENTOS("+pIdProceso+",'"+pUsuario+"','1')",null); 
        
        //this.setIdProceso(utils.getNumberOracle(vResultado));
       if (vResultado==false){
           this.getDBTransaction().rollback();
           throw new JboException("Ha ocurrido un error, por favor revisar");
           
       }else{           
           this.getDBTransaction().commit();
       }
      
 }    
    


 public void cambiaCheque(Number pIdProceso,String pUsuario)
 {
        
         Boolean vResultado;
         NameValuePairs Parametros=new NameValuePairs();
         
         Parametros.setAttribute("1",pIdProceso);
         Parametros.setAttribute("2",pUsuario);
         

            vResultado=utils_DB.ejecutarProcedimiento(this.getDBTransaction(),"sis_pkg_pagos.CAMBIA_ESTADO_PAGO(?,1,160,?)",Parametros); 
           if (vResultado==false){
               this.getDBTransaction().rollback();
               throw new JboException("Ha ocurrido un error, por favor revisar");
               
           }else{           
               this.getDBTransaction().commit();
           }
          
}    
        

    public void cambiaAcre(Number pIdProceso,String pUsuario)
    {
           
            Boolean vResultado;
            NameValuePairs Parametros=new NameValuePairs();
            
            Parametros.setAttribute("1",pIdProceso);
            Parametros.setAttribute("2",pUsuario);
            

               vResultado=utils_DB.ejecutarProcedimiento(this.getDBTransaction(),"sis_pkg_pagos.CAMBIA_ESTADO_PAGO(?,2,18,?)",Parametros); 
              if (vResultado==false){
                  this.getDBTransaction().rollback();
                  throw new JboException("Ha ocurrido un error, por favor revisar");
                  
              }else{           
                  this.getDBTransaction().commit();
              }
             
    }



 public void aplicarProySR(Number pAnio, Number pPeriodo,String  pUsuario)
 {
     String vResultado;
     NameValuePairs vParametros;
    
     vParametros = new NameValuePairs();
     
     vParametros.setAttribute("anio",pAnio.toString());
     vParametros.setAttribute("periodo",pPeriodo.toString());
     vParametros.setAttribute("usuario",pUsuario);

     vResultado=utils_DB.ejecutarProcedimiento3(this.getDBTransaction(),"sis_pkg_calculos_isr.PARAM_ISR_NOMINA(?,?,null,?)",vParametros); 
            

     if (vResultado==null || (vResultado!=null && !vResultado.equals("OK")))
     {
         this.getDBTransaction().rollback();
         throw new JboException(vResultado);
               
     }else
     {           
         this.getDBTransaction().commit();
     }
          
 }    



    
}
