package enlace_datos.consultas.gestiones;


import enlace_datos.consultas.gestiones.common.variacion_nomina;

import enlace_datos.util.utils;

import oracle.jbo.JboException;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Date;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class variacion_nominaImpl extends ViewObjectImpl implements variacion_nomina {
    /**This is the default constructor (do not remove)
     */
    public variacion_nominaImpl() {
    }
    
    /*
     * Metodo para crear los detalles para la renuncia de un ajuste
     */
    public void insertar_det_renuncia(Number pRegistroEmpl,Number IdAjuste, Number pCorrelativo,Date pFechaUltimoProc,boolean pBaja,String pObservaciones){
       
       
       if (IdAjuste==null){
           throw new JboException("Por favor seleccione el descuento.");
           
       }
       
        if (pFechaUltimoProc==null && pBaja==false){
            throw new JboException("Por favor ingrese la fecha, o seleccione la opcion de baja.");
            
        }
        
        
        variacion_nominaRowImpl vFila=(variacion_nominaRowImpl)this.createRow();
        variacionDetAjusteRowImpl vFila2;
        vFila.setDescripcion(pObservaciones);
        vFila.setRegistroEmpleado(pRegistroEmpl);
        this.insertRow(vFila);
        
        vFila=(variacion_nominaRowImpl)this.getCurrentRow();
        vFila2=(variacionDetAjusteRowImpl)vFila.getsis_variacionDetAjuste().createRow();        
        vFila2.setIdAjuste(IdAjuste);
        vFila2.setIdCorrelativo(pCorrelativo);
        vFila2.setFechaFin(pFechaUltimoProc);
        vFila2.setbaja(pBaja==true?"SI":"NO"); 
        vFila2.setremovible("S");
        vFila2.setModi("S");
        vFila2.setRenuncia("SI");
        
        vFila.getsis_variacionDetAjuste().insertRow(vFila2);
        
        try{ 
             this.getDBTransaction().commit();
        
        }catch (Exception exp){
            exp.printStackTrace();
            this.getDBTransaction().rollback();   
            throw new JboException(utils.getSQLMensaje(exp));
        }
        
    }
    
    /*
     * Metodo para modificar los datos de un ajuste
     */
    public Number modificar_ajuste(Number pIdVariacion,Number pRegistroEmpl,Number pContrato,Number IdAjuste, Number pCorrelativo,Date pFechaUltimoProc,Number pValor,Number pPorcentaje,boolean pBaja,String pObservaciones,String pRemovible,String pMod,String pNivel){
       
        Number vIdVariacion;
        variacionDetAjusteRowImpl vFila2;
        variacion_nominaRowImpl vFila;
        
       if (IdAjuste==null){
           throw new JboException("Por favor seleccione el descuento.");
           
       }
       
        if (pFechaUltimoProc==null && pBaja==false && pValor==null && pPorcentaje==null){
            throw new JboException("No ha ingresado ningun cambio.");
            
        }
        
        
        if (pIdVariacion==null)
        {
        
        vFila=(variacion_nominaRowImpl)this.createRow();        
        vFila.setDescripcion(pObservaciones);
        vFila.setRegistroEmpleado(pRegistroEmpl);
        vFila.setIdContrato(pContrato);
        this.insertRow(vFila);
        
        vFila=(variacion_nominaRowImpl)this.getCurrentRow();
        vFila2=(variacionDetAjusteRowImpl)vFila.getsis_variacionDetAjuste().createRow();        
        vFila2.setIdAjuste(IdAjuste);
        vFila2.setIdCorrelativo(pCorrelativo);
        vFila2.setValor(pValor);
        vFila2.setPorcentaje(pPorcentaje);
        vFila2.setFechaFin(pFechaUltimoProc);
        vFila2.setbaja(pBaja==true?"SI":"NO"); 
        vFila2.setremovible(pRemovible);
        vFila2.setModi(pMod);
        vFila2.setRenuncia("NO");
        
        vFila.getsis_variacionDetAjuste().insertRow(vFila2);
       
        try{ 
        
             this.getDBTransaction().commit();
             vIdVariacion=vFila.getIdVariacionNomina() ;
             
        }catch (Exception exp){
            exp.printStackTrace();
            this.getDBTransaction().rollback();   
            throw new JboException(exp.getMessage());
        }
       
       
        }else
        {
            
            vIdVariacion=pIdVariacion;
            vFila=(variacion_nominaRowImpl)this.getCurrentRow();
            // vFila.getsis_variacionDetAjuste().getCurrentRow()
            vFila2=(variacionDetAjusteRowImpl)vFila.getsis_variacionDetAjuste().next();
            if (vFila.getIdVariacionNomina().compareTo(pIdVariacion)==0) // es el mismo para actualizar
            {
            
                if (compareObject(vFila2.getIdAjuste(),IdAjuste)==false){
                    
                    vFila2.setIdAjuste(IdAjuste);
                }
    
                
                if (compareObject(vFila2.getIdCorrelativo(),pCorrelativo)==false){
                    
                    vFila2.setIdCorrelativo(pCorrelativo);
                }
                
                 
                if (compareObject(vFila2.getFechaFin(),pFechaUltimoProc)==false)
                {
                 
                vFila2.setFechaFin(pFechaUltimoProc);    
                    
                }
                
                if (compareObject(vFila2.getbaja(),(pBaja==true?"SI":"NO"))==false)
                {
                 
                vFila2.setbaja(pBaja==true?"SI":"NO");    
                    
                }
                
                
                if(compareObject(vFila2.getValor(),pValor)==false)            
                {
                vFila2.setValor(pValor);
                
                }
                
                if (compareObject(vFila2.getPorcentaje(),pPorcentaje)==false)
                {
                vFila2.setPorcentaje(pPorcentaje);    
                    
                }
                
                if (compareObject(vFila.getDescripcion(),pObservaciones)==false)
                {
                vFila.setDescripcion(pObservaciones);    
                    
                }
                
                if (compareObject(vFila2.getremovible(),pRemovible)==false)
                {
                vFila2.setremovible(pRemovible);                    
                }
                
                if(compareObject(vFila2.getModi(),pMod)==false)
                {                
                
                vFila2.setModi(pMod);    
                
                }
                
                this.getDBTransaction().commit();
    
            
            }    
            
        }
              
        return  vIdVariacion;    
    }
    
  
    /*
     * Metodo crear un nuevo ajuste
     */
    public Number nuevo_ajuste(Number pIdVariacion,Number pRegistroEmpl,Number pContrato,Number IdAjuste,Date pFechaInicio,Date pFechaFin,Number pValor,Number pPorcentaje,String pObservaciones,String pNivelAjuste){
       Number vIdVariacion;
        variacion_nominaRowImpl vFila;
        variacionDetAjusteRowImpl vFila2;
       
       if (IdAjuste==null){
           throw new JboException("Por favor seleccione el descuento.");
           
       }
       
        if (pFechaInicio==null){
            throw new JboException("Por favor ingrese la fecha de inicio.");
            
        }
        
        
        if (pNivelAjuste.equals("C") && pContrato==null)
        {
            
            throw new JboException("Por favor seleccione la plaza.");  
            
        }
        
        
        if (pIdVariacion==null)
        {
        
        vFila=(variacion_nominaRowImpl)this.createRow();        
        vFila.setDescripcion(pObservaciones);
        vFila.setRegistroEmpleado(pRegistroEmpl);
        
        if (pNivelAjuste.equals("C"))
           vFila.setIdContrato(pContrato);
        
        this.insertRow(vFila);
        
        vFila=(variacion_nominaRowImpl)this.getCurrentRow();
        vFila2=(variacionDetAjusteRowImpl)vFila.getsis_variacionDetAjuste().createRow();        
        vFila2.setvar_estado("ALTA");
        vFila2.setIdAjuste(IdAjuste);
        vFila2.setValor(pValor);
        vFila2.setPorcentaje(pPorcentaje);
        vFila2.setFechaInicio(pFechaInicio);
        vFila2.setFechaFin(pFechaFin);
        vFila2.setbaja("NO"); 
        vFila2.setremovible("SI");
        vFila2.setModi("SI");
        vFila2.setRenuncia("NO");
        
        vFila.getsis_variacionDetAjuste().insertRow(vFila2);
       
       
        
        try{ 
             this.getDBTransaction().commit();
            vIdVariacion=vFila.getIdVariacionNomina();
        
        }catch (Exception exp){
            exp.printStackTrace();
            vIdVariacion=null;
            this.getDBTransaction().rollback();   
            throw new JboException(utils.getSQLMensaje(exp));
        }
        
        }else{
            
            vIdVariacion=pIdVariacion;
            vFila=(variacion_nominaRowImpl)this.getCurrentRow();
           // vFila.getsis_variacionDetAjuste().getCurrentRow()
            vFila2=(variacionDetAjusteRowImpl)vFila.getsis_variacionDetAjuste().next();
            if (vFila.getIdVariacionNomina().compareTo(pIdVariacion)==0) // es el mismo para actualizar
            {
          
            if (compareObject(vFila2.getIdAjuste(),IdAjuste)==false){
                
                vFila2.setIdAjuste(IdAjuste);
            }
          
            
            if (compareObject(vFila2.getFechaInicio(),pFechaInicio)==false)
            {
                vFila2.setFechaInicio(pFechaInicio);
                
            }
             
            if (compareObject(vFila2.getFechaFin(),pFechaFin)==false)
            {
             
            vFila2.setFechaFin(pFechaFin);    
                
            }
            
            if(compareObject(vFila2.getValor(),pValor)==false)            
            {
            vFila2.setValor(pValor);
            
            }
            
            if (compareObject(vFila2.getPorcentaje(),pPorcentaje)==false)
            {
            vFila2.setPorcentaje(pPorcentaje);    
                
            }
            
            if (compareObject(vFila.getDescripcion(),pObservaciones)==false)
            {
            vFila.setDescripcion(pObservaciones);    
                
            }
            
            if (pNivelAjuste.equals("E"))
            {
                 if (vFila.getIdContrato()!=null)
                 vFila.setIdContrato(null);
            }else{
            
                if (compareObject(vFila.getIdContrato(),pContrato)==false)
                {
                vFila.setIdContrato(pContrato);    
                    
                }
                
                
            }
            
            this.getDBTransaction().commit();
          }    
        }
        
        
        return  vIdVariacion;
        
    }
    
 
    private boolean compareObject(Object pValor1,Object pValor2){
       boolean vResultado=true;

     if (pValor1!=null || pValor2!=null)
     {
       if ((pValor1!=null && pValor2==null) || (pValor1==null && pValor2!=null))
           vResultado=false;
       
       
       else if (!pValor1.toString().equals(pValor2.toString()))
           vResultado=false;
      
     }     
       return vResultado;
    }
 
    /*
     * Metodo para los cambios de igss
     */
    public void cambiar_iggs(Number pRegistroEmpl,Number IdAjuste,Date pFechaDoc,boolean pJubilacionIVS,String pObservaciones){
       
       
       if (IdAjuste == null){
           throw new JboException("Por favor seleccione el descuento.");
           
       }
       
       if (pFechaDoc == null){
           throw new JboException("Por favor ingrese la fecha");
       }
       
        
        variacion_nominaRowImpl vFila=(variacion_nominaRowImpl)this.createRow();
        variacionDetAjusteRowImpl vFila2;
        vFila.setDescripcion(pObservaciones);
        vFila.setRegistroEmpleado(pRegistroEmpl);
        
        this.insertRow(vFila);
        
        vFila=(variacion_nominaRowImpl)this.getCurrentRow();
        vFila2=(variacionDetAjusteRowImpl)vFila.getsis_variacionDetAjuste().createRow();        
    
        if (pJubilacionIVS==false) {    
        vFila2.setvar_estado("REEMPLAZO");
        }else{
        vFila2.setvar_estado("CAMBIO POR IVS");    
        }
        
        vFila2.setIdAjuste(IdAjuste);
        vFila2.setFechaInicio(pFechaDoc);
        vFila2.setbaja("NO"); 
        vFila2.setremovible("S");
        vFila2.setModi("S");
        vFila2.setRenuncia("NO");
        
        
        vFila.getsis_variacionDetAjuste().insertRow(vFila2);
        
        try{ 
             this.getDBTransaction().commit();             
             vFila.setIdEstado(utils.getNumberOracle("134")); //AUTORIZADO PARA QUE HAGA EL CAMBIO
             this.getDBTransaction().commit();
             
        }catch (Exception exp){
            exp.printStackTrace();
            this.getDBTransaction().rollback();   
            throw new JboException(utils.getSQLMensaje(exp));
        }
        
        
    }


    /**Gets the bind variable value for regEmpleado
     */
    public Number getregEmpleado() {
        return (Number)getNamedWhereClauseParam("regEmpleado");
    }

    /**Sets <code>value</code> for bind variable regEmpleado
     */
    public void setregEmpleado(Number value) {
        setNamedWhereClauseParam("regEmpleado", value);
    }

    /**Gets the bind variable value for pUsuario
     */
    public String getpUsuario() {
        return (String)getNamedWhereClauseParam("pUsuario");
    }

    /**Sets <code>value</code> for bind variable pUsuario
     */
    public void setpUsuario(String value) {
        setNamedWhereClauseParam("pUsuario", value);
    }
    
    
    public void consultar_manual(String pUsuario, Number pRegistroEmpl){
    
    
     this.setpUsuario(pUsuario);     
     this.setregEmpleado(pRegistroEmpl);
     this.setWhereClause("ingreso_manual='SI'");       
     this.executeQuery();
    
    } 
}
