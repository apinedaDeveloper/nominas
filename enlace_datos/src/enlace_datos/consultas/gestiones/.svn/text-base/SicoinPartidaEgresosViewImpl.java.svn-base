package enlace_datos.consultas.gestiones;

import enlace_datos.consultas.gestiones.common.SicoinPartidaEgresosView;

import enlace_datos.util.utils_DB;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import oracle.jbo.CSMessageBundle;
import oracle.jbo.SQLStmtException;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SicoinPartidaEgresosViewImpl extends ViewObjectImpl implements SicoinPartidaEgresosView {
    /**This is the default constructor (do not remove)
     */
    public SicoinPartidaEgresosViewImpl() {
    }
    /**Verifica si una partida sicoin ya existe
         * */
         public String getExistePartida(oracle.jbo.domain.Number pUnidadEjecutora,
                                        oracle.jbo.domain.Number pUnidadDesconcentrada,
                                        oracle.jbo.domain.Number pPrograma,
                                        oracle.jbo.domain.Number pSubPrograma,
                                        oracle.jbo.domain.Number pProyecto,
                                        oracle.jbo.domain.Number pActividad,
                                        oracle.jbo.domain.Number pObra,
                                        oracle.jbo.domain.Number pRenglon,
                                        oracle.jbo.domain.Number pGeografico,
                                        oracle.jbo.domain.Number pFuente,
                                        oracle.jbo.domain.Number pOrganismo,
                                        oracle.jbo.domain.Number pCorrelativo,
                                        String usuario){
            String[] val = validarCampos(pUnidadEjecutora,pUnidadDesconcentrada,pPrograma,pSubPrograma,pProyecto,pActividad,pObra,pRenglon,pGeografico,pFuente,pOrganismo,pCorrelativo);
            if (val[0].equals("true"))  {
                
                return "3|"+val[1];
            }
            
            String result = "no existe";
            String querry = "SELECT COUNT(1) as partida FROM SICOIN_PARTIDA_EGRESOS partida WHERE "
                            + " partida.UNIDAD_EJECUTORA = "+ pUnidadEjecutora.toString() +" AND"
                            + " partida.UNIDAD_DESCONCENTRADA = "+ pUnidadDesconcentrada.toString() +" AND"
                            + " partida.PROGRAMA = "+ pPrograma.toString() +" AND"
                            + " partida.SUBPROGRAMA = "+ pSubPrograma.toString() +" AND"
                            + " partida.PROYECTO = "+ pProyecto.toString() +" AND"
                            + " partida.ACTIVIDAD = "+ pActividad.toString() +" AND"
                            + " partida.OBRA = "+ pObra.toString() +" AND"
                            + " partida.RENGLON = "+ pRenglon.toString() +" AND"
                            + " partida.GEOGRAFICO = "+ pGeografico.toString() +" AND"
                            + " partida.FUENTE = "+ pFuente.toString() +" AND"
                            + " partida.ORGANISMO = "+ pOrganismo.toString() +" AND"
                            + " partida.CORRELATIVO = "+ pCorrelativo.toString();
             PreparedStatement cs = null;
             try  {
                 cs = this.getDBTransaction().createPreparedStatement(querry,1);
                 ResultSet result_doc = cs.executeQuery();
                 if (result_doc.next())  {
                     int cant = result_doc.getInt(1);
                     if (cant > 0)  {
                         result = "1|La partida ingresada ya existe.";
                     } else {
                         int add_partida = agregarPartida(pUnidadEjecutora,pUnidadDesconcentrada,pPrograma,pSubPrograma,pProyecto,pActividad,pObra,pRenglon,pGeografico,pFuente,pOrganismo,pCorrelativo,usuario);
                         if (add_partida == 1)  {
                            result = "2|Partida creada con exito.";
                         } else {
                             result = "3|Error, el formato de la partida no es valido, partida incorrecta.";
                         }
                         
                     }
                 }
             } catch (SQLException sqlException)  {
                 throw new SQLStmtException(CSMessageBundle.class, CSMessageBundle.EXC_SQL_EXECUTE_COMMAND, querry, sqlException);
             } finally  {
                 try {
                     cs.close();
                 }
                 catch (SQLException e) {
                     e.printStackTrace();
                 }
             }
             return result;
         }
        
        public String getNombrePartida(oracle.jbo.domain.Number pRenglon){
            String result = "<<PARTIDA INCORRECTA>>";
            String querry = "SELECT renglon, nombre FROM SICOIN_RENGLON WHERE renglon = " + pRenglon.toString();
            PreparedStatement cs = null;
            try  {
                cs = this.getDBTransaction().createPreparedStatement(querry,1);
                ResultSet result_doc = cs.executeQuery();
                if (result_doc.next())  {
                    result = result_doc.getString("NOMBRE");
                }
                
            } catch (SQLException sqlException)  {
                throw new SQLStmtException(CSMessageBundle.class, CSMessageBundle.EXC_SQL_EXECUTE_COMMAND, querry, sqlException);
            } finally  {
                try {
                    cs.close();
                }
                catch (SQLException e) {
                    e.printStackTrace();
                }
            }
            return result;
        }
        
        private int agregarPartida(oracle.jbo.domain.Number pUnidadEjecutora,
                                       oracle.jbo.domain.Number pUnidadDesconcentrada,
                                       oracle.jbo.domain.Number pPrograma,
                                       oracle.jbo.domain.Number pSubPrograma,
                                       oracle.jbo.domain.Number pProyecto,
                                       oracle.jbo.domain.Number pActividad,
                                       oracle.jbo.domain.Number pObra,
                                       oracle.jbo.domain.Number pRenglon,
                                       oracle.jbo.domain.Number pGeografico,
                                       oracle.jbo.domain.Number pFuente,
                                       oracle.jbo.domain.Number pOrganismo,
                                       oracle.jbo.domain.Number pCorrelativo,
                                       String usuario){

            String querry = "INSERT INTO SIIF.SICOIN_PARTIDA_EGRESOS(" +
                            " ID_PARTIDA_EGRESOS," +
                            " UNIDAD_EJECUTORA," +
                            " UNIDAD_DESCONCENTRADA," +
                            " PROGRAMA," +
                            " SUBPROGRAMA," +
                            " PROYECTO," +
                            " ACTIVIDAD," +
                            " OBRA," +
                            " RENGLON," +
                            " GEOGRAFICO," +
                            " FUENTE," +
                            " ORGANISMO," +
                            " CORRELATIVO," +
                            " NOMBRE," +
                            " CREADO_POR" +
                            " )" +
                            " VALUES(" +
                            " NULL," +
                            " " + pUnidadEjecutora.toString() + "," +
                            " " + pUnidadDesconcentrada.toString() + "," +
                            " " + pPrograma.toString() + "," +
                            " " + pSubPrograma.toString() + "," +
                            " " + pProyecto.toString() + "," +
                            " " + pActividad.toString() + "," +
                            " " + pObra.toString() + "," +
                            " " + pRenglon.toString() + "," +
                            " " + pGeografico.toString() + "," +
                            " " + pFuente.toString() + "," +
                            " " + pOrganismo.toString() + "," +
                            " " + pCorrelativo.toString() + "," +
                            " (SELECT renglon.NOMBRE FROM SICOIN_RENGLON renglon WHERE renglon.RENGLON = " + pRenglon.toString() + ")," +
                            " '" + usuario + "'" +
                            " )";
            return utils_DB.getEjecutarConsulta(this.getDBTransaction(),querry);
        }
        
        private String[] validarCampos( oracle.jbo.domain.Number pUnidadEjecutora,
                                        oracle.jbo.domain.Number pUnidadDesconcentrada,
                                        oracle.jbo.domain.Number pPrograma,
                                        oracle.jbo.domain.Number pSubPrograma,
                                        oracle.jbo.domain.Number pProyecto,
                                        oracle.jbo.domain.Number pActividad,
                                        oracle.jbo.domain.Number pObra,
                                        oracle.jbo.domain.Number pRenglon,
                                        oracle.jbo.domain.Number pGeografico,
                                        oracle.jbo.domain.Number pFuente,
                                        oracle.jbo.domain.Number pOrganismo,
                                        oracle.jbo.domain.Number pCorrelativo){
            String[] result = new String[2];
            result[0] = "false"; result[1] = "";
            String msg = "";
            int cont = 0;
            if (pUnidadEjecutora == null || pUnidadEjecutora.toString().equals(""))  {
                cont = cont + 1;
                result[0] = "true";
                result[1] = result[1] + ". El valor para la Unidad Ejecutora es null, se debe ingresar un valor.\n";
            }
            if (pUnidadDesconcentrada == null || pUnidadDesconcentrada.toString().equals(""))  {
                cont = cont + 1;
                result[0] = "true";
                result[1] = result[1] + ". El valor para la Unidad Desconcentrada es null, se debe ingresar un valor.\n";
            }
            if (pPrograma == null || pPrograma.toString().equals(""))  {
                cont = cont + 1;
                result[0] = "true";
                result[1] = result[1] + ". El valor para el Programa es null, se debe ingresar un valor.\n";
            }
            if (pSubPrograma == null || pSubPrograma.toString().equals(""))  {
                cont = cont + 1;
                result[0] = "true";
                result[1] = result[1] + ". El valor para el Sub Programa es null, se debe ingresar un valor.\n";
            }
            if (pProyecto == null || pProyecto.toString().equals(""))  {
                cont = cont + 1;
                result[0] = "true";
                result[1] = result[1] + ". El valor para el Proyecto es null, se debe ingresar un valor.\n";
            }
            if (pActividad == null || pActividad.toString().equals(""))  {
                cont = cont + 1;
                result[0] = "true";
                result[1] = result[1] + ". El valor para la Actividad es null, se debe ingresar un valor.\n";
            }
            if (pObra == null || pObra.toString().equals(""))  {
                cont = cont + 1;
                result[0] = "true";
                result[1] = result[1] + ". El valor para la Obra es null, se debe ingresar un valor.\n";
            }
            if (pRenglon == null || pRenglon.toString().equals(""))  {
                cont = cont + 1;
                result[0] = "true";
                result[1] = result[1] + ". El valor para el Renglon es null, se debe ingresar un valor.\n";
            }
            if (pGeografico == null || pGeografico.toString().equals(""))  {
                cont = cont + 1;
                result[0] = "true";
                result[1] = result[1] + ". El valor para el Geografico es null, se debe ingresar un valor.\n";
            }
            if (pFuente == null || pFuente.toString().equals(""))  {
                cont = cont + 1;
                result[0] = "true";
                result[1] = result[1] + ". El valor para la Fuente es null, se debe ingresar un valor.\n";
            }
            if (pOrganismo == null || pOrganismo.toString().equals(""))  {
                cont = cont + 1;
                result[0] = "true";
                result[1] = result[1] + ". El valor para el Organismo es null, se debe ingresar un valor.\n";
            }
            if (pCorrelativo == null || pCorrelativo.toString().equals(""))  {
                cont = cont + 1;
                result[0] = "true";
                result[1] = result[1] + ". El valor para el Correlativo es null, se debe ingresar un valor.\n";
            }
            return result;
        }
        
        public String getPartidaFormato(oracle.jbo.domain.Number pUnidadEjecutora,
                                        oracle.jbo.domain.Number pUnidadDesconcentrada,
                                        oracle.jbo.domain.Number pPrograma,
                                        oracle.jbo.domain.Number pSubPrograma,
                                        oracle.jbo.domain.Number pProyecto,
                                        oracle.jbo.domain.Number pActividad,
                                        oracle.jbo.domain.Number pObra,
                                        oracle.jbo.domain.Number pRenglon,
                                        oracle.jbo.domain.Number pGeografico,
                                        oracle.jbo.domain.Number pFuente,
                                        oracle.jbo.domain.Number pOrganismo,
                                        oracle.jbo.domain.Number pCorrelativo){
            String result = "";
            String querry = "SELECT" +
                            " partida_vista.nombre || ' - ' || partida_vista.partida AS partida" +
                            " FROM SICOIN_PARTIDA_EGRESOS_VIEW partida_vista WHERE " +
                            " partida_vista.unidad_ejecutora = " + pUnidadEjecutora + " and " +
                            " partida_vista.unidad_desconcentrada = " + pUnidadDesconcentrada + " and " +
                            " partida_vista.programa = " + pPrograma + " and " +
                            " partida_vista.subprograma = " + pSubPrograma + " and " +
                            " partida_vista.proyecto = " + pProyecto + " and " +
                            " partida_vista.actividad = " + pActividad + " and " +
                            " partida_vista.obra = " + pObra + " and " +
                            " partida_vista.renglon = " + pRenglon + " and " +
                            " partida_vista.geografico = " + pGeografico + " and " +
                            " partida_vista.fuente = " + pFuente + " and " +
                            " partida_vista.organismo = " + pOrganismo + " and " +
                            " partida_vista.correlativo = " + pCorrelativo;
            PreparedStatement cs = null;
            try  {
                cs = this.getDBTransaction().createPreparedStatement(querry,1);
                ResultSet result_doc = cs.executeQuery();
                if (result_doc.next())  {
                    result = result_doc.getString("PARTIDA");
                }
                
            } catch (SQLException sqlException)  {
                throw new SQLStmtException(CSMessageBundle.class, CSMessageBundle.EXC_SQL_EXECUTE_COMMAND, querry, sqlException);
            } finally  {
                try {
                    cs.close();
                }
                catch (SQLException e) {
                    e.printStackTrace();
                }
            }
            return result;
        }
}
