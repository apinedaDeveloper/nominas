package enlace_datos.consultas.gestiones.contrato;

import enlace_datos.consultas.gestiones.contrato.common.unidades_ejec;

import enlace_datos.util.utils;
import enlace_datos.util.utils_DB;

import java.sql.ResultSet;

import java.sql.SQLException;

import oracle.jbo.RowIterator;
import oracle.jbo.domain.Number;
import oracle.jbo.server.DBTransaction;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
import oracle.jbo.uicli.binding.JUIteratorBinding;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class unidades_ejecImpl extends ViewObjectImpl implements unidades_ejec {
    /**This is the default constructor (do not remove)
     */
    public unidades_ejecImpl() {
    }

    /**Gets the bind variable value for id_depe
     */
    public Number getid_depe() {
        return (Number)getNamedWhereClauseParam("id_depe");
    }

    /**Sets <code>value</code> for bind variable id_depe
     */
    public void setid_depe(Number value) {
        setNamedWhereClauseParam("id_depe", value);
    }

    /**Gets the bind variable value for pUsuario
     */
    public String getpUsuario() {
        return (String)getNamedWhereClauseParam("pUsuario");
    }

    /**Sets <code>value</code> for bind variable pUsuario
     */
    public void setpUsuario(String value) {
        setNamedWhereClauseParam("pUsuario", value);
    }
    
    //metodo utilizado para seleccionar automaticamente la unidad que se tenia asigndo dentro de un anexo
    //cuando se quiere modificar dicho anexo.
    public void obtenerUnidad( Number varPartida){
    // System.out.println("yo soy la partida nO. "+ varPartida);
    String consulta = "select partida1.ID_DEPENDENCIA, partida1.ID_UNIDAD, partida1.ID_PROGRAMA from sis_partida partida1" + 
    "  where partida1.id_partida = " + varPartida;
    ResultSet valResultado = utils_DB.getEjecutarQuerry(this.getDBTransaction(),consulta,1);
    Object varDependencia = 0;
    Object varPrograma = 0;
    Object varUnidad = 0;
    int tamano = 0;
    //System.out.println("consulta  "+ consulta);
    Object fila[] = this.getAllRowsInRange();    
    try {
        valResultado.next();
        varDependencia = valResultado.getObject(1);
        varUnidad = valResultado.getObject(2);
        varPrograma = valResultado.getObject(3);
        //System.out.println("entre al try ...");
        //Código agregado por Américo Pineda el 20-04-2017
        if (fila.length <= 0) {
            this.setid_depe(new Number(varDependencia.toString()));
            this.executeQuery();
            fila = this.getAllRowsInRange();
        }
        //fin código agregado
     }
     catch(Exception exep) {
        exep.printStackTrace();
     }
     //System.out.println("la dependencia es "+ varDependencia);       
     //System.out.println("la unidad es " + varUnidad);
     //System.out.println("el programa es "+ varPrograma);
     while( tamano < fila.length) {
            //System.out.println(" n se "+ Var[tamano].toString());
            unidades_ejecRowImpl auxVista;
            auxVista = (unidades_ejecRowImpl) fila[tamano];
            if(auxVista.getIdDependencia().compareTo(utils.getNumberOracle(varDependencia)) ==0 && auxVista.getIdPrograma().compareTo(utils.getNumberOracle(varPrograma))==0 && auxVista.getIdUnidad().compareTo(utils.getNumberOracle(varUnidad))==0 ){
                this.setCurrentRow(this.getAllRowsInRange()[tamano]);
                //vIterBinding.getViewObject().setCurrentRow( vIterBinding.getViewObject().getAllRowsInRange()[tamano]);
                tamano = fila.length;
                //System.out.println("silo encontre heeeeee");
            }
                
            tamano = tamano + 1;
        }
        
    
    }
    public void obtenerUnidad2(Number pDependencia,Number pPrograma,Number pUnidad,String pUsuario){
        String str_consulta = "";
        str_consulta = "id_programa = "+pPrograma + " and id_unidad =  " + pUnidad;
        this.setWhereClause(str_consulta);
        this.setpUsuario(pUsuario);
        this.setid_depe(pDependencia);
        this.executeQuery();
        
    }

    /**executeQueryForCollection - overridden for custom java data source support.
     */
    protected void executeQueryForCollection(Object qc, Object params[], int noUserParams) {super.executeQueryForCollection(qc, params, noUserParams);
     //lleva los parametros de la consulta en un viewobject
    }

    /**hasNextForCollection - overridden for custom java data source support.
     */
    protected boolean hasNextForCollection(Object qc) {
        boolean bRet = super.hasNextForCollection(qc);
        return bRet;
    }

    /**createRowFromResultSet - overridden for custom java data source support.
     */
    protected ViewRowImpl createRowFromResultSet(Object qc, 
                                                 ResultSet resultSet) {
        ViewRowImpl value = super.createRowFromResultSet(qc, resultSet);
        return value;
    }

    /**getEstimatedRowCount - overridden for custom java data source support.
     */
    public long getEstimatedRowCount() {
        long value = super.getEstimatedRowCount();
        return value;
    }
    
    public void resetUnidad() {
        //String str_consulta = null;
        this.setWhereClause(null);
        this.executeQuery();
    }
}
