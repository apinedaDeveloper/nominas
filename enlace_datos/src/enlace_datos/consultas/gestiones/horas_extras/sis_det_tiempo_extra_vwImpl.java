package enlace_datos.consultas.gestiones.horas_extras;

import enlace_datos.consultas.gestiones.anexo.sis_movimiento_plazaRowImpl;


import enlace_datos.consultas.gestiones.horas_extras.common.sis_det_tiempo_extra_vw;

import enlace_datos.util.utils;

import java.sql.ResultSet;

import java.sql.SQLException;

import oracle.jbo.NameValuePairs;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class sis_det_tiempo_extra_vwImpl extends ViewObjectImpl implements sis_det_tiempo_extra_vw {
    /**This is the default constructor (do not remove)
     */
     
    public sis_det_tiempo_extra_vwImpl() {
    }
    
  //  public void crear_detalle (Object vFecha, String vActividad, String vHoraIni, String vHoraFin,Date vFechaFin){
     public void crear_detalle (String vFecha, String vActividad, String vHoraIni, String vHoraFin,Date vFechaFin){
        sis_det_tiempo_extra_vwRowImpl  filaDetalle;
        oracle.jbo.domain.Number vIdTiempoExtra;
        vActividad = "Idem"; //lleno el campo de la actividad diciendo que es lo mismo en el rango seleccionado.
        NameValuePairs datos;
        datos = new NameValuePairs();
        datos.setAttribute("Fecha",utils.getFechaOracle(vFecha.toString()));
        datos.setAttribute("DescActividad",vActividad);
        datos.setAttribute("hrFictisia1",vHoraIni);
        datos.setAttribute("hrFictisia2",vHoraFin);
       // filaDetalle = (sis_det_tiempo_extra_vwRowImpl) this.createAndInitRow(datos);
       // this.insertRow(filaDetalle);
        
        Date auxFecha = null;
        try {
            //auxFecha = new Date(utils . vFecha.getValue().getTime()+24+60+60+1000)
             auxFecha = new Date(new java.sql.Timestamp(utils.getFechaOracle(vFecha.toString()).getValue().getTime()+(24*60*60*1000)));
            
            //new Date(new Timestamp(1318226400000))
           // utils.getFechaOracle("")
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        vIdTiempoExtra=(oracle.jbo.domain.Number )this.getCurrentRow().getAttribute("IdDetHoraExtra");
        
        while (auxFecha.compareTo(vFechaFin)<= 0){
        
            vIdTiempoExtra=vIdTiempoExtra.add(1);
            datos.setAttribute("IdDetHoraExtra",vIdTiempoExtra);
            datos.setAttribute("Fecha",auxFecha);
            filaDetalle = (sis_det_tiempo_extra_vwRowImpl) this.createAndInitRow(datos);
           // vIdTiempoExtra=filaDetalle.getIdDetHoraExtra();
           // filaDetalle.setIdDetHoraExtra(filaDetalle.getIdDetHoraExtra().subtract(5));
            
            this.insertRow(filaDetalle);
            //filaDetalle.getHoraInicio()
            try {
                auxFecha = new Date(new java.sql.Timestamp(auxFecha.getValue().getTime()+(24*60*60*1000)));
            } catch (Exception e) {
                // TODO
            }
            
        }
    }

    /**executeQueryForCollection - overridden for custom java data source support.
     */
    protected void executeQueryForCollection(Object qc, Object params[], int noUserParams) {super.executeQueryForCollection(qc, params, noUserParams);
    }

    /**hasNextForCollection - overridden for custom java data source support.
     */
    protected boolean hasNextForCollection(Object qc) {
        boolean bRet = super.hasNextForCollection(qc);
        return bRet;
    }

    /**createRowFromResultSet - overridden for custom java data source support.
     */
    protected ViewRowImpl createRowFromResultSet(Object qc, 
                                                 ResultSet resultSet) {
        ViewRowImpl value = super.createRowFromResultSet(qc, resultSet);
        return value;
    }

    /**getEstimatedRowCount - overridden for custom java data source support.
     */
    public long getEstimatedRowCount() {
        long value = super.getEstimatedRowCount();
        return value;
    }
}
