package enlace_datos.consultas.gestiones.empleado;

import enlace_datos.consultas.gestiones.empleado.common.SisSueldosEmpl_ISR_vw;

import java.sql.ResultSet;

import oracle.jbo.Row;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SisSueldosEmpl_ISR_vwImpl extends ViewObjectImpl implements SisSueldosEmpl_ISR_vw {
    /**This is the default constructor (do not remove)
     */
    Number vTotalBono;
    Number vTotalBonoSA;
    Number vTotalNominalSA;
    Number vTotalNominal;
    Number vTotalISRSA;
    Number vTotalISR;
    Number vTotalPlan;
    Number vTotalPlanSA;
    Number vTotalJudi;
    Number vTotalJudiSA;
    Number vTotalLiquido;
    Number vTotalLiquidoSA;
    Number vTotalDesc;
    Number vTotalDescSA;
    Number vTotalIgss;
    Number vTotalIgssSA;
    
    
    public SisSueldosEmpl_ISR_vwImpl() {
    }

    /**Gets the bind variable value for pRegistroEmpleado
     */
    public Number getpRegistroEmpleado() {
        return (Number)getNamedWhereClauseParam("pRegistroEmpleado");
    }

    /**Sets <code>value</code> for bind variable pRegistroEmpleado
     */
    public void setpRegistroEmpleado(Number value) {
        setNamedWhereClauseParam("pRegistroEmpleado", value);
    }

    /**Gets the bind variable value for pAnio
     */
    public Number getpAnio() {
        return (Number)getNamedWhereClauseParam("pAnio");
    }

    /**Sets <code>value</code> for bind variable pAnio
     */
    public void setpAnio(Number value) {
        setNamedWhereClauseParam("pAnio", value);
    }
    
    
    public Number getTotalNominalSA()
    {
    
        Row [] vFilas;
        vFilas=this.getAllRowsInRange();
        vTotalNominal=new Number(0);   
        vTotalNominalSA=new Number(0);   
        vTotalBonoSA=new Number(0);   
        vTotalBono=new Number(0);   
        this.vTotalISR=new Number(0); 
        this.vTotalISRSA=new Number(0); 
        this.vTotalJudi=new Number(0); 
        this.vTotalJudiSA=new Number(0); 
        this.vTotalPlan=new Number(0); 
        this.vTotalPlanSA=new Number(0); 
        this.vTotalLiquido=new Number(0); 
        this.vTotalLiquidoSA=new Number(0); 
        this.vTotalDesc=new Number(0); 
        this.vTotalDescSA=new Number(0); 
        this.vTotalIgss=new Number(0); 
        this.vTotalIgssSA=new Number(0); 
        
       try
       {
           
       
        if (vFilas!=null && vFilas.length>0)
        {
            for (int i=0; i<vFilas.length;i++)
            {
            
                vTotalNominalSA=vTotalNominalSA.add((Number)vFilas[i].getAttribute("Nominal"));
                vTotalBonoSA=vTotalBonoSA.add((Number)vFilas[i].getAttribute("TotalBono"));
                vTotalISRSA=vTotalISRSA.add((Number)vFilas[i].getAttribute("Totalisr"));
                vTotalJudiSA=vTotalJudiSA.add((Number)vFilas[i].getAttribute("Totaljudiciales"));
                vTotalPlanSA=vTotalPlanSA.add((Number)vFilas[i].getAttribute("Totalplan"));
                vTotalLiquidoSA=vTotalLiquidoSA.add((Number)vFilas[i].getAttribute("Liquido"));
                vTotalDescSA=vTotalDescSA.add((Number)vFilas[i].getAttribute("TotalDescuento"));
                vTotalIgssSA=vTotalIgssSA.add((Number)vFilas[i].getAttribute("Totaligss"));

              if (vFilas[i].getAttribute("FechaAnulacion")!=null)
              {
                  vTotalNominal=vTotalNominal.add((Number)vFilas[i].getAttribute("Nominal"));
                  vTotalBono=vTotalBono.add((Number)vFilas[i].getAttribute("TotalBono"));
                  vTotalISR=vTotalISR.add((Number)vFilas[i].getAttribute("Totalisr"));
                  vTotalJudi=vTotalJudi.add((Number)vFilas[i].getAttribute("Totaljudiciales"));
                  vTotalPlan=vTotalPlan.add((Number)vFilas[i].getAttribute("Totalplan"));
                  vTotalLiquido=vTotalLiquido.add((Number)vFilas[i].getAttribute("Liquido"));
                  vTotalDesc=vTotalDesc.add((Number)vFilas[i].getAttribute("TotalDescuento"));
                  vTotalIgss=vTotalIgss.add((Number)vFilas[i].getAttribute("Totaligss"));
                  
              }
            }                               
            
        }
       }catch(Exception exep)
       {
           vTotalNominal=new Number(0);
       }
        
    return vTotalNominalSA;
    }
   
public Number getTotalNominal(){
        return vTotalNominal;
 }
 
 public Number getTotalNominalDiff(){
            return vTotalNominalSA.subtract(vTotalNominal);
 }
   
public Number getTotalBonoSA(){
    return vTotalBonoSA;
}
   
public Number getTotalBono(){
        return vTotalBono;
 }
    
    public Number getTotalBonoDiff(){
               return vTotalBonoSA.subtract(vTotalBono);
    }
    
public Number getTotalISRSA(){
        return vTotalISRSA;
 }
       
 public Number getTotalISR(){
          return vTotalISR;
  }
            
    public Number getTotalISRDiff(){
               return vTotalISRSA.subtract(vTotalISR);
    }
    
    public Number getTotalJudiSA(){
            return vTotalJudiSA;
     }
           
     public Number getTotalJudi(){
              return vTotalJudi;
      }
    public Number getTotalJudiDiff(){
               return vTotalJudiSA.subtract(vTotalJudi);
    }
    public Number getTotalPlanSA(){
            return vTotalPlanSA;
     }
           
     public Number getTotalPlan(){
              return vTotalPlan;
      }
    public Number getTotalPlanDiff(){
               return vTotalPlanSA.subtract(vTotalPlan);
    }     
      
    public Number getTotalLiquidoSA(){
            return vTotalLiquidoSA;
     }
           
     public Number getTotalLiquido(){
              return vTotalLiquido;
      }    

    public Number getTotalLiquidoDiff(){
               return vTotalLiquidoSA.subtract(vTotalLiquido);
    }    
      
    public Number getTotalDescSA(){
            return vTotalDescSA;
     }
           
     public Number getTotalDesc(){
              return vTotalDesc;
      }    
    
    public Number getTotalDescDiff(){
               return vTotalDescSA.subtract(vTotalDesc);
    }                       
    public Number getTotalIgssDiff(){
               return vTotalIgssSA.subtract(vTotalIgss);
    }    
    public Number getTotalIgssSA(){
            return vTotalIgssSA;
     }
           
     public Number getTotalIgss(){
              return vTotalIgss;
      }


    /**executeQueryForCollection - overridden for custom java data source support.
     */
    protected void executeQueryForCollection(Object qc, Object params[], int noUserParams) {
      super.executeQueryForCollection(qc, params, noUserParams);
    }

    /**hasNextForCollection - overridden for custom java data source support.
     */
    protected boolean hasNextForCollection(Object qc) {
        boolean bRet = super.hasNextForCollection(qc);
        return bRet;
    }

    /**createRowFromResultSet - overridden for custom java data source support.
     */
    protected ViewRowImpl createRowFromResultSet(Object qc, 
                                                 ResultSet resultSet) {
        ViewRowImpl value = super.createRowFromResultSet(qc, resultSet);
        //this.getFetchedRowCount()
        return value;
    }

    /**getEstimatedRowCount - overridden for custom java data source support.
     */
    public long getEstimatedRowCount() {
        long value = super.getEstimatedRowCount();
        return value;
    }
}
