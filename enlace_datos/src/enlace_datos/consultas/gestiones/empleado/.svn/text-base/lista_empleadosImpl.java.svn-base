package enlace_datos.consultas.gestiones.empleado;

import com.sun.java.util.collections.List;


import enlace_datos.consultas.gestiones.empleado.common.lista_empleados;

import enlace_datos.util.utils;
import enlace_datos.util.utils_DB;

import java.sql.ResultSet;

import oracle.jbo.JboException;
import oracle.jbo.NameValuePairs;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class lista_empleadosImpl extends ViewObjectImpl implements lista_empleados {
    /**This is the default constructor (do not remove)
     */
    public lista_empleadosImpl() {
    }


    public void ConsultaEmpleado(Number pRegEmpleado,String pNombre1,String pNombre2,String pApellido1,String pApellido2,Number pRegCedula,Number pCui){
       String str_querry="",str_conector="",str_param=null;
       Number num_param;
       
       num_param=pRegEmpleado;      
       
        if (num_param!=null){
          str_querry="registro_empleado = "+num_param;  
          str_conector= " or ";
        }
       
       str_param=pNombre1;
       
       if (str_param!=null&&str_param.length()>1){
        //str_querry=str_querry+str_conector+"upper(nombre1) LIKE '"+str_param.toUpperCase().trim()+"%'";  
        str_querry = str_querry + str_conector; 
        str_querry += "translate(upper(nombre1),'ÁÉÍÓÚ','AEIOU') LIKE translate(upper('" + str_param.toUpperCase().trim() + "%'),'ÁÉÍÓÚ','AEIOU')";
        str_conector= " and ";
       }
       
       str_param=pNombre2;
       
       if (str_param!=null&&str_param.length()>1){
         //str_querry=str_querry + str_conector+"upper(nombre2) LIKE '"+str_param.toUpperCase().trim()+"%'";  
        str_querry = str_querry + str_conector; 
        str_querry += "translate(upper(nombre2),'ÁÉÍÓÚ','AEIOU') LIKE translate(upper('" + str_param.toUpperCase().trim() + "%'),'ÁÉÍÓÚ','AEIOU')";
        str_conector= " and ";
       }
       
       str_param=pApellido1;
       
       if (str_param!=null&&str_param.length()>1){
         //str_querry=str_querry + str_conector+"upper(apellido1) LIKE '"+str_param.toUpperCase().trim()+"%'";  
        str_querry = str_querry + str_conector; 
        str_querry += "translate(upper(apellido1),'ÁÉÍÓÚ','AEIOU') LIKE translate(upper('" + str_param.toUpperCase().trim() + "%'),'ÁÉÍÓÚ','AEIOU')";
        str_conector= " and ";
       }
       
       str_param=pApellido2;
       
       if (str_param!=null&&str_param.length()>1){
        //str_querry=str_querry + str_conector+"upper(apellido2) LIKE '"+str_param.toUpperCase().trim()+"%'";  
        str_querry = str_querry + str_conector; 
        str_querry += "translate(upper(apellido2),'ÁÉÍÓÚ','AEIOU') LIKE translate(upper('" + str_param.toUpperCase().trim() + "%'),'ÁÉÍÓÚ','AEIOU')";
        str_conector= " and ";
       }
       
       num_param=pRegCedula;
       
       if (num_param!=null){
         str_querry=str_querry + str_conector+"registro_cedula = "+num_param;
         str_conector= " and ";
       }  
  
       num_param=pCui;
  
       if (num_param!=null){
         str_querry=str_querry + str_conector+"cui = '"+num_param+"'";
         str_conector= " and ";
       }  
       //System.out.println(str_querry); 
       if (str_querry.length()>1){  
       this.setWhereClause(str_querry);
       this.setpEstado("1");
       this.executeQuery(); 
       } 
   }

    /**executeQueryForCollection - overridden for custom java data source support.
     */
    protected void executeQueryForCollection(Object qc, Object params[], int noUserParams) {

      super.executeQueryForCollection(qc, params, noUserParams);    
//       Object[] bt;
 //         bt=this.getParametersAsStorageTypes();
          
    }

    /**hasNextForCollection - overridden for custom java data source support.
     */
    protected boolean hasNextForCollection(Object qc) {
        boolean bRet = super.hasNextForCollection(qc);
        return bRet;
    }

    /**createRowFromResultSet - overridden for custom java data source support.
     */
    protected ViewRowImpl createRowFromResultSet(Object qc, 
                                                 ResultSet resultSet) {
        ViewRowImpl value = super.createRowFromResultSet(qc, resultSet);
        return value;
    }

    /**getEstimatedRowCount - overridden for custom java data source support.
     */
    public long getEstimatedRowCount() {
        long value = super.getEstimatedRowCount();
        return value;
    }

    /**Gets the bind variable value for pEstado
     */
    public String getpEstado() {
        return (String)getNamedWhereClauseParam("pEstado");
    }

    /**Sets <code>value</code> for bind variable pEstado
     */
    public void setpEstado(String value) {
        setNamedWhereClauseParam("pEstado", value);
    }
    
    public void asignacionRegPer(){
        
       int vResul; 
       lista_empleadosRowImpl vFila=(lista_empleadosRowImpl)this.getCurrentRow();
       NameValuePairs vParametros;
       vParametros=new NameValuePairs();
        
       vResul=utils_DB.getEjecutarConsulta(this.getDBTransaction(),"update sis_empleado set id_estado=(select id_estado from sis_estado_empleado_vw where nombre='ASIGNACION REGISTRO')\n" + 
       "where registro_empleado="+vFila.getRegistroEmpleado());

       if (vResul>0)
       {
         vParametros.setAttribute("1",vFila.getRegistroEmpleado());
         vParametros.setAttribute("2",0);
         vParametros.setAttribute("3",5);
         vParametros.setAttribute("4",utils.getAuthUser(this.getDBTransaction()));        
         utils_DB.ejecutarProcedimiento(this.getDBTransaction(),"sis_pkg_procs.ASIGNAR_REGISTRO_EMPL(?,?,?,?)",vParametros);         
         this.getDBTransaction().commit();
         
       }else
       {
         this.getDBTransaction().rollback();
         new JboException("Ha ocurrido un error en la petición.");   
           
       }
       
       
       
    }
}
