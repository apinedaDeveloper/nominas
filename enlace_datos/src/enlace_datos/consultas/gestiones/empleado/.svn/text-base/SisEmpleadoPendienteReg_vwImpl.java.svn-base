package enlace_datos.consultas.gestiones.empleado;


import enlace_datos.consultas.gestiones.empleado.common.SisEmpleadoPendienteReg_vw;

import enlace_datos.util.utils;
import enlace_datos.util.utils_DB;

import java.util.ArrayList;

import oracle.jbo.JboException;
import oracle.jbo.NameValuePairs;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.domain.Number;
import oracle.jbo.server.DBTransaction;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SisEmpleadoPendienteReg_vwImpl extends ViewObjectImpl implements SisEmpleadoPendienteReg_vw {
    /**This is the default constructor (do not remove)
     */
    public SisEmpleadoPendienteReg_vwImpl() {
    }
    
    
    public String CambiarRegistro(Number pRegistro, Number pRegistroAnt, String pOpcion){
        
        NameValuePairs vParametros=new NameValuePairs();
        String vResultado="";
        Object vConsulta;
        boolean vResultado1;
        
        
        if (pRegistro==null){
            
            throw new JboException("Por favor seleccione una fila.");   
        }
        
        if ((pOpcion.equals("2") || pOpcion.equals("3")) &&  pRegistroAnt==null ){
            
           throw new JboException("Por favor ingrese el registro de empleado."); 
        }
        
        if (pOpcion.equals("1")) { // Asignacion de un nuevo registro
            vParametros.setAttribute("1",pRegistro);
            vParametros.setAttribute("2",null);
            vParametros.setAttribute("3",pOpcion);
            
        }else if (pOpcion.equals("2")){ // No se le asigna un registro de empleado nuevo sin actualizacion
         
         vParametros.setAttribute("1",pRegistro);
         vParametros.setAttribute("2",pRegistroAnt);
         vParametros.setAttribute("3",pOpcion);
            
        }else if (pOpcion.equals("3")){ // No se le asigna un registro de empleado nuevo
         
         vParametros.setAttribute("1",pRegistro);
         vParametros.setAttribute("2",pRegistroAnt);
         vParametros.setAttribute("3",pOpcion);
            
        }
        
        vParametros.setAttribute("4",utils.getAuthUser(this.getDBTransaction()));
        
        if (!utils_DB.ejecutarProcedimiento(this.getDBTransaction(),"sis_pkg_procs.ASIGNAR_REGISTRO_EMPL(?,?,?,?)",vParametros)) 
        {
            this.getDBTransaction().rollback();
            throw new JboException("Ha ocurrido un error al asignar el registro de empleado!");
            
        }

        /*
         *  Para el plan de prestaciones 
         */
         
        vConsulta=utils_DB.getEjecutarQuerry(this.getDBTransaction(),"select registro_empleado from sis_asignacion_regper where registro_temporal="+pRegistro);
        
        vParametros=new NameValuePairs();
        vParametros.setAttribute("1",vConsulta);
        vParametros.setAttribute("2",(Boolean)this.getCurrentRow().getAttribute("PlanPrestaciones")==true?new Number(1):new Number(0));
        vParametros.setAttribute("3",utils.getAuthUser(this.getDBTransaction()));

        if (utils_DB.ejecutarProcedimiento(this.getDBTransaction(),"sis_pkg_procs.PARAMETRIZAR_PLAN_PRESTACIONES(?,?,?,null)",vParametros))
        {
       
        this.getDBTransaction().commit();
        
        }else{
            
        this.getDBTransaction().rollback();
        throw new JboException("Ha ocurrido un error!");
        }
        

        if (pOpcion.equals("1")) { // Asignacion de un nuevo registro
         
          vConsulta=utils_DB.getEjecutarQuerry(this.getDBTransaction(),"select registro_empleado||' a la persona '||nombrecompleto as datos from sis_asignacion_regper where registro_temporal="+pRegistro);
         
         if (vConsulta!=null)
         {
         
          vResultado="Se ha asignado el registro de personal: "+vConsulta.toString();
           
             
         }
         
        }else if (pOpcion.equals("2")){ // No se le asigna un registro de empleado nuevo
         
          // vResultado="Proceso ejecutado exitosamente ";
           vResultado="Se ha asignado exitosamente el registro de personal: "+pRegistroAnt;
            
        }else if (pOpcion.equals("3")){ // No se le asigna un registro de empleado nuevo pero se actualiza
         
           vResultado="Se ha actualizado exitosamente el registro de personal: "+pRegistroAnt;
              
        }

        
        return vResultado;
    }
    
    
   public void actualizarCorreoIns(String pIdReg,String pRegistro,String pCorreo,String pOpcion){
       
       if (pOpcion.equals("1")){
       
          utils_DB.getEjecutarConsulta(this.getDBTransaction(),"update sis_asignacion_regper set email_institucional='"+pCorreo.trim()+"' where registro_temporal="+pIdReg);
          utils_DB.getEjecutarConsulta(this.getDBTransaction(),"update sis_empleado set email_institucional='"+pCorreo.trim()+"' where registro_empleado="+pRegistro);
       
       }else if(pOpcion.equals("2")){ //Error
       
        utils_DB.getEjecutarConsulta(this.getDBTransaction(),"update sis_asignacion_regper set email_institucional='ER' where registro_temporal="+pIdReg);
        
       }
   }
    
    public void rechazaAsignacion(String pRegistro){
        utils_DB.getEjecutarConsulta(this.getDBTransaction(),"update sis_empleado set id_estado = 140 where registro_empleado="+pRegistro);
        this.getDBTransaction().commit();
        //throw new JboException("Se ha objetado el registro temporal "+ pRegistro); 
    }
}
