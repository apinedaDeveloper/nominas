package enlace_datos.consultas.gestiones.cheques;


import enlace_datos.consultas.gestiones.cheques.common.view_SisDocPagoAnulado;

import enlace_datos.util.utils;
import enlace_datos.util.utils_DB;

import java.math.BigDecimal;

import oracle.jbo.NameValuePairs;
import oracle.jbo.domain.Number;

import java.sql.CallableStatement;

import oracle.jbo.JboException;
import oracle.jbo.server.ViewObjectImpl;

import oracle.jdbc.OracleTypes;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class view_SisDocPagoAnuladoImpl extends ViewObjectImpl implements view_SisDocPagoAnulado {
    /**This is the default constructor (do not remove)
     */
    public view_SisDocPagoAnuladoImpl() {
    }
    
    public int verificarPago_Anular(Number pRegEmpleado,Number pIdPago,String pRecalculo){
      int vResultado=-1;
        String str_proc;
        str_proc="call sis_pkg_procs.verificarChequeAnular(?,?,?)";
        CallableStatement cl_proc;
        if (pRecalculo!=null && pRecalculo.equals("SI")){
                try{
                    cl_proc=this.getDBTransaction().createCallableStatement(str_proc,0);
                    cl_proc.setBigDecimal(1,pRegEmpleado.getBigDecimalValue());
                    cl_proc.setBigDecimal(2,pIdPago.getBigDecimalValue());
                    cl_proc.registerOutParameter(3,OracleTypes.NUMBER);
                    cl_proc.execute();
                    vResultado=(int)cl_proc.getLong(3);
                    cl_proc.close();
                    
                  
                }catch(Exception exep){
                
                    vResultado=-1;
                }
        }else{
                    vResultado=1;
            
        }
      return vResultado;
        
    }
    
    public void facsimil_anulacheque (Number VchequeInicial, Number VchequeFinal, Number Vbanco,Number pIdTipoDoc){
            view_SisDocPagoAnuladoRowImpl fila;
            NameValuePairs datos;
            int cantAnular;
            datos = new NameValuePairs();
            String consulBanco = "select nombre from sis_banco\n" + 
            "where id_banco =  "+ Vbanco;
            
            Object nomBanco = utils_DB.getEjecutarQuerry(this.getDBTransaction(),consulBanco);
            
            if((VchequeFinal == null) ||(VchequeFinal !=null && VchequeFinal.equals(""))){  //solo viene 1 cheque
                String consulta = "select id_documento_banco from sis_documento_banco\n" + 
                "where id_tipo_documento="+pIdTipoDoc+" and num_doc_fisico = "+ VchequeInicial + "  and id_banco = " + Vbanco +"  and fecha_anulacion is null";
                Object resulConsul = utils_DB.getEjecutarQuerry(this.getDBTransaction(),consulta);
                if(resulConsul == null){ // no existe el cheque a anular
                  //  System.out.println("exeption de anular cheque");
                  //  throw utils.getAttributeException("","PchequeInicial","VAL_OBLIGATORIO",null);
                   throw new JboException("EL NUM DOC   "+ VchequeInicial + "  NO EXISTE; VERIFIQUE LOS DATOS ");
                    
                }
                else { //anulando el cheque
                    datos.setAttribute("IdDocPago",resulConsul);
                
                    consulta = "select id_estado from sis_estado_docpago_anulado_vw\n" + 
                    "where nombre ='NO PROCESADO'";
                    resulConsul = utils_DB.getEjecutarQuerry(this.getDBTransaction(),consulta);
                    datos.setAttribute("IdEstado",resulConsul);
                    datos.setAttribute("Reposicion","SI");
                    datos.setAttribute("Tipodocument",(pIdTipoDoc.compareTo(1)==0?"CHEQUE":"ACREDITAMIENTO"));
                    datos.setAttribute("IdMotivoAnulacion","14");
                    datos.setAttribute("NoDocFisico",VchequeInicial);
                    datos.setAttribute("SolicitadoPor",utils.getAuthUser(this.getDBTransaction()));
                   // datos.setAttribute("NomBanco",nomBanco);
                    VchequeInicial = VchequeInicial.add(1);
                                    
                    fila = (view_SisDocPagoAnuladoRowImpl) this.createAndInitRow(datos);
                    fila.setNomBanco(nomBanco.toString().trim());
                    this.insertRow(fila);
                }
            }
            else{ //viene un rango de cheques a anular
                cantAnular = VchequeFinal.intValue() - VchequeInicial.intValue() + 1; 
                int aux = 1;
                //String Consulta = new String("");
                if (cantAnular > 0){
                    while (aux <= cantAnular){
                        //obtengo el id del documento de pago
                        String consulta = "select id_documento_banco from sis_documento_banco\n" + 
                        "where id_tipo_documento="+pIdTipoDoc+" and num_doc_fisico = "+ VchequeInicial + "  and id_banco = " + Vbanco+ "  and fecha_anulacion is null";
                        
                        Object resulConsul = utils_DB.getEjecutarQuerry(this.getDBTransaction(),consulta);
                        if(resulConsul == null){
                            aux = cantAnular + 1;
                            throw new JboException("EL NUM DOC  "+ VchequeInicial + "  NO EXISTE; VERIFIQUE LOS DATOS ");
                            
                        }
                        else {
                            datos.setAttribute("IdDocPago",resulConsul);
                    
                            consulta = "select id_estado from sis_estado_docpago_anulado_vw\n" + 
                            "where nombre ='NO PROCESADO'";
                            resulConsul = utils_DB.getEjecutarQuerry(this.getDBTransaction(),consulta);
                            datos.setAttribute("IdEstado",resulConsul);
                            datos.setAttribute("Reposicion","SI");
                            datos.setAttribute("Tipodocument",(pIdTipoDoc.compareTo(1)==0?"CHEQUE":"ACREDITAMIENTO"));
                            datos.setAttribute("IdMotivoAnulacion","14");
                            datos.setAttribute("NoDocFisico",VchequeInicial);
                            datos.setAttribute("SolicitadoPor",utils.getAuthUser(this.getDBTransaction()));
                            //datos.setAttribute("NomBanco",nomBanco);
                            VchequeInicial = VchequeInicial.add(1);
                            aux++;
                            
                            fila = (view_SisDocPagoAnuladoRowImpl) this.createAndInitRow(datos);
                            fila.setNomBanco(nomBanco.toString().trim());
                            this.insertRow(fila);
                        }
                    }  //fin while
                }else{
                    throw new JboException("NO SE PUEDEN ANULAR LOS DOCUMENTOS, EL DOCUMENTO FINAL ES INCORRECTO");
                }
            }// fin if
            
        }
    
}
