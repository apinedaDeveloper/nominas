package enlace_datos.consultas.procesos;

import java.sql.ResultSet;

import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class nominas_a_liquidarImpl extends ViewObjectImpl {
    /**This is the default constructor (do not remove)
     */
    public nominas_a_liquidarImpl() {
    }

    /**Gets the bind variable value for pDependencia
     */
    public Integer getpDependencia() {
        return (Integer)getNamedWhereClauseParam("pDependencia");
    }

    /**Sets <code>value</code> for bind variable pDependencia
     */
    public void setpDependencia(Integer value) {
        setNamedWhereClauseParam("pDependencia", value);
    }

    /**Gets the bind variable value for pUnidad
     */
    public Integer getpUnidad() {
        return (Integer)getNamedWhereClauseParam("pUnidad");
    }

    /**Sets <code>value</code> for bind variable pUnidad
     */
    public void setpUnidad(Integer value) {
        setNamedWhereClauseParam("pUnidad", value);
    }

    /**Gets the bind variable value for pPrograma
     */
    public Integer getpPrograma() {
        return (Integer)getNamedWhereClauseParam("pPrograma");
    }

    /**Sets <code>value</code> for bind variable pPrograma
     */
    public void setpPrograma(Integer value) {
        setNamedWhereClauseParam("pPrograma", value);
    }


    /**Gets the bind variable value for dependenciaCompleta
     */
    public String getdependenciaCompleta() {
        return (String)getNamedWhereClauseParam("dependenciaCompleta");
    }

    /**Sets <code>value</code> for bind variable dependenciaCompleta
     */
    public void setdependenciaCompleta(String value) {
        setNamedWhereClauseParam("dependenciaCompleta", value);
    }

    /**executeQueryForCollection - overridden for custom java data source support.
     */
    protected void executeQueryForCollection(Object qc, Object params[], int noUserParams) {
    
                
     if(this.getpPrograma()==null){
        this.setpPrograma(new Integer(1)); 
     }
     if (this.getpUnidad()==null){
         this.setpUnidad(new Integer(1));
     }
     
     String restriccion1=" ID_UNIDAD= "+this.getpUnidad()+
                                " and ID_PROGRAMA= "+this.getpPrograma()+
                                " and not exists "+
                                " (select 1 from sis_liquidacion  x where "+
                                " x.ID_DEPENDENCIA_UN= "+this.getpDependencia()+
                                " and x.ID_UNIDAD_UN=  "+this.getpUnidad()+
                                " and x.ID_PROGRAMA_UN= "+this.getpPrograma()+
                                " and x.ID_PROCESO=QRSLT.ID_PROCESO)";   
                                
                                
                String restriccion2=" not exists "+
                                   " (select 1 from sis_liquidacion  x where "+
                                   " x.ID_DEPENDENCIA= "+this.getpDependencia()+
                                   " and x.ID_PROCESO=QRSLT.ID_PROCESO)";                                    
                
        
        if(this.getdependenciaCompleta()!=null){
           if (this.getdependenciaCompleta().equals("true")) {
              this.setWhereClause(restriccion2);

            /*
               System.out.println( " ****--------- ENTRA AQUI --------******");
               System.out.println( "Consultita:"+ this.getQuery());
               System.out.println( "Consultita :"+ this.getdependenciaCompleta());
*/
           }else{
               this.setWhereClause(restriccion1);
//               System.out.println( "Consultita2:"+ this.getQuery());

           }
           
        }
        //super.executeQueryForCollection(qc, params, noUserParams);
         super.executeQueryForCollection(qc, this.getWhereClauseParams(), noUserParams);
    }

    /**hasNextForCollection - overridden for custom java data source support.
     */
    protected boolean hasNextForCollection(Object qc) {
        boolean bRet = super.hasNextForCollection(qc);
        return bRet;
    }

    /**createRowFromResultSet - overridden for custom java data source support.
     */
    protected ViewRowImpl createRowFromResultSet(Object qc, 
                                                 ResultSet resultSet) {
        ViewRowImpl value = super.createRowFromResultSet(qc, resultSet);
        return value;
    }

    /**getEstimatedRowCount - overridden for custom java data source support.
     */
    public long getEstimatedRowCount() {
        long value = super.getEstimatedRowCount();
        return value;
    }
}
